<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[通过logstash过滤日志触发脚本执行]]></title>
      <url>http://www.zhou5zhou6.com/2016/12/01/logstash-command/</url>
      <content type="html"><![CDATA[<p>最近业务有一个需求，根据日志过滤出用户请求把用户从当前用户踢掉<br><a id="more"></a><br>方案：<br>1.crontab 执行某个脚本过滤日志，然后触发某个脚本运行<br>2.使用logstash的file和command插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    file &#123;</div><div class="line">        type =&gt; &quot;msync_log&quot;</div><div class="line">        path =&gt; &quot;/data/apps/opt/msync/log/info.log&quot;</div><div class="line">        sincedb_path =&gt; &quot;/data/apps/opt/msync/log/info.log&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">filter &#123;</div><div class="line">    if [type] == &quot;msync_log&quot; and [message] =~ &quot;open_session&quot; &#123;</div><div class="line">        if [message] =~ &quot;xxx&quot; &#123;</div><div class="line">        grok &#123;</div><div class="line">            match =&gt; [</div><div class="line">                &quot;message&quot;,&quot;%&#123;TIMESTAMP_ISO8601:timestamp&#125; \[%&#123;WORD:level&#125;\] \&lt;%&#123;DATA&#125;\&gt;\@%&#123;WORD&#125;\:%&#123;WORD:type&#125;\:%&#123;NUMBER&#125; \(%&#123;IP&#125;\) %&#123;WORD&#125; %&#123;WORD&#125; %&#123;WORD&#125; %&#123;WORD&#125; %&#123;DATA:org&#125;\#%&#123;DATA:app&#125;\_%&#123;DATA:target&#125;\@%&#123;WORD&#125;&quot;</div><div class="line">                ]</div><div class="line">            remove_field =&gt; [&quot;message&quot;,&quot;timestamp&quot;,&quot;level&quot;,&quot;type&quot;]</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        &#125;else &#123; drop&#123;&#125;&#125;</div><div class="line">    &#125;</div><div class="line">    else &#123; drop&#123;&#125;&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">output &#123;</div><div class="line"></div><div class="line">#    stdout &#123; codec =&gt; rubydebug &#125;</div><div class="line">        exec &#123;</div><div class="line">        command =&gt; &quot;python /data/shell/kickuser/kickmsyncuser.py %&#123;org&#125; %&#123;app&#125; %&#123;target&#125; &gt;&gt;/data/apps/opt/logstash-2.1.1/kickuser.log&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Where to write the sincedb database (keeps track of the current position of monitored log files). The default will write sincedb files to some path matching “$HOME/.sincedb*”</div></pre></td></tr></table></figure></p>
<p>解决方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">file模块加上</div><div class="line">        sincedb_path =&gt; &quot;/data/apps/opt/msync/log/info.log&quot;</div></pre></td></tr></table></figure>
<p><a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html" target="_blank" rel="external">https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python error list]]></title>
      <url>http://www.zhou5zhou6.com/2016/11/29/python-error/</url>
      <content type="html"><![CDATA[<p>python使用过程中的各种报错统计<br><a id="more"></a></p>
<h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">yum output:</div><div class="line">python-crypto-2.6.1-1.el7.rf.x86_64.rpm | 456 kB 00:00:00</div><div class="line">Running transaction check</div><div class="line">Running transaction test</div><div class="line">Transaction test succeeded</div><div class="line">Running transaction</div><div class="line">  Installing : python-crypto-2.6.1-1.el7.rf.x86_64 1/1</div><div class="line">Error unpacking rpm package python-crypto-2.6.1-1.el7.rf.x86_64</div><div class="line">error: unpacking of archive failed on file /usr/lib64/python2.7/site-packages/pycrypto-2.6.1-py2.7.egg-info: cpio: rename</div><div class="line">  Verifying : python-crypto-2.6.1-1.el7.rf.x86_64 1/1</div><div class="line"></div><div class="line">Failed:</div><div class="line">  python-crypto.x86_64 0:2.6.1-1.el7.rf</div></pre></td></tr></table></figure>
<p>解决方法</p>
<blockquote>
<p>rm -f /usr/lib64/python2.7/site-packages/pycrypto-2.6.1-py2.7.egg-info</p>
</blockquote>
<h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">InsecurePlatformWarning</div><div class="line">/usr/lib/python2.7/site-packages/requests/packages/urllib3/util/ssl_.py:120: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.</div><div class="line">  InsecurePlatformWarning</div><div class="line">/usr/lib/python2.7/site-packages/requests/packages/urllib3/util/ssl_.py:120: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.</div></pre></td></tr></table></figure>
<p>解决方法：</p>
<blockquote>
<p>yum install python-devel libffi-devel openssl-devel<br>pip install pyopenssl ndg-httpsclient pyasn1</p>
</blockquote>
<h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">    import requests</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/requests/__init__.py&quot;, line 60, in &lt;module&gt;</div><div class="line">    from .api import request, get, head, post, patch, put, delete, options</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/requests/api.py&quot;, line 14, in &lt;module&gt;</div><div class="line">    from . import sessions</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/requests/sessions.py&quot;, line 27, in &lt;module&gt;</div><div class="line">    from .adapters import HTTPAdapter</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/requests/adapters.py&quot;, line 29, in &lt;module&gt;</div><div class="line">    from .packages.urllib3.exceptions import ResponseError</div><div class="line">ImportError: cannot import name ResponseError</div></pre></td></tr></table></figure>
<p>解决方法</p>
<blockquote>
<p>rpm -e python-requests<br>rm -rf /usr/lib/python2.6/site-packages/requests/<br>yum install python-requests</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[centos7 modify hostname]]></title>
      <url>http://www.zhou5zhou6.com/2016/11/17/modifyhostname/</url>
      <content type="html"><![CDATA[<p>最近在aws上面修改centos7的的hostname，重启后总是失效<br><a id="more"></a><br>解决方法<br>1.编辑/etc/sysconfig/network<br>2.编辑/etc/hostname<br>3.编辑/etc/cloud/cloud.cfg<br>添加如下的参数</p>
<blockquote>
<p>preserve_hostname: true</p>
</blockquote>
<p>重启搞定</p>
<p>延伸阅读<br>hostnamectl修改主机名字</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[bind_dlz_mysql]]></title>
      <url>http://www.zhou5zhou6.com/2016/02/01/bind_dlz_mysql/</url>
      <content type="html"><![CDATA[<p>##一。安装包下载<br><a href="ftp://ftp.isc.org/isc/bind9/cur/9.10/bind-9.10.3-P3.tar.gz" target="_blank" rel="external">bind</a><br><a href="http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.10.tar.gz" target="_blank" rel="external">mysql</a><br><a href="http://sourceforge.net/projects/boost/files/boost/1.59.0/boost_1_59_0.tar.gz" target="_blank" rel="external">boost</a></p>
<a id="more"></a>
<p>注意mysql5.7如果想通过编译安装，里面boost库是必须的，如果不安装会报以下信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">-- BOOST_INCLUDE_DIR BOOST_INCLUDE_DIR-NOTFOUND</div><div class="line">-- LOCAL_BOOST_DIR</div><div class="line">-- LOCAL_BOOST_ZIP</div><div class="line">-- Could not find (the correct version of) boost.</div><div class="line">-- MySQL currently requires boost_1_59_0</div><div class="line"></div><div class="line">CMake Error at cmake/boost.cmake:76 (MESSAGE):</div><div class="line">  You can download it with -DDOWNLOAD_BOOST=1 -DWITH_BOOST=&lt;directory&gt;</div><div class="line"></div><div class="line">  This CMake script will look for boost in &lt;directory&gt;.  If it is not there,</div><div class="line">  it will download and unpack it (in that directory) for you.</div><div class="line"></div><div class="line">  If you are inside a firewall, you may need to use an http proxy:</div><div class="line"></div><div class="line">  export http_proxy=http://example.com:80</div><div class="line"></div><div class="line">Call Stack (most recent call first):</div><div class="line">  cmake/boost.cmake:228 (COULD_NOT_FIND_BOOST)</div><div class="line">  CMakeLists.txt:435 (INCLUDE)</div></pre></td></tr></table></figure></p>
<p>另外服务器内存必须大于1G，否则mysql编译安装的时候会报以下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[ 39%] Building CXX object sql/CMakeFiles/sql.dir/item_geofunc.cc.o</div><div class="line">c++: 内部错误：已杀死 (程序 cc1plus)</div><div class="line">请提交一份完整的错误报告。</div><div class="line">具体步骤请参见 &lt;http://bugzilla.redhat.com/bugzilla&gt;。</div><div class="line">make[2]: *** [sql/CMakeFiles/sql.dir/item_geofunc.cc.o] 错误 1</div><div class="line">make[1]: *** [sql/CMakeFiles/sql.dir/all] 错误 2</div><div class="line">make: *** [all] 错误 2</div></pre></td></tr></table></figure></p>
<p>##二。安装过程</p>
<p>###mysql通过tar包编译安装</p>
<p>####1.安装各种依赖包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y cmake gcc ncurses-deve openssl openssl-devel</div></pre></td></tr></table></figure></p>
<p>####2.安装mysql</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">groupadd mysql</div><div class="line">useradd -r -g mysql mysql</div><div class="line">mkdir -p /usr/local/mysql</div><div class="line">mkdir -p /data/mysqldb</div><div class="line">chown -R mysql:mysql /usr/local/mysql</div><div class="line">chown -R mysql:mysql /data/mysqldb</div><div class="line">###安装boost</div><div class="line">tar zxvf boost_1_59_0.tar.gz</div><div class="line">cd boost_1_59_0</div><div class="line">./bootstrap.sh</div><div class="line">./b2 install</div><div class="line">###安装mysql</div><div class="line">tar zxvf mysql-5.7.10.tar.gz</div><div class="line">cd mysql-5.7.10</div><div class="line">cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DDEFAULT_CHARSET=utf8 -DMYSQL_DATADIR=/data/mysql/  -DDEFAULT_COLLATION=utf8_general_ci</div><div class="line">make</div><div class="line">make install</div><div class="line"></div><div class="line">####启动mysql之前的配置</div><div class="line">ln -s /usr/local/mysql/lib/libmysqlclient.so.20  /usr/lib64/</div><div class="line">cp support-files/mysql.server /etc/init.d/mysql</div><div class="line">/usr/local/mysql/bin/mysqld  --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql</div><div class="line">进入mysql，修改password；set password for &apos;root&apos;@&apos;localhost&apos;=password(&apos;xxoo&apos;);</div><div class="line"></div><div class="line">####安装bind</div><div class="line">tar zxvf bind-9.10.3-P3.tar.gz</div><div class="line">cd bind-9.10.3-P3</div><div class="line">./configure --enable-largefile --with-openssl=yes --with-dlz-mysql=/usr/local/mysql/ --prefix=/usr/local/bind-9.10.3-P3</div><div class="line">make</div><div class="line">make install</div><div class="line">ln -s /usr/local/bind-9.10.3-P3/ /usr/local/bind</div><div class="line">chown -hR named:named /usr/local/bind/var</div><div class="line">/usr/local/bind/sbin/named -u named -c /usr/local/bind/etc/named.conf</div></pre></td></tr></table></figure>
<p>####mysql通过yum安装和以上不同的 地方是，bind指定编译参数的时候不要指定mysql的路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure --prefix /opt/bind --with-dlz-filesystem --with-dlz-mysql</div></pre></td></tr></table></figure>
<p>三，配置bind<br>请参考<br><a href="http://www.vfeelit.com/610.html" target="_blank" rel="external">http://www.vfeelit.com/610.html</a><br><a href="http://xdays.me/Bind%E5%9F%BA%E4%BA%8EDLZ%E5%AE%9E%E7%8E%B0%E6%99%BA%E8%83%BDDNS.html" target="_blank" rel="external">http://xdays.me/Bind%E5%9F%BA%E4%BA%8EDLZ%E5%AE%9E%E7%8E%B0%E6%99%BA%E8%83%BDDNS.html</a></p>
<p>注意：</p>
<p>1.如果发现mysql或者bind无法启动，注意分析日志；<br>2.客户端配置好的dns解析不生效<br>注意清理一下dns缓存<br>方法如下<br>1&gt;nscd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service nscd restart</div></pre></td></tr></table></figure></p>
<p>2&gt;dnsmasq缓存<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service dnsmasq restart</div></pre></td></tr></table></figure></p>
<p>3&gt;bind的dns缓存<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/named restart</div><div class="line">或者</div><div class="line">rndc restart</div><div class="line">或者</div><div class="line">rndc flushname xxxo</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[jenkins]]></title>
      <url>http://www.zhou5zhou6.com/2016/01/19/jenkins/</url>
      <content type="html"><![CDATA[<p>#INSTALL</p>
<p>####一.install tomcat<br><a href="http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.tar.gz" target="_blank" rel="external">jdk</a><br><a href="http://apache.cs.utah.edu/tomcat/tomcat-7/v7.0.67/bin/apache-tomcat-7.0.67.tar.gz" target="_blank" rel="external">tomcat</a><br><a id="more"></a></p>
<p>#####1.安装jdk<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /usr/java</div><div class="line">tar zxvf jdk-7u79-linux-x64.tar.gz -C /usr/java/</div></pre></td></tr></table></figure></p>
<p>#####2.安装tomcat<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tar zxvf apache-tomcat-7.0.67.tar.gz</div><div class="line">mv apache-tomcat-7.0.67 apache-tomcat</div><div class="line">mv apache-tomcat /letv/</div></pre></td></tr></table></figure></p>
<p>#####3.配置环境变量<br>编辑/etc/profile;追加以下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/java/jdk1.7.0_79</div><div class="line">export CLASSPATH=/usr/java/jdk1.7.0_79/lib</div><div class="line">export PATH=$JAVA_HOME/bin:$PATH</div><div class="line">export TOMCAT_HOME=/letv/apache-tomcat/</div></pre></td></tr></table></figure></p>
<p>#####4.修改配置<br>修改server.xml，绑定ip，设置字符集<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;Connector port=&quot;8080&quot; URIEncoding=&quot;UTF-8&quot; address=&quot;10.182.xx.xx&quot; protocol=&quot;HTTP/1.1&quot;</div></pre></td></tr></table></figure></p>
<p>#####5.启动tomcat<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/letv/apache-tomcat/bin/catalina.sh start</div></pre></td></tr></table></figure></p>
<p>####二.install jenkins</p>
<p>#####1.下载jenkins的war包<br><a href="http://mirrors.jenkins-ci.org/war/latest/jenkins.war" target="_blank" rel="external">下载地址</a><br>将jenkins.war包拷贝到tomcat的webapps目录下<br>重启tomcat<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/letv/apache-tomcat/bin/catalina.sh stop;/letv/apache-tomcat/bin/catalina.sh start</div></pre></td></tr></table></figure></p>
<p>在浏览器访问：<a href="http://ip:8080/jenkins/" target="_blank" rel="external">http://ip:8080/jenkins/</a></p>
<p>####三.配置jenkins</p>
<p>#####1.配置邮件<br>注意 system admin e-mail address 一定要和发件人邮箱保持一致否则测试邮箱配置的时候会报以下错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Failed to send out e-mail</div><div class="line"></div><div class="line">com.sun.mail.smtp.SMTPSendFailedException: 553 Mail from must equal authorized user</div><div class="line">;</div><div class="line">  nested exception is:</div><div class="line">    com.sun.mail.smtp.SMTPSenderFailedException: 553 Mail from must equal authorized user</div><div class="line"></div><div class="line"></div><div class="line">    at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:2057)</div></pre></td></tr></table></figure>
<p>未完待续</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[google-authenticator]]></title>
      <url>http://www.zhou5zhou6.com/2015/12/15/google-authenticator/</url>
      <content type="html"><![CDATA[<p>结合ldap和google-authenticator 完成两步验证<br><a id="more"></a><br>一，</p>
<p>下载所需安装包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum -y install wget gcc make pam-devel libpng-devel</div><div class="line">git clone https://github.com/google/google-authenticator.git</div><div class="line">wget -N http://arthurdejong.org/nss-pam-ldapd/nss-pam-ldapd-0.9.6.tar.gz</div></pre></td></tr></table></figure></p>
<p>二.<br>1&gt;安装配置google-authenticator<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd google-authenticator/libpam/</div><div class="line">./bootstrap.sh</div><div class="line">./configure</div><div class="line">make</div><div class="line">make install</div><div class="line">ln -s /usr/local/lib/security/pam_google_authenticator.so /lib64/security/pam_google_authenticator.so</div><div class="line">ln -s /lib/security/pam_ldap.so /lib64/security/pam_ldap.so</div></pre></td></tr></table></figure></p>
<p>配置ssh登陆加入谷歌认证模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#%PAM-1.0</div><div class="line">auth       required pam_google_authenticator.so forward_pass nullok</div><div class="line">auth       required pam_sepermit.so</div><div class="line">auth       include      password-auth</div><div class="line">account    required     pam_nologin.so</div><div class="line">account    include      password-auth</div><div class="line">password   include      password-auth</div><div class="line"># pam_selinux.so close should be the first session rule</div><div class="line">session    required     pam_selinux.so close</div><div class="line">session    required     pam_loginuid.so</div><div class="line"># pam_selinux.so open should only be followed by sessions to be executed in the user context</div><div class="line">session    required     pam_selinux.so open env_params</div><div class="line">session    optional     pam_keyinit.so force revoke</div><div class="line">session    include      password-auth</div></pre></td></tr></table></figure></p>
<p>修改/etc/ssh/sshd_config，保证有下面两行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ChallengeResponseAuthentication yes</div><div class="line"></div><div class="line">UsePAM yes</div></pre></td></tr></table></figure></p>
<p>2&gt;安装配置nss-pam</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">yum install openldap openldap-devel</div><div class="line">tar zxvf nss-pam-ldapd-0.9.6.tar.gz</div><div class="line">cd nss-pam-ldapd-0.9.6</div><div class="line">./configure</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
<p>编辑/etc/nslcd.conf 配置ldap</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">uid nslcd</div><div class="line">gid ldap</div><div class="line">uri ldap://x.x.x.x/ ldap://o.o.o.o ldap://xo.xo.xo.xo</div></pre></td></tr></table></figure>
<p>编辑  /etc/nsswitch.conf  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">passwd:     files ldap</div><div class="line">shadow:     files ldap</div><div class="line">group:      files ldap</div><div class="line">hosts:      files dns</div><div class="line">bootparams: nisplus [NOTFOUND=return] files</div><div class="line">ethers:     files</div><div class="line">netmasks:   files</div><div class="line">networks:   files</div><div class="line">protocols:  files</div><div class="line">rpc:        files</div><div class="line">services:   files</div><div class="line">netgroup:   files ldap</div><div class="line">publickey:  nisplus</div><div class="line">automount:  files ldap</div><div class="line">aliases:    files nisplus</div></pre></td></tr></table></figure>
<p>编辑/etc/pam.conf or /etc/pam.d/*</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">fingerprint-auth:account     [default=bad success=ok user_unknown=ignore] pam_ldap.so</div><div class="line">fingerprint-auth:session     optional      pam_ldap.so</div><div class="line">fingerprint-auth-ac:account     [default=bad success=ok user_unknown=ignore] pam_ldap.so</div><div class="line">fingerprint-auth-ac:session     optional      pam_ldap.so</div><div class="line">password-auth:auth        sufficient    pam_ldap.so use_first_pass</div><div class="line">password-auth:account     [default=bad success=ok user_unknown=ignore] pam_ldap.so</div><div class="line">password-auth:password    sufficient    pam_ldap.so use_authtok</div><div class="line">password-auth:session     optional      pam_ldap.so</div><div class="line">password-auth-ac:auth        sufficient    pam_ldap.so use_first_pass</div><div class="line">password-auth-ac:account     [default=bad success=ok user_unknown=ignore] pam_ldap.so</div><div class="line">password-auth-ac:password    sufficient    pam_ldap.so use_authtok</div><div class="line">password-auth-ac:session     optional      pam_ldap.so</div><div class="line">smartcard-auth:account     [default=bad success=ok user_unknown=ignore] pam_ldap.so</div><div class="line">smartcard-auth:session     optional      pam_ldap.so</div><div class="line">smartcard-auth-ac:account     [default=bad success=ok user_unknown=ignore] pam_ldap.so</div><div class="line">smartcard-auth-ac:session     optional      pam_ldap.so</div><div class="line">system-auth:auth        sufficient    pam_ldap.so use_first_pass</div><div class="line">system-auth:account     [default=bad success=ok user_unknown=ignore] pam_ldap.so</div><div class="line">system-auth:password    sufficient    pam_ldap.so use_authtok</div><div class="line">system-auth:session     optional      pam_ldap.so</div><div class="line">system-auth-ac:auth        sufficient    pam_ldap.so use_first_pass</div><div class="line">system-auth-ac:account     [default=bad success=ok user_unknown=ignore] pam_ldap.so</div><div class="line">system-auth-ac:password    sufficient    pam_ldap.so use_authtok</div><div class="line">system-auth-ac:session     optional      pam_ldap.so</div></pre></td></tr></table></figure>
<p>三.使用</p>
<p>服务器端生成动态验证码：./google-authenticator<br>手机客户端<br><a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;hl=en_GB" target="_blank" rel="external">Google Authenticator Android</a><br><a href="https://itunes.apple.com/gb/app/google-authenticator/id388497605?mt=8" target="_blank" rel="external">Google Authenticator iOS</a><br><a href="http://www.windowsphone.com/en-gb/store/app/authenticator/e7994dbc-2336-4950-91ba-ca22d653759b" target="_blank" rel="external">Authenticator for Windows Phone</a><br><a href="http://matthill.eu/linux/ssh-two-factor-authentication-google/m.google.com/authenticator" target="_blank" rel="external">Blackberry</a></p>
<p>from</p>
<p><a href="http://arthurdejong.org/nss-pam-ldapd/setup" target="_blank" rel="external">nss-pam-ldapd</a><br><a href="https://github.com/google/google-authenticator/tree/master/libpam" target="_blank" rel="external">google-authenticator</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ntpd更新时间]]></title>
      <url>http://www.zhou5zhou6.com/2015/10/16/ntpd/</url>
      <content type="html"><![CDATA[<p>1.本地执行date报以下信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Fri Oct 16 07:09:19 Local time zone must be set--see zic manual page 2015</div></pre></td></tr></table></figure></p>
<p>检查/etc/sysconfig/clock 和 /etc/localtime 均配置正常<br>执行后发现还是有问题<br>最后修改了一下环境变量,就能正常使用了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TZ=&apos;Asia/Shanghai&apos; ; export TZ</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[puppet_modify_password]]></title>
      <url>http://www.zhou5zhou6.com/2015/08/24/puppet_modify_password/</url>
      <content type="html"><![CDATA[<p>通过puppet的user修改密码失败提示以下信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">info: /User[zabbix]: Provider useradd does not support features manages_passwords; not managing attribute password</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>一开始怀疑版本问题，升级客户端版本后依旧不行<br>最后谷歌发现时一个安装包的问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install ruby-shadow</div></pre></td></tr></table></figure></p>
<p>再次执行更新</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">notice: /Stage[main]/Systembase_cdn_dev::User/User[zabbix]/password: changed password</div></pre></td></tr></table></figure>
<p>from <a href="http://www.puppetcookbook.com/posts/managing-user-password-fails.html" target="_blank" rel="external">managing-user-password-fails</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[systemtap_install]]></title>
      <url>http://www.zhou5zhou6.com/2015/07/17/systemtap_install/</url>
      <content type="html"><![CDATA[<p>最近一个机器的cpu sy很高，cs切换很频繁，估计是某个程序有问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----</div><div class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</div><div class="line">12  4 1921224 851056   3288 4268828    1    7 14422  2270    0    0  6 14 57 24  0</div><div class="line">19  2 1921228 866648   3288 4240524    0    4 81520 20471 77085 1657871 16 71  8  5  0</div><div class="line">11  0 1921228 867340   3280 4241312    0    0 63484 17729 77097 1670401 17 69 12  2  0</div><div class="line">13  0 1921228 868596   3288 4233176    0    0 52852 17931 70692 1737849 17 70 11  3  0</div><div class="line">17  0 1921228 871384   3280 4228236    0    0 67400 25778 77112 1679067 16 69 13  2  0</div><div class="line">21  1 1921228 866268   3296 4232780    0    0 64408 19465 75566 1671655 17 69 13  1  0</div><div class="line"> 5  0 1921228 815304   3280 4283268    0    0 74260 17012 73822 1679299 18 70 11  1  0</div><div class="line">15  2 1921228 757480   3288 4336520    0    0 53720  9204 67308 1766932 17 69 13  1  0</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>然后通过dstat –top-cpu或者ps查看占用高的进程ps -eo pid,ni,pri,pcpu,psr,comm| sort -nr -k4| more</p>
<p>不过如果想查看cpu的cs切换的详细信息还必须依赖systemtap了</p>
<p>简单的安装步骤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install systemtap systemtap-runtime</div></pre></td></tr></table></figure></p>
<p>检查安装内核包，主要包括</p>
<pre><code>kernel-debuginfo
kernel-debuginfo-common
kernel-devel
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">stap-prep</div></pre></td></tr></table></figure>
<p>所安装的包必须与当前的内核版本一致</p>
<p>systemtap安装好后就可以用stap命令配合stap脚本分析了</p>
<p>备忘:注意，stap执行的时候会报 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ERROR: Array overflow, check MAXMAPENTRIES near identifier ‘a’ at test.stp:6:5</div></pre></td></tr></table></figure>
<p>这个时候要加上-DMAXMAPENTRIES=10240  把这个值调大</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ERROR: probe overhead exceeded threshold</div></pre></td></tr></table></figure>
<p>用STP_NO_OVERLOAD来解除这个限制</p>
<p>参考资料<br><a href="http://segmentfault.com/a/1190000000671438" target="_blank" rel="external">install</a><br><a href="http://segmentfault.com/a/1190000000680628" target="_blank" rel="external">systemtap脚本</a><br><a href="http://blog.yufeng.info/archives/1213" target="_blank" rel="external">ERROR: Array overflow解决方法</a><br><a href="http://www.cnblogs.com/ggjucheng/archive/2012/01/05/2312625.html" target="_blank" rel="external">vmstat</a><br><a href="http://www.vpsee.com/2009/11/linux-system-performance-monitoring-cpu/" target="_blank" rel="external">cpu</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tcpcopy笔记]]></title>
      <url>http://www.zhou5zhou6.com/2015/07/10/tcpcopy/</url>
      <content type="html"><![CDATA[<p>#通过tcpcopy压力测试</p>
<p>##下载<br><a href="https://github.com/session-replay-tools/intercept/releases" target="_blank" rel="external">intercept下载</a></p>
<p><a href="https://github.com/session-replay-tools/tcpcopy/releases" target="_blank" rel="external">tcpcopy下载</a></p>
<a id="more"></a>
<p>##安装</p>
<p>tcpcopy<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">./configure --prefix=/usr/local/tcpcopy</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>
<p>intercept<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install libpcap-devel</div><div class="line">./configure --prefix=/usr/local/intercept</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>
<p>##用法</p>
<p>###在线抓包</p>
<p>####A 线上服务器    安装tcpcopy</p>
<p>./tcpcopy -x A:80-B:80 -s C -l /var/log/tcpcopy.log -d</p>
<p>####B 测试服务器    </p>
<p> route add -host A gw C<br> 意思是将测试服务器B返回给客户端的响应走网关C，但是C 并没有开启路由模式，我们在C上运行intercept，用于抓获响应包</p>
<p>####C 辅助服务器    安装intercept<br>modprobe ip_queue<br>iptables -I OUTPUT -p tcp –sport <port> -j QUEUE<br>将响应结果发送至QUEUE（ip_queue），从而实现运行在用户态的进程对相关数据包进行裁定。<br>./intercept -i bond0 -F ‘tcp and src port 80’ -d</port></p>
<p>###离线抓包<br>A ： tcpdump -i bond0 tcp and port 80 -s 0 -w online.pcap<br>B ： 安装intercept，tcpcopy</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">modprobe ip_queue</div><div class="line">iptables -I OUTPUT -p tcp --sport &lt;port&gt; -j QUEUE</div><div class="line">将响应结果发送至QUEUE（ip_queue），从而实现运行在用户态的进程对相关数据包进行裁定。</div><div class="line">intercept</div><div class="line">将在线抓取的包回放</div><div class="line">tcpcopy -i &lt;抓包文件地址&gt; -x &lt;port&gt;-&lt;本地ip&gt;:&lt;port&gt;</div></pre></td></tr></table></figure>
<p>疑惑的地方<br>在线压测，发现测试服务器和在线服务器流量差很多。。。。<br>bonding 配置有问题。。。。等同事检查后，再测试看看</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mitmproxy]]></title>
      <url>http://www.zhou5zhou6.com/2015/06/04/mitmproxy/</url>
      <content type="html"><![CDATA[<p>###mac通过mitmproxy设置代理给手机抓包</p>
<p>##一、安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install mitmproxy</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>####1.安装过程中报错信息处理</p>
<p>#####1&gt;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -DUSE__THREAD -I/usr/include/ffi -I/usr/include/libffi -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c c/_cffi_backend.c -o build/temp.macosx-10.10-intel-2.7/c/_cffi_backend.o</div><div class="line"></div><div class="line">c/_cffi_backend.c:13:10: fatal error: &apos;ffi.h&apos; file not found</div><div class="line"></div><div class="line">#include &lt;ffi.h&gt;</div><div class="line"></div><div class="line">         ^</div><div class="line"></div><div class="line">1 error generated.</div><div class="line"></div><div class="line">error: command &apos;cc&apos; failed with exit status 1</div></pre></td></tr></table></figure></p>
<p>解决方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo xcode-select --install</div></pre></td></tr></table></figure>
<p>安装完毕后，就会在/usr/include里面看到常用的头文件了</p>
<p>#####2&gt;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">You are using an outdated version of pyOpenSSL: mitmproxy requires pyOpenSSL 0.14 or greater.</div><div class="line">Your pyOpenSSL 0.13.1 installation is located at /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/OpenSSL</div></pre></td></tr></table></figure></p>
<p>解决方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">https://pypi.python.org/packages/source/p/pyOpenSSL/pyOpenSSL-0.15.1.tar.gz#md5=f447644afcbd5f0a1f47350fec63a4c6</div><div class="line">tar zxvf pyOpenSSL-0.15.1.tar.gz</div><div class="line">cd pyOpenSSL-0.15.1</div><div class="line">sudo python setup.py install</div></pre></td></tr></table></figure>
<p>####2.使用<br>mac上面设置代理</p>
<blockquote>
<p>sudo mitmproxy -p 8080<br>然后在手机上面设置上台式机的ip和端口代理即可<br>（手机的网络配置）</p>
</blockquote>
<p><a href="http://mitmproxy.org/" target="_blank" rel="external">官网地址</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker_install]]></title>
      <url>http://www.zhou5zhou6.com/2015/06/03/dockerinstall/</url>
      <content type="html"><![CDATA[<p>####dock 安装  @centos<br>1.yum -y install docker-io</p>
<a id="more"></a>
<p>2./etc/init.d/docker start</p>
<p>3.查看docker信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">docker info</div><div class="line">Containers: 0</div><div class="line">Images: 0</div><div class="line">Storage Driver: devicemapper</div><div class="line"> Pool Name: docker-253:1-263347-pool</div><div class="line"> Pool Blocksize: 65.54 kB</div><div class="line"> Backing Filesystem: extfs</div><div class="line"> Data file: /dev/loop0</div><div class="line"> Metadata file: /dev/loop1</div><div class="line"> Data Space Used: 305.7 MB</div><div class="line"> Data Space Total: 107.4 GB</div><div class="line"> Metadata Space Used: 733.2 kB</div><div class="line"> Metadata Space Total: 2.147 GB</div><div class="line"> Udev Sync Supported: true</div><div class="line"> Data loop file: /var/lib/docker/devicemapper/devicemapper/data</div><div class="line"> Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata</div><div class="line"> Library Version: 1.02.89-RHEL6 (2014-09-01)</div><div class="line">Execution Driver: native-0.2</div><div class="line">Kernel Version: 2.6.32-925.431.23.3.letv.el6.x86_64</div><div class="line">Operating System: &lt;unknown&gt;</div><div class="line">CPUs: 24</div><div class="line">Total Memory: 62.87 GiB</div><div class="line">Name: CDN-xxx</div><div class="line">ID: WVDC:NHZ2:Q4TM:NM44:KJZ4:ODRO:3BIA:C5AK:TRZI:LR3P:CR32:5SVM</div></pre></td></tr></table></figure>
<p>执行过程报错</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">[root@CDN-xxx ~]# docker -d</div><div class="line">INFO[0000] +job serveapi(unix:///var/run/docker.sock)</div><div class="line">INFO[0000] Listening for HTTP on unix (/var/run/docker.sock)</div><div class="line">INFO[0000] WARNING: You are running linux kernel version 2.6.32-925.431.23.3.letv.el6.x86_64, which might be unstable running docker. Please upgrade your kernel to 3.8.0.</div><div class="line">docker: relocation error: docker: symbol dm_task_get_info_with_deferred_remove, version Base not defined in file libdevmapper.so.1.02 with link time reference</div></pre></td></tr></table></figure>
<p>解决方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install device-mapper-libs</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[slat-multi-master]]></title>
      <url>http://www.zhou5zhou6.com/2015/05/26/slat-multi-master/</url>
      <content type="html"><![CDATA[<p>##salt扩展</p>
<p>####多master横向扩展<br>1.机器B设置yum的epol源，安装salt-master<br>2.机器A上面通过nfs共享/etc/salt/pki/master配置<br><a id="more"></a><br>3.机器B mount A 的/etc/salt/pki/master；并把/etc/salt/的配置拷贝倒B的相同目录下<br>4.启动B机器的salt-master<br>5.配置minion为多个master即可<br>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">master:</div><div class="line">  - 机器A</div><div class="line">  - 机器B</div></pre></td></tr></table></figure></p>
<p><a href="http://docs.saltstack.com/en/latest/topics/tutorials/multimaster.html" target="_blank" rel="external">参考资料</a></p>
<p>####突破网络限制<br>有些机房有限制，禁止外网访问，这个时候就需要配置syndic<br>即通过master管理syndic，然后通过syndic管理minion机器</p>
<p><img src="http://7x00f8.com1.z0.glb.clouddn.com/zhou5zhou6salt-syndic.png" alt="结构图"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[yum下载rpm包]]></title>
      <url>http://www.zhou5zhou6.com/2015/05/20/yum_conf/</url>
      <content type="html"><![CDATA[<p>###yum仅下载rpm包，不进行安装<br>1.安装yum的download插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install yum-downloadonly</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>2.多了2个配置参数<br>–downloadonly<br>–downloaddir<br>例如：将salt-master的rpm安装包保存倒/var下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install --downloadonly --downloaddir=/var salt-master</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[salt报错汇总]]></title>
      <url>http://www.zhou5zhou6.com/2015/05/20/slat_error/</url>
      <content type="html"><![CDATA[<p>#salt报错汇总<br>1.执行salt-run 报[ERROR   ] Failed to import runners drac</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">[root@puppet ~]# salt-run manage.up</div><div class="line">[ERROR   ] Failed to import runners drac, this is due most likely to a syntax error:</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/loader.py&quot;, line 951, in _load_module</div><div class="line">    ), fn_, fpath, desc)</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/runners/drac.py&quot;, line 21, in &lt;module&gt;</div><div class="line">    import paramiko</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/paramiko/__init__.py&quot;, line 30, in &lt;module&gt;</div><div class="line">    from paramiko.transport import SecurityOptions, Transport</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/paramiko/transport.py&quot;, line 49, in &lt;module&gt;</div><div class="line">    from paramiko.dsskey import DSSKey</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/paramiko/dsskey.py&quot;, line 26, in &lt;module&gt;</div><div class="line">    from Crypto.PublicKey import DSA</div><div class="line">  File &quot;/usr/lib64/python2.6/site-packages/Crypto/PublicKey/DSA.py&quot;, line 88, in &lt;module&gt;</div><div class="line">    from Crypto.PublicKey import _DSA, _slowmath, pubkey</div><div class="line">  File &quot;/usr/lib64/python2.6/site-packages/Crypto/PublicKey/_DSA.py&quot;, line 30, in &lt;module&gt;</div><div class="line">    from Crypto.PublicKey.pubkey import *</div><div class="line">  File &quot;/usr/lib64/python2.6/site-packages/Crypto/PublicKey/pubkey.py&quot;, line 30, in &lt;module&gt;</div><div class="line">    from Crypto.Util.number import *</div><div class="line">  File &quot;/usr/lib64/python2.6/site-packages/Crypto/Util/number.py&quot;, line 56, in &lt;module&gt;</div><div class="line">    if _fastmath is not None and not _fastmath.HAVE_DECL_MPZ_POWM_SEC:</div><div class="line">AttributeError: &apos;module&apos; object has no attribute &apos;HAVE_DECL_MPZ_POWM_SEC&apos;</div><div class="line">- CDN-HLJ-SH-CNC-135</div></pre></td></tr></table></figure>
<p>查看本地的salt配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">salt-master --versions-report</div><div class="line">          Salt: 2015.5.0</div><div class="line">        Python: 2.6.5 (r265:79063, Nov 12 2010, 00:52:45)</div><div class="line">        Jinja2: 2.7.3</div><div class="line">      M2Crypto: 0.20.2</div><div class="line">msgpack-python: 0.4.6</div><div class="line">  msgpack-pure: Not Installed</div><div class="line">      pycrypto: 2.6.1</div><div class="line">       libnacl: Not Installed</div><div class="line">        PyYAML: 3.11</div><div class="line">         ioflo: Not Installed</div><div class="line">         PyZMQ: 14.3.1</div><div class="line">          RAET: Not Installed</div><div class="line">           ZMQ: 3.2.5</div><div class="line">          Mako: Not Installed</div></pre></td></tr></table></figure>
<p>网上搜</p>
<blockquote>
<p>AttributeError: ‘module’ object has no attribute ‘HAVE_DECL_MPZ_POWM_SEC’</p>
</blockquote>
<p>均说是 pycrypto的问题，所以把pycrypto重新安装一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum reinstall pycrypto</div></pre></td></tr></table></figure></p>
<p>然后执行解决<br>目前       pycrypto: 2.0.1</p>
<p>2.<br>执行 salt ‘*’  sys.doc  报以下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[ERROR   ] An un-handled exception was caught by salt&apos;s global exception handler:</div><div class="line">TypeError: string indices must be integers, not str</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;/usr/bin/salt&quot;, line 10, in &lt;module&gt;</div><div class="line">    salt_main()</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/scripts.py&quot;, line 349, in salt_main</div><div class="line">    client.run()</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/cli/salt.py&quot;, line 192, in run</div><div class="line">    self._output_ret(ret, out)</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/cli/salt.py&quot;, line 283, in _output_ret</div><div class="line">    self._print_docs(ret)</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/cli/salt.py&quot;, line 326, in _print_docs</div><div class="line">    if ret[host][fun]:</div><div class="line">TypeError: string indices must be integers, not str</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;/usr/bin/salt&quot;, line 10, in &lt;module&gt;</div><div class="line">    salt_main()</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/scripts.py&quot;, line 349, in salt_main</div><div class="line">    client.run()</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/cli/salt.py&quot;, line 192, in run</div><div class="line">    self._output_ret(ret, out)</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/cli/salt.py&quot;, line 283, in _output_ret</div><div class="line">    self._print_docs(ret)</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/cli/salt.py&quot;, line 326, in _print_docs</div><div class="line">    if ret[host][fun]:</div><div class="line">TypeError: string indices must be integers, not str</div></pre></td></tr></table></figure></p>
<p>安装msgpack 解决</p>
<blockquote>
<p>yum install msgpack</p>
</blockquote>
<p>3.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Process Process-1:</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;/usr/lib64/python2.6/multiprocessing/process.py&quot;, line 232, in _bootstrap</div><div class="line">    self.run()</div><div class="line">  File &quot;/usr/lib64/python2.6/multiprocessing/process.py&quot;, line 88, in run</div><div class="line">    self._target(*self._args, **self._kwargs)</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/scripts.py&quot;, line 129, in minion_process</div><div class="line">    minion.start()</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/cli/daemons.py&quot;, line 340, in start</div><div class="line">    super(Minion, self).start()</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/utils/parsers.py&quot;, line 996, in start</div><div class="line">    self.prepare()</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/cli/daemons.py&quot;, line 315, in prepare</div><div class="line">    self.minion = salt.minion.MinionManager(self.config)</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/salt/minion.py&quot;, line 767, in __init__</div><div class="line">    self.io_loop = LOOP_CLASS.current()</div><div class="line">AttributeError: type object &apos;IOLoop&apos; has no attribute &apos;current&apos;</div></pre></td></tr></table></figure></p>
<p>解决方法<br>升级pyzmq</p>
<blockquote>
<p>sudo easy_install pip;sudo yum install gcc-c++ -y;sudo yum install python-devel -y;sudo pip uninstall pyzmq;sudo pip install  pyzmq<br>或者<br>sudo yum install python-zmq;sudo rm /etc/salt/pki/minion/minion_master.pub;sudo /etc/init.d/salt-minion restart</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[salt-install]]></title>
      <url>http://www.zhou5zhou6.com/2015/05/18/salt-install/</url>
      <content type="html"><![CDATA[<p>###saltsatck<br>环境centos6.0<br><a id="more"></a></p>
<p>#安装<br>1.yum方式<br>安装epol源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>安装salt-master或者salt-minion<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install salt-master</div><div class="line">yum install salt-minion</div></pre></td></tr></table></figure></p>
<p>2.pip方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install salt</div></pre></td></tr></table></figure></p>
<p>#遇到的问题<br>客户端的salt-minion执行的时候报一下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ERROR ] global name &apos;RSA&apos; is not defined</div></pre></td></tr></table></figure></p>
<p>通过pip安装的salt发现以上的问题，<br>然后执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">salt-minion --versions-report</div><div class="line"></div><div class="line">           Salt: 2015.5.0</div><div class="line">         Python: 2.6.6 (r266:84292, Jan 22 2014, 09:42:36)</div><div class="line">         Jinja2: 2.2.1</div><div class="line">       M2Crypto: Not Installed</div><div class="line"> msgpack-python: 0.4.6</div><div class="line">   msgpack-pure: Not Installed</div><div class="line">       pycrypto: 2.0.1</div><div class="line">        libnacl: Not Installed</div><div class="line">         PyYAML: 3.10</div><div class="line">          ioflo: Not Installed</div><div class="line">          PyZMQ: 14.3.1</div><div class="line">           RAET: Not Installed</div><div class="line">            ZMQ: Not Installed</div><div class="line">           Mako: Not Installed</div></pre></td></tr></table></figure></p>
<p>然后yum 安装 M2Crypto,在执行 报zmq is not defined<br>后来pip 卸载掉salt 然后通过yum安装</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hp服务器无法修改读写比例]]></title>
      <url>http://www.zhou5zhou6.com/2015/05/08/hpacucli_1/</url>
      <content type="html"><![CDATA[<p>###hp服务器无法修改读写比例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@cdn tmp]# hpssacli ctrl slot=2 modify cacheratio=80/20</div><div class="line"></div><div class="line">Error: Caching is currently disabled for all logical drives. Setting the cache</div><div class="line">       ratio is not allowed until a logical drive enables caching.</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>hp服务器报以上错误<br>hpacucli ctrl slot=2 show config detail<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Post Prompt Timeout: 15 secs</div><div class="line">Cache Board Present: True</div><div class="line">Cache Status: Not Configured          &lt;-----cache 状态未配置</div><div class="line">Cache Ratio: 100% Read / 0% Write</div><div class="line">Read Cache Size: 0 MB</div></pre></td></tr></table></figure></p>
<p>解决方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hpssacli ctrl slot=2 logicaldrive 1 modify arrayaccelerator=enable</div></pre></td></tr></table></figure></p>
<p>执行后</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Surface Analysis Inconsistency Notification: Disabled</div><div class="line">Post Prompt Timeout: 15 secs</div><div class="line">Cache Board Present: True</div><div class="line">Cache Status: OK      &lt;--------已经变成ok</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[elasticsarchturnred]]></title>
      <url>http://www.zhou5zhou6.com/2015/04/20/elasticsarchturnred/</url>
      <content type="html"><![CDATA[<p>###elasticsearch服务器重启后导致shard多好变成UNASSIGNED，elasticsearch状态变成red<br>通过<a href="http://192.168.1.100:9200/_plugin/head/查看图形如下所示" target="_blank" rel="external">http://192.168.1.100:9200/_plugin/head/查看图形如下所示</a><br><a id="more"></a><br><img src="http://7x00f8.com1.z0.glb.clouddn.com/zhou5zhou6zhou5zhou6unassigned.png" alt="异常图"></p>
<p>通过curl -s localhost:9200/_cat/shards | grep UNASS<br>查询结果如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">logstsh-combine-2015.04.10 7 p UNASSIGNED</div><div class="line">logstash-combine-2015.04.10 7 r UNASSIGNED</div><div class="line">logstash-combine-2015.04.10 4 p UNASSIGNED</div><div class="line">logstash-combine-2015.04.10 4 r UNASSIGNED</div></pre></td></tr></table></figure></p>
<p>解决方法<br>强行指定nassigned的shard到ES的某个机器上<br>例如logstsh-combine-2015.04.10 7 p UNASSIGNED<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -XPOST -d &apos;&#123; &quot;commands&quot; : [ &#123; &quot;allocate&quot; : &#123; &quot;index&quot; : &quot;logstsh-combine-2015.04.10&quot;, &quot;shard&quot; : 7, &quot;node&quot; : &quot;glsb-188&quot;, &quot;allow_primary&quot; : true &#125; &#125; ] &#125;&apos; http://10.140.60.189:9200/_cluster/reroute?pretty</div></pre></td></tr></table></figure></p>
<p>自动脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">curl -s 10.140.60.188:9200/_cat/shards | grep UNASS | while read line;do</div><div class="line"></div><div class="line">filename=`echo $line| awk  &apos;&#123;print $1&#125;&apos;`</div><div class="line">shardname=`echo $line | awk  &apos;&#123;print $2&#125;&apos;`</div><div class="line">echo &quot;curl -XPOST -d &apos;&#123; \&quot;commands\&quot; : [ &#123; \&quot;allocate\&quot; : &#123; \&quot;index\&quot; : \&quot;&quot;$&#123;filename&#125;&quot;\&quot;, \&quot;shard\&quot; : $shardname, \&quot;node\&quot; : \&quot;glsb-188\&quot;, \&quot;allow_primary\&quot; : true &#125; &#125; ] &#125;&apos; http://10.140.60.188:9200/_cluster/reroute?pretty&quot;  &gt;&gt;2</div><div class="line">done</div></pre></td></tr></table></figure></p>
<p>确认2中的数据无误执行即可；</p>
<p><a href="http://stackoverflow.com/questions/23656458/elasticsearch-what-to-do-with-unassigned-shards" target="_blank" rel="external">参考资料</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[foreman_install]]></title>
      <url>http://www.zhou5zhou6.com/2015/04/11/foreman_install/</url>
      <content type="html"><![CDATA[<p>##foreman杂七杂八</p>
<p>###一，环境配置<br><a id="more"></a><br>配置epel源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>puppetlabs源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh http://yum.puppetlabs.com/puppetlabs-release-el-6.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>foreman源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install epel-release http://yum.theforeman.org/releases/1.7/el6/x86_64/foreman-release.rpm</div></pre></td></tr></table></figure></p>
<p>二，安装配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install foreman-installer</div></pre></td></tr></table></figure></p>
<blockquote>
<p>报错如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;Error: Cannot retrieve metalink for repository: epel. Please verify its path and &gt;try again</div><div class="line">&gt;</div></pre></td></tr></table></figure></p>
<p>处理方式：<br>取消baseurl的注释，注释mirrorlist url<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;sed -i ‘s|^#baseurl|baseurl| ; s|^mirrorlist|#mirrorlist|’ &gt;/etc/yum.repos.d/epel.repo</div><div class="line">&gt;</div></pre></td></tr></table></figure></p>
</blockquote>
<p>通过foreman-install安装foreman<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">foreman-installer</div><div class="line"> /Stage[main]/Foreman_proxy::Install/Package[foreman-proxy]/ensure: change from absent to present failed: Execution of &apos;/usr/bin/yum -d 0 -e 0 -y install foreman-proxy&apos; returned 1:</div></pre></td></tr></table></figure></p>
<p>发现好多包无法安装，然后发现epel也被添加了baselist；<br>执行以下即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">foreman-installer --foreman-configure-epel-repo=false</div></pre></td></tr></table></figure></p>
<p>执行完后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">nstalling             debug: Finishing transaction 69958912989540        [99%]Installing             Done                                               [100%Installing             Done                                               [100%] []</div><div class="line">  Success!</div><div class="line">  * Foreman is running at https://puppet.xx.xxoo.com</div><div class="line">      Initial credentials are admin / ekTJzNkSuwZxWyx4</div><div class="line">  * Foreman Proxy is running at https://puppet.xx.xxoo.com:8443</div><div class="line">  * Puppetmaster is running at port 8140</div><div class="line">  The full log is at /var/log/foreman-installer/foreman-installer.log</div></pre></td></tr></table></figure></p>
<p>如果执行过程中出现failed，见招拆招吧。。。</p>
<p>三。proxy端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Could not get default values, check log file at /var/log/foreman-installer/foreman-installer.log for more information</div></pre></td></tr></table></figure></p>
<p>解决方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">facter fqdn</div><div class="line">查看是否有输出，当时我的facter版本过低，升级后解决</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[redis_error]]></title>
      <url>http://www.zhou5zhou6.com/2015/04/01/redis_error/</url>
      <content type="html"><![CDATA[<p>1.安装redis-stat报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@log bin]# gem install redis-stat</div><div class="line">Building native extensions.  This could take a while...</div><div class="line">ERROR:  Error installing redis-stat:</div><div class="line">    ERROR: Failed to build gem native extension.</div><div class="line"></div><div class="line">/usr/bin/ruby extconf.rb</div><div class="line">mkmf.rb can&apos;t find header files for ruby at /usr/lib/ruby/ruby.h</div><div class="line"></div><div class="line"></div><div class="line">Gem files will remain installed in /usr/lib/ruby/gems/1.8/gems/json-1.8.2 for inspection.</div><div class="line">Results logged to /usr/lib/ruby/gems/1.8/gems/json-1.8.2/ext/json/ext/generator/gem_make.out</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>解决方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install ruby-devel</div></pre></td></tr></table></figure></p>
<p>2.<br>执行gem install redis-stat报以下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/usr/lib/ruby/site_ruby/1.8/rubygems.rb:779:in `report_activate_error&apos;: RubyGem version error: daemons(1.2.2 not ~&gt; 1.1.9) (Gem::LoadError)</div><div class="line">    from /usr/lib/ruby/site_ruby/1.8/rubygems.rb:214:in `activate&apos;</div><div class="line">    from /usr/lib/ruby/site_ruby/1.8/rubygems.rb:249:in `activate&apos;</div><div class="line">    from /usr/lib/ruby/site_ruby/1.8/rubygems.rb:248:in `each&apos;</div><div class="line">    from /usr/lib/ruby/site_ruby/1.8/rubygems.rb:248:in `activate&apos;</div><div class="line">    from /usr/lib/ruby/site_ruby/1.8/rubygems.rb:1082:in `gem&apos;</div><div class="line">    from /usr/bin/redis-stat:18</div></pre></td></tr></table></figure></p>
<p>解决方法<br>安装daemon老版本<br>卸载新版本的daemon即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem install daemons -v 1.1.9</div><div class="line">gem uninstall daemons -v 1.2.2</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[kibana map]]></title>
      <url>http://www.zhou5zhou6.com/2015/03/19/kibana_map/</url>
      <content type="html"><![CDATA[<p>###通过kibana的map在地图上面展现访问IP的来源地<br>版本是kibana4<br><a id="more"></a><br>1.在下面的地址下载下来IP库<br><a href="http://dev.maxmind.com/geoip/legacy/geolite/" target="_blank" rel="external">http://dev.maxmind.com/geoip/legacy/geolite/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz</div><div class="line">gunzip GeoLiteCity.dat.gz</div></pre></td></tr></table></figure></p>
<p>2.在logstash里面使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">geoip &#123;</div><div class="line">     source =&gt; &quot;ip_s&quot;</div><div class="line">     target =&gt; &quot;geoip&quot;</div><div class="line">     database =&gt; &quot;/home/herbert/search/GeoLiteCity.dat&quot;</div><div class="line"></div><div class="line">     &#125;</div></pre></td></tr></table></figure>
<p>这样输出就会有查询的地理位置信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&quot;geoip&quot;: &#123;</div><div class="line">  &quot;ip&quot;: &quot;59.172.75.208&quot;,</div><div class="line">  &quot;country_code2&quot;: &quot;CN&quot;,</div><div class="line">  &quot;country_code3&quot;: &quot;CHN&quot;,</div><div class="line">  &quot;country_name&quot;: &quot;China&quot;,</div><div class="line">  &quot;continent_code&quot;: &quot;AS&quot;,</div><div class="line">  &quot;region_name&quot;: &quot;12&quot;,</div><div class="line">  &quot;city_name&quot;: &quot;Wuhan&quot;,</div><div class="line">  &quot;latitude&quot;: 30.580099999999987,</div><div class="line">  &quot;longitude&quot;: 114.27339999999998,</div><div class="line">  &quot;timezone&quot;: &quot;Asia/Shanghai&quot;,</div><div class="line">  &quot;real_region_name&quot;: &quot;Hubei&quot;,</div><div class="line">  &quot;location&quot;: [</div><div class="line">    114.27339999999998,</div><div class="line">    30.580099999999987</div><div class="line">  ]</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<p>然后在visualize里面配置即可</p>
<p>#####地图改成高德地图</p>
<p>kibana-4.0.1-linux-x64/src/public<br>修改配置文件index.js即可,把原先的titleLayer注释替换即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/*          var tileLayer = L.tileLayer(&apos;http://otile&#123;s&#125;.mqcdn.com/tiles/1.0.0/map/&#123;z&#125;/&#123;x&#125;/&#123;y&#125;.jpeg&apos;, &#123;</div><div class="line">            attribution: &apos;Tiles by &lt;a href=&quot;http://www.mapquest.com/&quot;&gt;MapQuest&lt;/a&gt; &amp;mdash; &apos; +</div><div class="line">              &apos;Map data &amp;copy; &lt;a href=&quot;http://openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt; contributors, &apos; +</div><div class="line">              &apos;&lt;a href=&quot;http://creativecommons.org/licenses/by-sa/2.0/&quot;&gt;CC-BY-SA&lt;/a&gt;&apos;,</div><div class="line">            subdomains: &apos;1234&apos;</div><div class="line">          &#125;);  */  </div><div class="line"></div><div class="line"></div><div class="line">            var tileLayer = L.tileLayer(&apos;http://webrd0&#123;s&#125;.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=8&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&apos;, &#123;            attribution: &apos;Tiles by &lt;a href=&quot;http://www.mapquest.com/&quot;&gt;MapQuest&lt;/a&gt; &amp;mdash; &apos; +</div><div class="line">              &apos;Map data &amp;copy; &lt;a href=&quot;http://openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt; contributors, &apos; +</div><div class="line">              &apos;&lt;a href=&quot;http://creativecommons.org/licenses/by-sa/2.0/&quot;&gt;CC-BY-SA&lt;/a&gt;&apos;,</div><div class="line">              subdomains:[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;],</div><div class="line">              variants: &#123;</div><div class="line">                Satellite:&#123;</div><div class="line">                    url: &apos;http://webst0&#123;s&#125;.is.autonavi.com/appmaptile?style=6&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&apos;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[elasticsearch_503]]></title>
      <url>http://www.zhou5zhou6.com/2015/03/18/elasticsearch_503/</url>
      <content type="html"><![CDATA[<p>###Elastic Search分布式失效</p>
<p>通过<a href="http://10.150.150.42:9200/_plugin/head/查看只有master" target="_blank" rel="external">http://10.150.150.42:9200/_plugin/head/查看只有master</a> node，找不到另外一个节点<br>然后通过<a href="http://10.150.150.42:9200/" target="_blank" rel="external">http://10.150.150.42:9200/</a> 查看报503</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;status&quot; : 503,</div><div class="line">  &quot;name&quot; : &quot;cdn-181&quot;,</div><div class="line">  &quot;cluster_name&quot; : &quot;elasticsearch-gslb&quot;,</div><div class="line">  &quot;version&quot; : &#123;</div><div class="line">    &quot;number&quot; : &quot;1.4.4&quot;,</div><div class="line">    &quot;build_hash&quot; : &quot;c88f77ffc81301dfa9dfd81ca2232f09588bd512&quot;,</div><div class="line">    &quot;build_timestamp&quot; : &quot;2015-02-19T13:05:36Z&quot;,</div><div class="line">    &quot;build_snapshot&quot; : false,</div><div class="line">    &quot;lucene_version&quot; : &quot;4.10.3&quot;</div><div class="line">  &#125;,</div><div class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在elasticsearch界面查看有以下debug信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[2015-03-18 12:51:58,918][DEBUG][action.admin.indices.get ] [cdn-187] observer: timeout notification from cluster service. timeout setting [30s], time since start [30s]</div><div class="line">[2015-03-18 12:52:00,476][DEBUG][action.admin.indices.get ] [cdn-187] observer: timeout notification from cluster service. timeout setting [30s], time since start [30s]</div><div class="line">[2015-03-18 12:52:00,537][DEBUG][action.admin.indices.get ] [cdn-187] observer: timeout notification from cluster service. timeout setting [30s], time since start [30s]</div><div class="line">[2015-03-18 12:52:00,542][DEBUG][action.admin.indices.get ] [cdn-187] no known master node, scheduling a retry</div></pre></td></tr></table></figure></p>
<p>原因：<br>我采用的是默认的多播探测，探测失效导致我的从节点失效</p>
<p>解决方法：<br>修改config/elasticsearch.yml 指定探测列表；<br>并禁用多播探测<br>discovery.zen.ping.multicast.enabled: false</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">discovery.zen.ping.unicast.hosts: [&quot;10.150.150.42&quot;]</div></pre></td></tr></table></figure>
<p><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#unicast" target="_blank" rel="external">http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#unicast</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sysdig(三)]]></title>
      <url>http://www.zhou5zhou6.com/2015/03/10/sysdig3/</url>
      <content type="html"><![CDATA[<p>sysdig的简要说明</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line">ysdig version 0.1.98</div><div class="line">Usage: sysdig [options] [-p &lt;output_format&gt;] [filter]</div><div class="line"></div><div class="line">Options:</div><div class="line"> -A, --print-ascii  Only print the text portion of data buffers, and echo</div><div class="line">                    end-of-lines. This is useful to only display human-readable</div><div class="line">                    data.</div><div class="line"> -b, --print-base64 Print data buffers in base64. This is useful for encoding</div><div class="line">                    binary data that needs to be used over media designed to</div><div class="line">                    handle textual data (i.e., terminal or json).</div><div class="line"> -c &lt;chiselname&gt; &lt;chiselargs&gt;, --chisel  &lt;chiselname&gt; &lt;chiselargs&gt;</div><div class="line">                    run the specified chisel. If the chisel require arguments,</div><div class="line">                    they must be specified in the command line after the name.</div><div class="line"> -cl, --list-chisels</div><div class="line">                    lists the available chisels. Looks for chisels in</div><div class="line">                    ./chisels, ~/.chisels and /usr/share/sysdig/chisels.</div><div class="line"> -d, --displayflt   Make the given filter a display one</div><div class="line">                    Setting this option causes the events to be filtered</div><div class="line">                    after being parsed by the state system. Events are</div><div class="line">                    normally filtered before being analyzed, which is more</div><div class="line">                    efficient, but can cause state (e.g. FD names) to be lost.</div><div class="line"> -D, --debug        Capture events about sysdig itself</div><div class="line"> -E, --exclude-users</div><div class="line">                    Don&apos;t create the user/group tables by querying the OS when</div><div class="line">                    sysdig starts. This also means that no user or group info</div><div class="line">                    will be written to the tracefile by the -w flag.</div><div class="line">                    The user/group tables are necessary to use filter fields</div><div class="line">                    like user.name or group.name. However, creating them can</div><div class="line">                    increase sysdig&apos;s startup time. Moreover, they contain</div><div class="line">                    information that could be privacy sensitive.</div><div class="line"> -F, --fatfile       Enable fatfile mode</div><div class="line">                    when writing in fatfile mode, the output file will contain</div><div class="line">                    events that will be invisible when reading the file, but</div><div class="line">                    that are necessary to fully reconstruct the state.</div><div class="line">                    Fatfile mode is useful when saving events to disk with an</div><div class="line">                    aggressive filter. The filter could drop events that would</div><div class="line">                    the state to be updated (e.g. clone() or open()). With</div><div class="line">                    fatfile mode, those events are still saved to file, but</div><div class="line">                    &apos;hidden&apos; so that they won&apos;t appear when reading the file.</div><div class="line">                    Be aware that using this flag might generate substantially</div><div class="line">                    bigger traces files.</div><div class="line"> -h, --help         Print this page</div><div class="line"> -i &lt;chiselname&gt;, --chisel-info &lt;chiselname&gt;</div><div class="line">                    Get a longer description and the arguments associated with</div><div class="line">                    a chisel found in the -cl option list.</div><div class="line"> -j, --json         Emit output as json, data buffer encoding will depend from the</div><div class="line">                    print format selected.</div><div class="line"> -L, --list-events  List the events that the engine supports</div><div class="line"> -l, --list         List the fields that can be used for filtering and output</div><div class="line">                    formatting. Use -lv to get additional information for each</div><div class="line">                    field.</div><div class="line"> -n &lt;num&gt;, --numevents=&lt;num&gt;</div><div class="line">                    Stop capturing after &lt;num&gt; events</div><div class="line"> -P, --progress     Print progress on stderr while processing trace files</div><div class="line"> -p &lt;output_format&gt;, --print=&lt;output_format&gt;</div><div class="line">                    Specify the format to be used when printing the events.</div><div class="line">                    With -pc or -pcontainer will use a container-friendly format.</div><div class="line">                    See the examples section below for more info.</div><div class="line"> -q, --quiet        Don&apos;t print events on the screen</div><div class="line">                    Useful when dumping to disk.</div><div class="line"> -r &lt;readfile&gt;, --read=&lt;readfile&gt;</div><div class="line">                    Read the events from &lt;readfile&gt;.</div><div class="line"> -S, --summary      print the event summary (i.e. the list of the top events)</div><div class="line">                    when the capture ends.</div><div class="line"> -s &lt;len&gt;, --snaplen=&lt;len&gt;</div><div class="line">                    Capture the first &lt;len&gt; bytes of each I/O buffer.</div><div class="line">                    By default, the first 80 bytes are captured. Use this</div><div class="line">                    option with caution, it can generate huge trace files.</div><div class="line"> -t &lt;timetype&gt;, --timetype=&lt;timetype&gt;</div><div class="line">                    Change the way event time is displayed. Accepted values are</div><div class="line">                    h for human-readable string, a for absolute timestamp from</div><div class="line">                    epoch, r for relative time from the beginning of the</div><div class="line">                    capture, d for delta between event enter and exit, and</div><div class="line">                    D for delta from the previous event.</div><div class="line"> -v, --verbose      Verbose output.</div><div class="line">                    This flag will cause the full content of text and binary</div><div class="line">                    buffers to be printed on screen, instead of being truncated</div><div class="line">                    to 40 characters. Note that data buffers length is still</div><div class="line">                    limited by the snaplen (refer to the -s flag documentation)</div><div class="line">                    -v will also make sysdig print some summary information at</div><div class="line">                    the end of the capture.</div><div class="line"> --version          Print version number.</div><div class="line"> -w &lt;writefile&gt;, --write=&lt;writefile&gt;</div><div class="line">                    Write the captured events to &lt;writefile&gt;.</div><div class="line"> -x, --print-hex    Print data buffers in hex.</div><div class="line"> -X, --print-hex-ascii</div><div class="line">                    Print data buffers in hex and ASCII.</div><div class="line"> -z, --compress     Used with -w, enables compression for tracefiles.</div><div class="line"></div><div class="line">Output format:</div><div class="line"></div><div class="line">By default, sysdig prints the information for each captured event on a single</div><div class="line"> line with the following format:</div><div class="line"></div><div class="line"> %evt.num %evt.time %evt.cpu %proc.name (%thread.tid) %evt.dir %evt.type %evt.info</div><div class="line"></div><div class="line">where:</div><div class="line"> evt.num is the incremental event number</div><div class="line"> evt.time is the event timestamp</div><div class="line"> evt.cpu is the CPU number where the event was captured</div><div class="line"> proc.name is the name of the process that generated the event</div><div class="line"> thread.tid id the TID that generated the event, which corresponds to the</div><div class="line">   PID for single thread processes</div><div class="line"> evt.dir is the event direction, &gt; for enter events and &lt; for exit events</div><div class="line"> evt.type is the name of the event, e.g. &apos;open&apos; or &apos;read&apos;</div><div class="line"> evt.info is the list of event arguments.</div><div class="line"></div><div class="line">The output format can be customized with the -p switch, using any of the</div><div class="line">fields listed by &apos;sysdig -l&apos;.</div><div class="line"></div><div class="line">Using -pc or -pcontainer, the default format will be changed to a container-friendly one:</div><div class="line"></div><div class="line">%evt.num %evt.time %evt.cpu %container.name (%container.id) %proc.name (%thread.tid:%thread.vtid) %evt.dir %evt.type %evt.info</div><div class="line"></div><div class="line">Examples:</div><div class="line"></div><div class="line"> Capture all the events from the live system and print them to screen</div><div class="line">   $ sysdig</div><div class="line"></div><div class="line"> Capture all the events from the live system and save them to disk</div><div class="line">   $ sysdig -w dumpfile.scap</div><div class="line"></div><div class="line"> Read events from a file and print them to screen</div><div class="line">   $ sysdig -r dumpfile.scap</div><div class="line"></div><div class="line"> Print all the open system calls invoked by cat</div><div class="line">   $ sysdig proc.name=cat and evt.type=open</div><div class="line"></div><div class="line"> Print the name of the files opened by cat</div><div class="line">   $ sysdig -p&quot;%evt.arg.name&quot; proc.name=cat and evt.type=open</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sysdig(二)]]></title>
      <url>http://www.zhou5zhou6.com/2015/03/10/sysdig2/</url>
      <content type="html"><![CDATA[<p>#Chisels<br>sysdig的chisels是根据执行动作实时分析sysdig事件的脚本；</p>
<ul>
<li>1.chisels采用lua脚本，功能强大稳定效率高</li>
<li>2.chisels通过lua库广泛收集；</li>
<li>3.很好的支持实时流的分析，不过也被用于离线分析<a id="more"></a>
###可使用的chisels列表<blockquote>
<p>$ sysdig -cl </p>
</blockquote>
</li>
</ul>
<p>如果想得到脚本的详细信息：Use the -i flag to get detailed information about a specific chisel<br>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@test tmp]# sysdig -i spy_ip</div><div class="line"></div><div class="line">Category: Net</div><div class="line">-------------</div><div class="line">spy_ip              Show the data exchanged with the given IP address</div><div class="line"></div><div class="line">Shows the network payloads exchanged with an IP end-point. You can combine this</div><div class="line"> chisel with the -x, -X or -A sysdig command line switches to customize the scr</div><div class="line">een output</div><div class="line">Args:</div><div class="line">[ipv4] host_ip - The remote host IP address</div><div class="line">[string] disable_color - Set to &apos;disable_colors&apos; if you wan</div><div class="line">                    t to disable color output</div></pre></td></tr></table></figure></p>
<p>如果想要运行某个chisel, 请使用-c<br>例如：</p>
<blockquote>
<p>$ sysdig –c topfiles_bytes</p>
</blockquote>
<p>如果想指定参数，请跟在chisel后面</p>
<blockquote>
<p>$ sysdig –c spy_ip 192.168.1.157</p>
</blockquote>
<p>查询到某个IP的链路负载</p>
<blockquote>
<p>sysdig -c spy_ip x.x.x.x</p>
</blockquote>
<p>例如统计机器当前的读写频繁的文件</p>
<blockquote>
<p>$ sysdig -c topfiles_bytes</p>
</blockquote>
<p>过滤出符合我们要求的，例如</p>
<blockquote>
<p>$ sysdig -c topfiles_bytes “not fd.name contains /dev” </p>
</blockquote>
<p>过滤某个目录读写靠前的文件</p>
<blockquote>
<p>$ sysdig -c topfiles_bytes “fd.name contains /root”</p>
</blockquote>
<p>被某一进程访问</p>
<blockquote>
<p>$ sysdig -c topfiles_bytes “proc.name=vi”  </p>
</blockquote>
<p>被某一用户访问</p>
<blockquote>
<p>$ sysdig -c topfiles_bytes “user.name=loris”  </p>
</blockquote>
<p>当然你可以同时运行多个chisel，例如</p>
<blockquote>
<p>$ sysdig -c stdin -c stdout proc.name=cat</p>
</blockquote>
<p>其他的应用多是对系统调用以及过滤规则的活用，具体多看看文档即可<br>from：<a href="http://www.sysdig.org/wiki/chisels-user-guide/" target="_blank" rel="external">http://www.sysdig.org/wiki/chisels-user-guide/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sysdig(一)]]></title>
      <url>http://www.zhou5zhou6.com/2015/03/10/sysdig1/</url>
      <content type="html"><![CDATA[<p>#sysdig<br><a id="more"></a></p>
<p>##一.install<br><strong>shell</strong>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -s https://s3.amazonaws.com/download.draios.com/stable/install-sysdig | sudo bash</div></pre></td></tr></table></figure></p>
<p><strong>rhel/centos</strong>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">rpm --import https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public  </div><div class="line">curl -s -o /etc/yum.repos.d/draios.repo http://download.draios.com/stable/rpm/draios.repo</div><div class="line">rpm -i http://mirror.us.leaseweb.net/epel/6/i386/epel-release-6-8.noarch.rpm</div><div class="line">yum -y install kernel-devel-$(uname -r)</div><div class="line">yum -y install sysdig</div></pre></td></tr></table></figure></p>
<p><strong>debian/ubuntu</strong>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">curl -s https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public | apt-key add -  </div><div class="line">curl -s -o /etc/apt/sources.list.d/draios.list http://download.draios.com/stable/deb/draios.list  </div><div class="line">apt-get update</div><div class="line">apt-get -y install linux-headers-$(uname -r)</div><div class="line">apt-get -y install sysdig</div></pre></td></tr></table></figure></p>
<p>##二.用法</p>
<p>###基础用法<br>sysdig 不带任何参数，他会捕捉每一个时间，并通过标准输出展示，这个有些类似strace<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@test tmp]# sysdig</div><div class="line">137584 11:13:20.721911565 5 nginx (28563) &gt; recvmsg fd=11(&lt;2u&gt;0.0.0.0:9009)</div><div class="line">137585 11:13:20.721911735 8 linkd (21849) &lt; epoll_wait res=0</div><div class="line">137586 11:13:20.721912370 8 linkd (21849) &gt; epoll_wait maxevents=1</div><div class="line">137587 11:13:20.721912589 8 linkd (21849) &lt; epoll_wait res=0</div><div class="line">137588 11:13:20.721913223 8 linkd (21849) &gt; epoll_wait maxevents=1</div><div class="line">137589 11:13:20.721913453 8 linkd (21849) &lt; epoll_wait res=0</div><div class="line">137591 11:13:20.721914095 8 linkd (21849) &gt; epoll_wait maxevents=1</div><div class="line">137592 11:13:20.721914326 8 linkd (21849) &lt; epoll_wait res=0</div><div class="line">137593 11:13:20.721914957 8 linkd (21849) &gt; epoll_wait maxevents=1</div><div class="line">137594 11:13:20.721915168 8 linkd (21849) &lt; epoll_wait res=0</div></pre></td></tr></table></figure></p>
<p>其输出格式如下所示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*%evt.num %evt.time %evt.cpu %proc.name (%thread.tid) %evt.dir %evt.type %evt.args</div></pre></td></tr></table></figure></p>
<ul>
<li>evt.num is the incremental event number       自增加的事件号</li>
<li>evt.time is the event timestamp                       时间时间戳</li>
<li>evt.cpu is the CPU number where the event was captured   该时间被捕获时候占用的cpu号</li>
<li>proc.name is the name of the process that generated the event   事件命名</li>
<li>thread.tid is the TID that generated the event, which corresponds to the PID for single thread processes          是产生该事件进程的线程id.如果为单线程程序,此id同进程id</li>
<li>evt.dir is the event direction, &gt; for enter events and &lt; for exit events  事件方向</li>
<li>evt.type is the name of the event, e.g. ‘open’ or ‘read’     事件调用的名称</li>
<li>evt.args is the list of event arguments. In case of system calls, these tend to correspond to the system call arguments, but that’s not always the case: some system call arguments are excluded for simplicity or performance reasons.  事件的参数 在有些系统调用中 这些参数可以看做 系统调用的参数  而在另外有些系统调用中出于性能或者精简输出的的目的并没有显示参数列表</li>
</ul>
<p>通过查看输出可以看出sysdig和strace有以下的不同<br>1.大多数的系统调用，sysdig分两条，一条为enter&gt; 一条为exit&lt;；这样更容易跟踪问题<br>2.文件描述符被解析出来；这样文件句柄就可以人性化的展示：网络连接组，文件名等；更准确地FD格式是： num(<type>resolved_string) </type></p>
<pre><code>1. num is the FD number
2. resolved_string is the resolved representation of the FD, e.g. 127.0.0.1:40370-&gt;127.0.0.1:80 for a TCP socket
3. type is a single-letter-encoding of the fd type, and can be one of the following:
    f for files
    4 for IPv4 sockets
    6 for IPv6 sockets
    u for unix sockets
    s for signal FDs
    e for event FDs
    i for inotify FDs
    t for timer FDs
</code></pre><p>扩展阅读：<br><a href="https://sysdigcloud.com/interpreting-sysdig-output/" target="_blank" rel="external">https://sysdigcloud.com/interpreting-sysdig-output/</a><br><a href="http://sysdigcloud.com/fascinating-world-linux-system-calls/" target="_blank" rel="external">http://sysdigcloud.com/fascinating-world-linux-system-calls/</a></p>
<p>###跟踪文件</p>
<p>保存捕获事件</p>
<blockquote>
<p>   $ sysdig –w myfile.scap</p>
</blockquote>
<p>保存捕获事件条数</p>
<blockquote>
<p>  $ sysdig –n 100 –w myfile.scap</p>
</blockquote>
<p>读取保存事件</p>
<blockquote>
<p>  $ sysdig –r myfile.scap</p>
<p>###过滤</p>
</blockquote>
<p>sysdig的功能强大的地方是他可以从海量的信息过滤出您需要的数据sysdig [root@test tmp]# sysdig proc.name=nginx -n 10  过滤出进程名字为nginx的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@test tmp]# sysdig proc.name=nginx -n 10</div><div class="line">61 11:59:16.697936037 6 nginx (28563) &lt; recvmsg res=-11(EAGAIN) size=1472 data= tuple=NULL</div><div class="line">62 11:59:16.697939680 6 nginx (28563) &gt; recvmsg fd=11(&lt;2u&gt;0.0.0.0:9009)</div><div class="line">63 11:59:16.697944229 6 nginx (28563) &gt; switch next=0 pgft_maj=0 pgft_min=3 vm_size=587440 vm_rss=19684 vm_swap=0</div><div class="line">90 11:59:16.698068309 15 nginx (27571) &lt; writev res=262144 data=Q....[A......C4q...4.x1...K..6.i.c...?.......L.*.(....&amp;&#123;..Xeu....]...|...P.S....</div><div class="line">91 11:59:16.698073492 15 nginx (27571) &gt; readv fd=273(&lt;4t&gt;127.0.0.1:52407-&gt;127.0.0.1:18980)</div><div class="line">116 11:59:16.698148712 15 nginx (27571) &lt; readv res=203468 size=262144 data=..Z.n.a....!U:......\\.n.].6....&apos;D...?26.b..&amp;.....G&apos;S.r..Y..M.6.....&gt;i....&lt;.....</div><div class="line">119 11:59:16.698151573 15 nginx (27571) &gt; readv fd=273(&lt;4t&gt;127.0.0.1:52407-&gt;127.0.0.1:18980)</div><div class="line">120 11:59:16.698152712 15 nginx (27571) &lt; readv res=-11(EAGAIN) size=58676 data=</div><div class="line">127 11:59:16.698177234 15 nginx (27571) &gt; epoll_wait maxevents=512</div><div class="line">128 11:59:16.698179017 15 nginx (27571) &lt; epoll_wait res=1</div></pre></td></tr></table></figure></p>
<p>过滤器可以使用比较操作符 如  (=, !=, &lt;, &lt;=, &gt;, &gt;=, contains)   且可以联合布尔操作符 (and, or and not)   还有括号<br>例如</p>
<blockquote>
<p>$ sysdig proc.name=cat or proc.name=vi</p>
<p>$ sysdig proc.name!=cat and evt.type=open</p>
</blockquote>
<p>当然我们可以使用以下命令获取所有的过滤器</p>
<pre><code>$ sysdig -l
</code></pre><p>我们也可以使用以下命令获取所有的系统调用</p>
<pre><code>$ sysdig –L
</code></pre><p>###格式化输出</p>
<blockquote>
<p>   Fields must be prepended with a %<br>    You can add arbitrary text in the string, exactly as you would do in the C printf.<br>    By default, a line is printed only if all the fields specified by –p are present in the event. You can, however, prepend the string with a <em> to make it print no matter what. In that case, the missing fields will be rendered as <na>.<br>如果制定格式前有一个</na></em>就是无论如何都会打印</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sysdig -p&quot;user:%user.name dir:%evt.arg.path&quot; evt.type=chdir</div><div class="line">user:ubuntu dir:/root</div><div class="line">user:ubuntu dir:/root/tmp</div><div class="line">user:ubuntu dir:/root/Download</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sysdig -p&quot;%user.name) %evt.arg.path&quot; &quot;evt.type=chdir&quot;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sysdig -p&quot;user:%user.name process:%proc.name file:%fd.name&quot; &quot;evt.type=write and fd.name contains /etc/&quot;</div></pre></td></tr></table></figure>
<p>由这些例子可以看出我们可以根据以上的调用列表和过滤器列表可以过滤出自己需要的数据</p>
<h3 id="Chisels"><a href="#Chisels" class="headerlink" title="Chisels"></a>Chisels</h3><p>稍后补充</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git_rollback]]></title>
      <url>http://www.zhou5zhou6.com/2015/03/06/git_rollback/</url>
      <content type="html"><![CDATA[<p>#版本回滚</p>
<p>创建git库<br>git init #在当前的目录下创建一个新的空的本地仓库<br><a id="more"></a></p>
<p>##一，本地修改<br>1.工作区修改内容恢复</p>
<ul>
<li><p>新增加的内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">localhost:testing dhb$ git status -s</div><div class="line">localhost:testing dhb$ touch 9</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">?? 9</div><div class="line">localhost:testing dhb$ rm 9</div><div class="line">localhost:testing dhb$ git status -s</div></pre></td></tr></table></figure>
</li>
<li><p>非新增内容修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">1. 从暂存区恢复到工作区</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">MM 8</div><div class="line">localhost:testing dhb$ git checkout -- 8</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">M  8</div><div class="line">localhost:testing dhb$</div><div class="line"></div><div class="line">2.从本地库恢复到工作区；git checkout 加上head会覆盖暂存区和工作区</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">MM 8</div><div class="line">localhost:testing dhb$ git checkout head -- 8</div><div class="line">localhost:testing dhb$ git status -s</div></pre></td></tr></table></figure>
</li>
</ul>
<p>2.暂存区修改内容撤销</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">localhost:testing dhb$ git status -s</div><div class="line">MM 8</div><div class="line">localhost:testing dhb$ git reset HEAD 8</div><div class="line">Unstaged changes after reset:</div><div class="line">M   8</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line"> M 8</div></pre></td></tr></table></figure>
<p>3.本地资源库回滚<br>git reset –hard commit-id :回滚到commit-id，讲commit-id之后提交的commit都去除<br>git reset –hard HEAD~3：将最近3次的提交回滚<br>git reset –hard HEAD^  回滚到上一版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">localhost:testing dhb$ git log --pretty=oneline 8</div><div class="line">8d71ba4e43a9e4f12f0650b8cf48d94abfc66d3e test3</div><div class="line">b07e1eac87941cf02d9e3342018af2300c979b6f test2</div><div class="line">07c1d330782b88d301b2ba48a0add0c65f73285f test1</div><div class="line">656014b666f74eecffb73046c8565aeb6efc0387 upate 8</div><div class="line"></div><div class="line">localhost:testing dhb$ git status -s</div><div class="line"> M 8</div><div class="line"> </div><div class="line">localhost:testing dhb$ git reset --hard 07c1d330782b88d301b2ba48a0add0c65f73285f</div><div class="line">HEAD is now at 07c1d33 test1</div><div class="line"></div><div class="line">localhost:testing dhb$ git status -s</div><div class="line"></div><div class="line">localhost:testing dhb$ git log --pretty=oneline 8</div><div class="line">07c1d330782b88d301b2ba48a0add0c65f73285f test1</div><div class="line">656014b666f74eecffb73046c8565aeb6efc0387 upate 8</div><div class="line">localhost:testing dhb$</div></pre></td></tr></table></figure>
<p>##二，远程资源库回滚<br>1.回滚单个文件<br>git reset file某一个版本<br>然后checkout 出某个文件<br>然后commit</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">localhost:testing dhb$ git log --pretty=oneline 8</div><div class="line">0e5de615ad12da1dd11cf9bc818fdc6a2811988e test5</div><div class="line">63b3d60fae436a0ef845994a980c3fc34d7e3741 test4</div><div class="line">5b61a3a65f59df44a4fe9b717050e9127507a96a huigun</div><div class="line">b07e1eac87941cf02d9e3342018af2300c979b6f test2</div><div class="line">07c1d330782b88d301b2ba48a0add0c65f73285f test1</div><div class="line">656014b666f74eecffb73046c8565aeb6efc0387 upate 8</div><div class="line">localhost:testing dhb$</div><div class="line">localhost:testing dhb$</div><div class="line">localhost:testing dhb$ cat 8</div><div class="line">test1</div><div class="line">test2</div><div class="line">test3</div><div class="line">test4</div><div class="line">test5</div><div class="line">localhost:testing dhb$ git reset 63b3d60fae436a0ef845994a980c3fc34d7e3741 8</div><div class="line">Unstaged changes after reset:</div><div class="line">M   8</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">MM 8</div><div class="line">localhost:testing dhb$ cat 8</div><div class="line">test1</div><div class="line">test2</div><div class="line">test3</div><div class="line">test4</div><div class="line">test5</div><div class="line">localhost:testing dhb$ git checkout 8</div><div class="line">localhost:testing dhb$ cat 8</div><div class="line">test1</div><div class="line">test2</div><div class="line">test3</div><div class="line">test4</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">M  8</div><div class="line">localhost:testing dhb$ git commit -m &quot;hui tundao test4&quot;</div></pre></td></tr></table></figure>
<p>2.远程代码库回滚<br>git reset –hard 版本号<br>git push -f   </p>
<p>备忘：如果不使用强制push会报以下错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> ! [rejected]        master -&gt; master (non-fast-forward)</div><div class="line">error: failed to push some refs to &apos;git@192.168.2.1:testing.git&apos;</div><div class="line">hint: Updates were rejected because the tip of your current branch is behind</div><div class="line">hint: its remote counterpart. Integrate the remote changes (e.g.</div><div class="line">hint: &apos;git pull ...&apos;) before pushing again.</div><div class="line">hint: See the &apos;Note about fast-forwards&apos; in &apos;git push --help&apos; for details.</div><div class="line">localhost:testing dhb$ git log master..origin/master</div></pre></td></tr></table></figure>
<p>解决方法：<br>1.使用-f参数 强制push<br>2.先把git的东西fetch到你本地然后merge后再push (这个我没有测试成功)<br>3.把变化的文件拷出来，重新提交</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git操作(一)]]></title>
      <url>http://www.zhou5zhou6.com/2015/03/06/git2/</url>
      <content type="html"><![CDATA[<p>##概念<br>Git有三个工作区域，分别为：工作目录（Working Directory对应图中的workspace）、暂存区（Stage或Index对应图中的index）以及资源库（Repository或Git Directory对应图中的local repository）。<br>另外一个remote repository是远程资源库<br><a id="more"></a></p>
<ul>
<li>git add  工作目录提交到暂存区</li>
<li>git commit 暂存区提交到本地资源库</li>
<li>git push 本地资源库提交到远程资源库</li>
<li>git fetch 从远程资源库拉取数据到本地资源库</li>
<li>git pull  抓取远程仓库所有分支更新并合并到本地</li>
<li><p>git checkout head   从本地资源库恢复到工作区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">localhost:testing dhb$ git status -s</div><div class="line">M  8</div><div class="line">localhost:testing dhb$ echo &quot;test3&quot; &gt;&gt;8</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">MM 8</div><div class="line">localhost:testing dhb$ git checkout -- 8</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">M  8</div><div class="line">localhost:testing dhb$</div></pre></td></tr></table></figure>
</li>
<li><p>git checkout 从暂存区恢复数据到工作区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">localhost:testing dhb$ git status -s</div><div class="line">MM 8</div><div class="line">localhost:testing dhb$ git checkout 8</div><div class="line">localhost:testing dhb$ git status -s</div><div class="line">M  8</div></pre></td></tr></table></figure>
</li>
<li><p>git diff 工作区与暂存区作对比</p>
</li>
<li>git diff head 暂存区与本地库作对比</li>
</ul>
<p><img src="http://7x00f8.com1.z0.glb.clouddn.com/zhou5zhou6git1.jpg" alt="结构图"><br>网上找的一图，以上命令和操作均按照上图整理</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ntp ddos]]></title>
      <url>http://www.zhou5zhou6.com/2015/03/04/ntp_ddos/</url>
      <content type="html"><![CDATA[<p>##ntp ddos<br>最近运营商发过来个邮件，说我们的服务器发起ntp攻击<br>基础知识：<br><a href="http://drops.wooyun.org/papers/955" target="_blank" rel="external">http://drops.wooyun.org/papers/955</a></p>
<a id="more"></a>
<p>检测方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1.nmap -sU -pU:123 -n --script=ntp-monlist 10.151.91.180</div><div class="line">2.ntpdc -n -c monlist 10.151.91.180</div></pre></td></tr></table></figure></p>
<p>解决方法：<br>1.升级ntpserver到4.2.7p26或更高版本<br>2.在/etc/ntp.conf中加入disable monitor选项来禁用 monlist 功能。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">修改之后：执行检测命令</div><div class="line">60.164.223.131: timed out, nothing received</div><div class="line">***Request timed out</div></pre></td></tr></table></figure>
<p>备注<br>1.如果使用浪潮服务器，他的远程管理卡有一个busybox的环境，里面会启用ntp服务，剩下的你懂得。。。。<br>2.nmap -sV IP 扫描对方开放端口<br>  nmap -O IP 获取对方的操作系统信息</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[rundeck install]]></title>
      <url>http://www.zhou5zhou6.com/2015/01/27/rundeck_install/</url>
      <content type="html"><![CDATA[<p>Rundeck是一个帮助你在数据中心以及云环境中自动运行程序开源工具；</p>
<ul>
<li>Web API 提供web界面创建工程以及任务，并执行相关命令</li>
<li>distributed command execution   分布式命令执行</li>
<li>pluggable execution system (SSH by default) </li>
<li>multi-step workflows  多步骤工作流</li>
<li>job execution with on demand or scheduled runs job可以按照计划和需求定制</li>
<li>graphical web console for command and job execution  图形化的命令执行和job执行</li>
<li>role-based access control policy with support for LDAP/ActiveDirectory</li>
<li>history and auditing logs  历史和操作记录审计</li>
<li>open integration to external host inventory tools  开发的集成主机管理工具</li>
<li>command line interface tools  命令行界面工具<a id="more"></a>
####install rundeck</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install java-1.7.0</div><div class="line">rpm -Uvh http://repo.rundeck.org/latest.rpm</div><div class="line">yum install rundeck</div></pre></td></tr></table></figure>
<p>安装完毕后所有的配置文件都在/etc/rundeck下面</p>
<p>/etc/rundeck/framework.properties  #把这个里面的localhost改成你的域名或者ip地址<br>/etc/rundeck/rundeck-config.properties# 这里面的grails url中localhost改成 你的域名或者ip<br>/etc/rundeck/realm.properties  ###添加用户以及修改admin默认密码</p>
<p><img src="http://7x00f8.com1.z0.glb.clouddn.com/zhou5zhou6rundeck.png" alt="结构图"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pip使用备忘]]></title>
      <url>http://www.zhou5zhou6.com/2015/01/20/pip_error/</url>
      <content type="html"><![CDATA[<p>我处理的安装模块的方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum -y install python-setuptools</div><div class="line">easy_install pip</div><div class="line">pip 模块名字</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="pip-–help"><a href="#pip-–help" class="headerlink" title="pip –help"></a>pip –help</h1><p>Usage:<br>  pip <command> [options]</p>
<p>Commands:<br>  install                     安装软件.<br>  uninstall                   卸载软件.<br>  freeze                      按着一定格式输出已安装软件列表<br>  list                        列出已安装软件.<br>  show                        显示软件详细信息.<br>  search                      搜索软件，类似yum里的search.<br>  wheel                       Build wheels from your requirements.<br>  zip                         不推荐. Zip individual packages.<br>  unzip                       不推荐. Unzip individual packages.<br>  bundle                      不推荐. Create pybundles.<br>  help                        当前帮助.</p>
<p>General Options:<br>  -h, –help                  显示帮助.<br>  -v, –verbose               更多的输出，最多可以使用3次<br>  -V, –version               现实版本信息然后退出.<br>  -q, –quiet                 最少的输出.<br>  –log-file <path></path>           覆盖的方式记录verbose错误日志，默认文件：/root/.pip/pip.log<br>  –log <path></path>                不覆盖记录verbose输出的日志.<br>  –proxy <proxy>             Specify a proxy in the form [user:passwd@]proxy.server:port.<br>  –timeout <sec>             连接超时时间 (默认15秒).<br>  –exists-action <action>    Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup.<br>  –cert <path></path>               证书.</action></sec></proxy></p>
<p>pip 安装python模块报以下错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">error: invalid command &apos;egg_info&apos;</div><div class="line">Complete output from command python setup.py egg_info:</div><div class="line">/usr/lib64/python2.6/distutils/dist.py:266: UserWarning: Unknown distribution option: &apos;install_requires&apos;</div><div class="line"></div><div class="line">  warnings.warn(msg)</div><div class="line"></div><div class="line">usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]</div><div class="line"></div><div class="line">   or: -c --help [cmd1 cmd2 ...]</div><div class="line"></div><div class="line">   or: -c --help-commands</div><div class="line"></div><div class="line">   or: -c cmd --help</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">error: invalid command &apos;egg_info&apos;</div><div class="line"></div><div class="line">----------------------------------------</div><div class="line">Command &quot;python setup.py egg_info&quot; failed with error code 1 in /tmp/pip-yc1upK-build</div></pre></td></tr></table></figure>
<p>网上的说法都是需要升级setuptools</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install --upgrade setuptools</div></pre></td></tr></table></figure>
<p>可是我这里升级不行，不能升级到最新版本<br>pip show setuptools<br>查看模块的目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">Name: setuptools</div><div class="line">Version: 0.6rc11</div><div class="line">Location: /usr/lib/python2.6/site-packages</div><div class="line">Requires:</div></pre></td></tr></table></figure></p>
<p>进入/usr/lib/python2.6/site-packages目录删除setuptools-0.6c11-py2.6.egg-info</p>
<p>然后执行 pip install setuptools ，在安装一次</p>
<p>安装完毕后在运行以下pip list查看版本<br>然后执行pip install  你要安装的模块即可。</p>
<p>###参考<br><a href="http://sevennet.org/2014/12/23/how-to-python-pip-install-fails-invalid-command-egg_info/" target="_blank" rel="external">http://sevennet.org/2014/12/23/how-to-python-pip-install-fails-invalid-command-egg_info/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[登陆管理备忘]]></title>
      <url>http://www.zhou5zhou6.com/2015/01/16/user/</url>
      <content type="html"><![CDATA[<p>#用户管理<br>最近迁移跳板机，以前用户登录很混乱，现在决定整改一下<br><strong>1</strong>.分别建立运维，开发，idc用户，然后这3个用户的登陆人员全部都要通过公钥私钥的方式登陆；<br><a id="more"></a><br>遇到的问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Authentication refused: bad ownership or modes for directory</div><div class="line">解决方法就是改数组和响应文件的权限</div><div class="line">SSH doesn’t like it if your home or ~/.ssh directories have group write permissions. Your home directory should be writable only by you, ~/.ssh should be 700, and authorized_keys should be 600</div><div class="line"></div><div class="line"></div><div class="line">You can also get around this by adding StrictModes off to your ssh_config file, but I’d advise against it - fixing permissions is the way to go.</div></pre></td></tr></table></figure></p>
<p><strong>2</strong>.禁用账号密码登陆<br>修改 /etc/ssh/sshd_config<br>PasswordAuthentication no<br><strong>3</strong>.添加黑白名单，只允许特定IP链接<br>/etc/hosts.allow<br>/etc/hosts.deny<br><strong>4</strong>.对于登陆人员操作命令进行记录<br>修改bash源码，加上响应的字段，然后配置syslog即可<br>详细内容请搜索 bash记录审核，有一篇文章写得很全<br><a href="http://my.oschina.net/liujen/blog/78441" target="_blank" rel="external">http://my.oschina.net/liujen/blog/78441</a></p>
<p><strong>5</strong>.如果手头机器多，可以使用Kerberos认证登陆，上家公司在用这个，方便用户管理。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[处理mysql二进制文件]]></title>
      <url>http://www.zhou5zhou6.com/2015/01/08/mysql_1/</url>
      <content type="html"><![CDATA[<p>1.磁盘快满了。。。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">du -hs $(du -sk ./`ls -F |grep /` |sort -nr |awk &apos;&#123;print $NF&#125;&apos;)</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>2.<br>看看那里磁盘占用的多</p>
<blockquote>
<p>34G mysql/</p>
</blockquote>
<p>似乎知道那里的问题了</p>
<p>大量的mysql-bin.* 的bin-log文件</p>
<p>3.查看有那些文件</p>
<ul>
<li><strong>show binary</strong> ：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show binary logs;</div><div class="line">+------------------+------------+</div><div class="line">| Log_name         | File_size  |</div><div class="line">+------------------+------------+</div><div class="line">| mysql-bin.000001 |        125 |</div><div class="line">| mysql-bin.000002 |        125 |</div><div class="line">| mysql-bin.000003 |        125 |</div><div class="line">| mysql-bin.000004 |  656210028 |</div><div class="line">| mysql-bin.000005 |        125 |</div><div class="line">| mysql-bin.000006 |     746653 |</div><div class="line">| mysql-bin.000007 |     746625 |</div><div class="line">| mysql-bin.000008 |  268314159 |</div><div class="line">| mysql-bin.000009 |  599461400 |</div><div class="line">| mysql-bin.000010 | 1073742102 |</div><div class="line">| mysql-bin.000011 | 1073741967 |</div><div class="line">| mysql-bin.000012 |  253497344 |</div><div class="line">| mysql-bin.000013 | 1073742169 |</div><div class="line">| mysql-bin.000014 | 1073742102 |</div><div class="line">| mysql-bin.000015 | 1073742063 |</div><div class="line">| mysql-bin.000016 |  209742252 |</div><div class="line">| mysql-bin.000017 |  187371663 |</div><div class="line">| mysql-bin.000018 |   32566791 |</div><div class="line">| mysql-bin.000019 |   88206698 |</div><div class="line">| mysql-bin.000020 | 1073887203 |</div><div class="line">| mysql-bin.000021 | 1073953513 |</div><div class="line">| mysql-bin.000022 | 1073980511 |</div><div class="line">| mysql-bin.000023 | 1073939151 |</div><div class="line">| mysql-bin.000024 | 1073876767 |</div><div class="line">| mysql-bin.000025 | 1073742005 |</div><div class="line">| mysql-bin.000026 | 1073741970 |</div><div class="line">| mysql-bin.000027 | 1073742062 |</div><div class="line">| mysql-bin.000028 | 1073742042 |</div><div class="line">| mysql-bin.000029 |  714757209 |</div><div class="line">| mysql-bin.000030 |      11482 |</div><div class="line">| mysql-bin.000031 | 1073742120 |</div><div class="line">| mysql-bin.000032 | 1073742050 |</div><div class="line">| mysql-bin.000033 |  625698926 |</div><div class="line">+------------------+------------+</div><div class="line">33 rows in set (0.03 sec)</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>show binlog events [ in ‘log_name’][from pos][limit [offset] row_count]，用于在二进制日志中显示事,默认显示第一个bin文件<br>例如我想查看mysql-bin.000029<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show binlog events in &apos;mysql-bin.000029&apos; limit 10;</div></pre></td></tr></table></figure></p>
</blockquote>
<p>4.删除文件</p>
<blockquote>
<p>PURGE {MASTER | BINARY} LOGS TO ‘log_name’<br>PURGE {MASTER | BINARY} LOGS BEFORE ‘date’</p>
</blockquote>
<p> 用于删除列于在指定的日志或日期之前的日志索引中的所有二进制日志。这些日志也会从记录在日志索引文件中的清单中被删除，这样被给定的日志成为第一个。</p>
<p>例如删除mysql-bin.000003之前的日志<br>purge master logs to ‘mysql-bin.000003’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">mysql&gt; purge master logs to &apos;mysql-bin.000003&apos;;</div><div class="line">Query OK, 0 rows affected (0.11 sec)</div><div class="line"></div><div class="line">mysql&gt; show master logs;</div><div class="line">+------------------+------------+</div><div class="line">| Log_name         | File_size  |</div><div class="line">+------------------+------------+</div><div class="line">| mysql-bin.000003 |        125 |</div><div class="line">| mysql-bin.000004 |  656210028 |</div><div class="line">| mysql-bin.000005 |        125 |</div><div class="line">| mysql-bin.000006 |     746653 |</div><div class="line">| mysql-bin.000007 |     746625 |</div><div class="line">| mysql-bin.000008 |  268314159 |</div><div class="line">| mysql-bin.000009 |  599461400 |</div><div class="line">| mysql-bin.000010 | 1073742102 |</div><div class="line">| mysql-bin.000011 | 1073741967 |</div><div class="line">| mysql-bin.000012 |  253497344 |</div><div class="line">| mysql-bin.000013 | 1073742169 |</div><div class="line">| mysql-bin.000014 | 1073742102 |</div><div class="line">| mysql-bin.000015 | 1073742063 |</div><div class="line">| mysql-bin.000016 |  209742252 |</div><div class="line">| mysql-bin.000017 |  187371663 |</div><div class="line">| mysql-bin.000018 |   32566791 |</div><div class="line">| mysql-bin.000019 |   88206698 |</div><div class="line">| mysql-bin.000020 | 1073887203 |</div><div class="line">| mysql-bin.000021 | 1073953513 |</div><div class="line">| mysql-bin.000022 | 1073980511 |</div><div class="line">| mysql-bin.000023 | 1073939151 |</div><div class="line">| mysql-bin.000024 | 1073876767 |</div><div class="line">| mysql-bin.000025 | 1073742005 |</div><div class="line">| mysql-bin.000026 | 1073741970 |</div><div class="line">| mysql-bin.000027 | 1073742062 |</div><div class="line">| mysql-bin.000028 | 1073742042 |</div><div class="line">| mysql-bin.000029 |  714757209 |</div><div class="line">| mysql-bin.000030 |      11482 |</div><div class="line">| mysql-bin.000031 | 1073742120 |</div><div class="line">| mysql-bin.000032 | 1073742050 |</div><div class="line">| mysql-bin.000033 |  626208424 |</div><div class="line">+------------------+------------+</div><div class="line">31 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>例如删除 2015-01-07 22:46:26之前的日志<br>PURGE MASTER LOGS BEFORE ‘2014-11-07 22:46:26’;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mysql&gt; PURGE MASTER LOGS BEFORE &apos;2014-11-07 22:46:26&apos;;</div><div class="line">Query OK, 0 rows affected (0.44 sec)</div><div class="line"></div><div class="line">mysql&gt; show binary logs;</div><div class="line">+------------------+------------+</div><div class="line">| Log_name         | File_size  |</div><div class="line">+------------------+------------+</div><div class="line">| mysql-bin.000030 |      11482 |</div><div class="line">| mysql-bin.000031 | 1073742120 |</div><div class="line">| mysql-bin.000032 | 1073742050 |</div><div class="line">| mysql-bin.000033 |  626640614 |</div><div class="line">+------------------+------------+</div><div class="line">4 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>现在我想清楚剩下的<br> reset master;清空所有的二进制文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; reset master</div><div class="line">    -&gt; ;</div><div class="line">Query OK, 0 rows affected (0.29 sec)</div><div class="line"></div><div class="line">mysql&gt; show binary logs;</div><div class="line">+------------------+-----------+</div><div class="line">| Log_name         | File_size |</div><div class="line">+------------------+-----------+</div><div class="line">| mysql-bin.000001 |     14679 |</div><div class="line">+------------------+-----------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>###总结一下</p>
<p>1.使用purge清理<br>2.使用reset master 清空<br>3.在my.cnf配置文件【mysqld】段中加入，重启MySQL服务，例：<br>expire_logs_days＝3<br>删除三天前的日志<br>4.mark<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">show binlog events in &apos;binlog.000016&apos; limit 10;</div><div class="line">reset master 删除所有的二进制日志</div><div class="line">flush logs  产生一个新的binlog日志文件</div><div class="line">show master logs; / show binary logs; 查看二进制文件列表和文件大小</div><div class="line">./mysqlbinlog --start-datetime=&quot;2012-05-21 15:30:00&quot; --stop-datetime=&quot;2012-05-21 16:40:00&quot; /var/mysql/binlog/binlog.000005 &gt; a.log</div></pre></td></tr></table></figure></p>
<p>5.清理日志步骤<br> 要清理日志，需按照以下步骤：</p>
<ul>
<li>在每个从属服务器上，使用SHOW SLAVE STATUS来检查它正在读取哪个日志。</li>
<li>使用SHOW MASTER LOGS获得主服务器上的一系列日志。</li>
<li>在所有的从属服务器中判定最早的日志。这个是目标日志。如果所有的从属服务器是更新的，这是清单上的最后一个日志。</li>
<li>制作您将要删除的所有日志的备份。（这个步骤是自选的，但是建议采用。）</li>
<li>清理所有的日志，但是不包括目标日志。 </li>
</ul>
<p>6.查看数据库和表的大小</p>
<ul>
<li>进去指定schema 数据库（存放了其他的数据库的信息）<br>  use information_schema</li>
<li>查询所有数据的大小<br>　　select concat(round(sum(DATA_LENGTH/1024/1024),2),’MB’) as data from TABLES</li>
<li>查看指定数据库的大小;比如说 数据库apoyl<br>　　select concat(round(sum(DATA_LENGTH/1024/1024),2),’MB’) as data from TABLES where table_schema=’apoyl’;</li>
<li>查看指定数据库的表的大小<br>比如说 数据库apoyl 中apoyl_test表<br>　　select concat(round(sum(DATA_LENGTH/1024/1024),2),’MB’) as data from TABLES where table_schema=’apoyl’ and table_name=’apoyl_test’;</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git迁移]]></title>
      <url>http://www.zhou5zhou6.com/2015/01/07/git_1/</url>
      <content type="html"><![CDATA[<p>最近虚拟机迁移，git服务器要替换掉，本以为直接把git仓库拷贝过去就能用，结果还真不行<br>A 192.168.0.100  老的git服务器<br>B 192.168.0.200  新的git服务器</p>
<a id="more"></a>
<p>方法一<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">**1.从A拷贝库到本地**</div><div class="line">git clone git@192.168.0.100:library.git</div><div class="line">**2.查看remote的名字**</div><div class="line">git branch -r</div><div class="line">  origin/HEAD -&gt; origin/master</div><div class="line">  origin/master</div><div class="line">**3.修改remote git address**</div><div class="line">git remote set-url origin 192.168.0.200 </div><div class="line">**4.push到新的git服务器**</div><div class="line">git push git@192.168.0.200:library.git master</div><div class="line">**5.检查从新的git服务器Bclone下数据，看是否正常**</div></pre></td></tr></table></figure></p>
<p>方法二<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">**1.从A克隆一份裸版本库**</div><div class="line">git clone --bare git@192.168.0.100:library.git</div><div class="line">**2.通过镜像的方式push代码到新的B服务器（我通过gitolite管理的，所以已经有了一个新的library，如果没有创建一个即可）**</div><div class="line">git push git@192.168.0.200:library.git master</div><div class="line">**3.检查从新出的git服务器clone 是否正常</div></pre></td></tr></table></figure></p>
<p>参考：<a href="http://segmentfault.com/q/1010000000124379" target="_blank" rel="external">http://segmentfault.com/q/1010000000124379</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[smokeping_install]]></title>
      <url>http://www.zhou5zhou6.com/2014/12/26/smokeping_install/</url>
      <content type="html"><![CDATA[<p>###smokeping安装笔记</p>
<p>1.配置yum的epel源</p>
<blockquote>
<p>rpm -ivh <a href="http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm" target="_blank" rel="external">http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</a></p>
</blockquote>
<a id="more"></a>
<p>2.安装相关的包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum  install httpd fping echoping curl  rrdtool perl perl-Net-Telnet perl-Net-DNS perl-LDAP perl-libwww-perl perl-RadiusPerl perl-IO-Socket-SSL perl-Socket6 perl-CGI-SpeedyCGI perl-devel perl-FCGI.x86_64 perl-CGI.x86_64 rrdtool-perl.x86_64</div></pre></td></tr></table></figure>
<p>3.下载smokeping安装包</p>
<blockquote>
<p>wget -N <a href="http://oss.oetiker.ch/smokeping/pub/smokeping-2.6.11.tar.gz" target="_blank" rel="external">http://oss.oetiker.ch/smokeping/pub/smokeping-2.6.11.tar.gz</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">tar zxvf smokeping-2.6.11.tar.gz</div><div class="line">cd smokeping-2.6.11/setup</div><div class="line">bash build-perl-modules.sh</div><div class="line">cd ..</div><div class="line">./configure --prefix=/data/smokeping/</div><div class="line">/usr/bin/gmake install</div><div class="line">cd /data/smokeping/</div><div class="line">mkdir cache data var rrds</div><div class="line">chown daemon:daemon cache data var rrds</div></pre></td></tr></table></figure>
<p>备忘：<br>编译的时候如果报以下 请执行      </p>
<blockquote>
<p>./setup/build-perl-modules.sh /data/opt/smokeping/thirdparty</p>
</blockquote>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">** Aborting Configure ******************************</div><div class="line"></div><div class="line">  If you know where perl can find the missing modules, set</div><div class="line">  the PERL5LIB environment variable accordingly.</div><div class="line"></div><div class="line">  FIRST though, make sure that &apos;perl&apos; starts the perl</div><div class="line">  binary you want to use for SmokePing.</div><div class="line"></div><div class="line">  Now you can install local copies of the missing modules</div><div class="line">  by running</div><div class="line"></div><div class="line">    ./setup/build-perl-modules.sh /data/opt/smokeping/thirdparty</div><div class="line"></div><div class="line">  The RRDs perl module is part of RRDtool. Either use the rrdtool</div><div class="line">  package provided by your OS or install rrdtool from source.</div><div class="line">  If you install from source, the RRDs module is located</div><div class="line">  PREFIX/lib/perl</div></pre></td></tr></table></figure>
<p> 4.配置文件的配置方法请参照网上的搜索<br> <a href="http://oss.oetiker.ch/smokeping/doc/smokeping_master_slave.en.html#___top" target="_blank" rel="external">http://oss.oetiker.ch/smokeping/doc/smokeping_master_slave.en.html#___top</a><br> <a href="https://wiki.archlinux.org/index.php/Smokeping#Tr.cgi" target="_blank" rel="external">https://wiki.archlinux.org/index.php/Smokeping#Tr.cgi</a></p>
<p> 5.运行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">检查配置文件</div><div class="line"># /data/smokeping/bin/smokeping  --config /etc/smokeping/config --check</div><div class="line">以debug方式启动</div><div class="line"># /data/smokeping/bin/smokeping  --config /etc/smokeping/config --debug</div><div class="line">以debug方式后台启动</div><div class="line"># /data/smokeping/bin/smokeping  --config /etc/smokeping/config --debug-daemon</div><div class="line">还可以加上日志文件 --logfile=/var/log/smokeping.log</div></pre></td></tr></table></figure>
<p>备忘</p>
<p>1.smokeping支持主从，客户端的配置方式基本是<br>/data/smokeping/bin/smokeping –master-url=<a href="http://smokepingmasterurl/smokeping/smokeping.cgi" target="_blank" rel="external">http://smokepingmasterurl/smokeping/smokeping.cgi</a> –cache-dir=/data/smokeping/ –shared-secret=/data/smokeping/etc/smokeping_secrets –slave-name=客户端名字（smokepingmaster主配置文件中写好的）</p>
<p>2.从上面可以看出客户端的配置文件都会去master去请求服务拿配置数据<br>这时候就要注意了，如果机器较多，perl执行cgi的效率较低，会造成master主机负载高，cpu占用高，最后导致机器宕机。我这里大概有500左右的并发，结果一旦请求都过来了，机器基本就挂了。</p>
<p>3.如果节点太多，还是建议自己写程序搞吧。量大了smokeping真的扛不住。。。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[puppet_file]]></title>
      <url>http://www.zhou5zhou6.com/2014/12/23/puppet_file/</url>
      <content type="html"><![CDATA[<p>###puppet Resources (file)<br>puppet的file资源<br>1.可以管理文件，目录，软连接<br>2.目录文件的所有者、权限<br>3.删除或者创建文件目录</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">file &#123; &apos;resource title&apos;:</div><div class="line">  path                    =&gt; # 文件或目录完整路径</div><div class="line">  ensure                  =&gt; # 指定文件的状态 present（不存在就创建）, absent（存在就删除）, file（确定文件是普通的file）, directory（确定是目录）, and link（确定是软连接）.</div><div class="line">  backup                  =&gt; # 节点文件改动之前将文件备份到本地，这个需要配合filebucket实现；</div><div class="line">  checksum                =&gt; #  检查文件是否更新，可以指定检测类型，例如；md5, md5lite, sha256, sha256lite, mtime, ctime, none.默认的检测类型是md5</div><div class="line">  content                 =&gt; # 文件的具体内容；可以是字符串也可以是erb模板</div><div class="line">  ctime                   =&gt; # 检查当前文件的创建日期</div><div class="line">  force                   =&gt; # 执行文件操作，强制破坏一个或者多个目录；可选的值有true, false, yes, no. 以下操作要必须指定此参数：清理目录；替换目录或者软连接；删除某个目录ensure =&gt; absent</div><div class="line">  group                   =&gt; # 指定用户组</div><div class="line">  ignore                  =&gt; # 忽略某个目录或者文件</div><div class="line">  links                   =&gt; # 对于软连接文件如何操作：值有follow, manage.follow将会拷贝目标文件代替链接文件，manage将只会拷贝链接文件</div><div class="line">  mode                    =&gt; # 文件或者目录的权限</div><div class="line">  mtime                   =&gt; # 检查文件的修改时间</div><div class="line">  owner                   =&gt; # 文件或者目录的属主</div><div class="line">  provider                =&gt; # 具体后端使用的file资源，不常用</div><div class="line">  purge                   =&gt; # 清理目录中没有通过puppet管理的文件；这个参数只有在指定以下参数的时候才有意义 ensure =&gt; directory and recurse =&gt; true</div><div class="line">  recurse                 =&gt; # 仅对 ensure =&gt; directory 有效；指定目录是否递归和递归深度；false：不进行递归，默认配置；remote：远程进行递归调用；true：本地进行递归</div><div class="line">  recurselimit            =&gt; # 当使用ensure =&gt; directory和recurse =&gt; true or recurse =&gt; remote；使用次参数指定递归深度，取值/^[0-9]+$/</div><div class="line">  replace                 =&gt; # 是否替换已经存在的文件或者链接；Valid values are true, false, yes, no.</div><div class="line">  selinux_ignore_defaults =&gt; # selinux设置</div><div class="line">  selrange                =&gt; # What the SELinux range component of the context...</div><div class="line">  selrole                 =&gt; # What the SELinux role component of the context...</div><div class="line">  seltype                 =&gt; # What the SELinux type component of the context...</div><div class="line">  seluser                 =&gt; # What the SELinux user component of the context...</div><div class="line">  show_diff               =&gt; # 更新时候显示不同，默认是true；可选项：Valid values are true, false, yes, no.</div><div class="line">  source                  =&gt; # 指定将会被拷贝到指定位置的资源文件；这个参数和 content以及target不能同时使用</div><div class="line">  source_permissions      =&gt; # 是否拷贝源文件的权限；Valid values are use（使用源文件权限）, use_when_creating（仅仅当创建的时候才使用）, ignore.</div><div class="line">  sourceselect            =&gt; # Whether to copy all valid sources, or just the...</div><div class="line">  target                  =&gt; # 指定创建链接文件的目标文件或者目录。</div><div class="line">  type                    =&gt; # 只读的方式检查一个文件</div><div class="line">  validate_cmd            =&gt; # 当前配置文件被替代前用validate_cmd指定的命令进行校验，只有返回true才会被替换</div><div class="line">  validate_replacement    =&gt; # The replacement string in a validate_cmd that will be replaced with an input file name. Defaults to: %</div><div class="line">  # ...plus any applicable metaparameters.</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>####1,创建文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">file &#123;&quot;/usr/local/etc/nginx.conf&quot;:</div><div class="line">  ensure =&gt; present,</div><div class="line">  content=&gt; template(&quot;nginx_cdn/nginx.conf&quot;),</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">file &#123;&quot;/usr/local/etc/nginx.conf&quot;:</div><div class="line">  ensure =&gt; present,</div><div class="line">  source =&gt; &quot;puppet:///nginx_cdn/nginx.conf&quot;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>####2,创建目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">file &#123;&quot;/usr/local/etc/herbert&quot;:</div><div class="line">  ensure =&gt; directory;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>####3,创建软连接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">file&#123;&quot;/lib/libffmux.so&quot;:</div><div class="line">  ensure =&gt; link,</div><div class="line">  target =&gt; &quot;/lib/libffmux.so.0&quot;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>####4.同步目录完全覆盖</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">file&#123;&quot;/usr/local/etc/letv_nginx&quot;:</div><div class="line">  ensure =&gt; directory,</div><div class="line">  recurse =&gt; true,</div><div class="line">  purge =&gt; true,</div><div class="line">  source =&gt; &quot;puppet:///nginx_cdn_four/letv_nginx&quot;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>####5.同步目录不覆盖已经有的目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">file&#123;&quot;/usr/local/etc/letv_nginx&quot;:</div><div class="line">  ensure =&gt; directory,</div><div class="line">  recurse =&gt; true,</div><div class="line">  purge =&gt; true,</div><div class="line">  replace =&gt; fales,</div><div class="line">  source =&gt; &quot;puppet:///nginx_cdn_four/letv_nginx&quot;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>####6.同步目到第三层目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">file&#123;&quot;/usr/local/etc/letv_nginx&quot;:</div><div class="line">  ensure =&gt; directory,</div><div class="line">  recurse =&gt; true,</div><div class="line">  purge =&gt; true,</div><div class="line">  recurselimit =&gt; 3,</div><div class="line">  replace =&gt; fales,</div><div class="line">  source =&gt; &quot;puppet:///nginx_cdn_four/letv_nginx&quot;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>####7.删除某个文件或者目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">file &#123;&quot;/usr/local/etc/letv_nginx&quot;:</div><div class="line">  ensure =&gt; absent,</div><div class="line">  force =&gt; true,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>备注：1，以上同步目录文件的时候，如果使用了replace，文件即使发生改变，puppet也不会更新，除非删除那个文件，并且更新的时候，他会把这个目录下的所有文件都更新。<br>      2.使用source注意带来的puppet服务器连接数过高的问题。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[puppet_cron]]></title>
      <url>http://www.zhou5zhou6.com/2014/12/17/puppet_cron/</url>
      <content type="html"><![CDATA[<p>###puppet Resources（cron）<br>配置和管理服务器的cron资源<br>每一个cron资源需要一个command属性，用户属性和时间周期属性（Every cron resource created by Puppet requires a command and at least one periodic attribute (hour, minute, month, monthday, weekday, or special).）<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">cron &#123; &apos;resource title&apos;:                        #资源标题</div><div class="line">  name        =&gt; # cron作业的名字，用以区别其他的cron；如果为空就是resource title</div><div class="line">  ensure      =&gt; # 该资源是否可用present（没有就创建）, absent（有就删除）</div><div class="line">  command     =&gt; # 在cron中运行的命令</div><div class="line">  environment =&gt; # 指定crontab的环境变量</div><div class="line">  hour        =&gt; # 运行crontab的小时【0-23】</div><div class="line">  minute      =&gt; # 运行crontab的分钟【0-59】</div><div class="line">  month       =&gt; # 运行crontab的月份【1-12】</div><div class="line">  monthday    =&gt; # 每个月的那天运行crontab【1-31】</div><div class="line">  provider    =&gt; # 指定后端运行的类型，默认是crontab；非常用配置</div><div class="line">  special     =&gt; # 指定目标主机上的属性 （这个没用过）</div><div class="line">  target      =&gt; # cron job存放位置</div><div class="line">  user        =&gt; # cron job运行用户</div><div class="line">  weekday     =&gt; # 运行crontab的星期【0-7】，注意0是星期日</div><div class="line">  # ...plus any applicable metaparameters.</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###备注：</p>
<blockquote>
<p>1：时间属性，不写，代表<em>；指定多个时间，使用数组，例：[1,3,5]。<br>2: puppet创建的cron文件保存在了/var/spool/cron目录下，而不是我们习惯用的/etc/crontab或是/etc/cron.</em>下面。<br>3：cron的格式<br> 分    时    日     月      周       命令<br>minute hour month monthday weekday command</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[puppet+passenger+nginx操作笔记]]></title>
      <url>http://www.zhou5zhou6.com/2014/12/16/nginx_passenger_puppet/</url>
      <content type="html"><![CDATA[<p>###puppet+passenger+nginx操作笔记</p>
<p>####nginx</p>
<blockquote>
<p>groupadd -g 1000 nginx<br>useradd -u 1000 -g 1000 nginx<br>如果无特殊指定可以直接 useradd nginx</p>
</blockquote>
<p>安装nginx的环境</p>
<blockquote>
<p>yum install ruby-devel gcc make pcre-devel zlib-devel openssl-devel pam-devel curl-devel rpm-buildyum install -y ruby-devel rubygems gcc</p>
</blockquote>
<p>通过gem安装passenger<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install rake rack passenger --no-rdoc --no-ri</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>下载相关安装包</p>
<blockquote>
<p>wget <a href="http://nginx.org/download/nginx-1.6.2.tar.gz" target="_blank" rel="external">http://nginx.org/download/nginx-1.6.2.tar.gz</a><br>wget -N  ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.34.tar.bz2</p>
</blockquote>
<p>解压安装过程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">tar jxvf pcre-8.34.tar.bz2</div><div class="line">tar zxvf nginx-1.6.2.tar.gz</div><div class="line">cd nginx-1.6.2</div><div class="line">./configure --user=nginx --group=nginx --prefix=/etc/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/root/pcre-8.34 --add-module=`passenger-config --root`/ext/nginx</div><div class="line">make &amp;&amp; make install</div><div class="line">mkdir -p /etc/puppet/rack/public</div></pre></td></tr></table></figure></p>
<p>####puppet安装和配置<br>yum install puppet<br>或者yum  update  puppet</p>
<blockquote>
<p>cp /usr/share/puppet/ext/rack/files/config.ru /etc/puppet/rack/<br>chown -R puppet. /etc/puppet/rack/</p>
</blockquote>
<p>nginx的配置文件(带ssl校验的)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">user  nginx nginx;</div><div class="line">worker_processes  12;</div><div class="line">pid        /var/run/nginx.pid;</div><div class="line">events &#123;</div><div class="line">    worker_connections  32768;</div><div class="line">&#125;</div><div class="line">http &#123;</div><div class="line">    passenger_root /usr/lib/ruby/gems/1.8/gems/passenger-4.0.19;</div><div class="line">    passenger_ruby /usr/bin/ruby;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line">    sendfile        on;</div><div class="line">    keepalive_timeout  65;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen 8140                ssl;</div><div class="line">    server_name                puppetmaster;</div><div class="line">    passenger_enabled          on;</div><div class="line">    passenger_set_cgi_param    HTTP_X_CLIENT_DN $ssl_client_s_dn;</div><div class="line">    passenger_set_cgi_param    HTTP_X_CLIENT_VERIFY $ssl_client_verify;</div><div class="line">    proxy_buffer_size 4000k;</div><div class="line">    proxy_buffering on;</div><div class="line">    proxy_buffers 32 1280k;</div><div class="line">    proxy_busy_buffers_size 17680k;</div><div class="line">    client_max_body_size 10m;</div><div class="line">    client_body_buffer_size 4096k;</div><div class="line">    access_log /var/log/nginx/puppet_access.log;</div><div class="line">    error_log /var/log/nginx/puppet_error.log;</div><div class="line">    root /etc/puppet/rack/public;</div><div class="line">    ssl off;</div><div class="line">    ssl_session_timeout 5m;</div><div class="line">    ssl_certificate /var/lib/puppet/ssl/certs/puppetmaster.pem;</div><div class="line">    ssl_certificate_key /var/lib/puppet/ssl/private_keys/puppetmaster.pem;</div><div class="line">    ssl_client_certificate /var/lib/puppet/ssl/certs/ca.pem;</div><div class="line">    ssl_crl /var/lib/puppet/ssl/ca/ca_crl.pem;</div><div class="line">    ssl_verify_client optional;</div><div class="line">    ssl_ciphers SSLv2:-LOW:-EXPORT:RC4+RSA;</div><div class="line">    ssl_prefer_server_ciphers on;</div><div class="line">    ssl_verify_depth 1;</div><div class="line">    ssl_session_cache shared:SSL:128m;</div><div class="line">    # File sections</div><div class="line">    location /production/file_content/files/ &#123;</div><div class="line">      types &#123; &#125;</div><div class="line">      default_type application/x-raw;</div><div class="line">      alias /etc/puppet/files/;</div><div class="line">  &#125;</div><div class="line"> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>nginx配置（不带ssl认证的）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">user  nginx nginx;</div><div class="line">worker_processes  12;</div><div class="line">pid        /var/run/nginx.pid;</div><div class="line">events &#123;</div><div class="line">    worker_connections  32768;</div><div class="line">&#125;</div><div class="line">http &#123;</div><div class="line">    log_format letvcdn &apos;$server_addr $remote_addr [$time_local] &quot;$request&quot; &apos;</div><div class="line">                       &apos;$status $body_bytes_sent $request_time &quot;$http_referer&quot; &apos;</div><div class="line">                       &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot; $host $upstream_addr&apos;;</div><div class="line">    passenger_root /usr/lib/ruby/gems/1.8/gems/passenger-4.0.53;</div><div class="line">    passenger_ruby /usr/bin/ruby;</div><div class="line">    passenger_max_pool_size 12;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line">    sendfile        on;</div><div class="line">    keepalive_timeout  65;</div><div class="line">    server &#123;</div><div class="line">        listen 192.100.58.166:8140;</div><div class="line">    #server_name                puppetmaster;</div><div class="line">    passenger_enabled          on;</div><div class="line">    passenger_set_cgi_param    HTTP_X_CLIENT_DN $ssl_client_s_dn;</div><div class="line">    passenger_set_cgi_param    HTTP_X_CLIENT_VERIFY $ssl_client_verify;</div><div class="line">    proxy_buffer_size 4000k;</div><div class="line">    proxy_buffering on;</div><div class="line">    proxy_buffers 32 1280k;</div><div class="line">    proxy_busy_buffers_size 17680k;</div><div class="line">    client_max_body_size 10m;</div><div class="line">    client_body_buffer_size 4096k;</div><div class="line">    access_log /var/log/nginx/puppet_access.log letvcdn;</div><div class="line">    access_log off;</div><div class="line">    error_log /var/log/nginx/puppet_error.log;</div><div class="line">    root /etc/puppet/rack/public; </div><div class="line">    &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>puppet配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[main]</div><div class="line">    logdir = /var/log/puppet</div><div class="line">    rundir = /var/run/puppet</div><div class="line"></div><div class="line">    ssldir = $vardir/ssl</div><div class="line">    bindaddress = 0.0.0.0</div><div class="line">    fileserverconfig = /etc/puppet/fileserver.conf</div><div class="line">    ssl_client_verify_header = HTTP_X_CLIENT_VERIFY</div><div class="line">    ssl_client_header = HTTP_X_CLIENT_ON</div><div class="line">    ca =  false</div></pre></td></tr></table></figure>
<p>启动nginx<br>passenger-status 查看passenger的状态</p>
<h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>1.打开nginx日志如果报403请调整auth.conf<br>2.如果nginx日志报500，请检查相关目录权限，通过查看message日志可以找到；<br>3.注意passenger版本，如果报以下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">unknown directive &quot;passenger_set_cgi_param&quot; in /etc/nginx/conf.d/puppet.conf:6</div></pre></td></tr></table></figure></p>
<p>请参照<br><a href="https://github.com/phusion/passenger/blob/master/CHANGELOG" target="_blank" rel="external">https://github.com/phusion/passenger/blob/master/CHANGELOG</a><br>查看passenger版本更新变化,5.0有以下的变化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">* [Nginx] The `passenger_set_cgi_param` option has been removed and replaced by `passenger_set_header` and `passenger_env_var`.</div><div class="line">* [Nginx] `passenger_show_version_in_header` is now only valid in the `http` context.</div></pre></td></tr></table></figure></p>
<p>4.日志报500，权限等都调整了，可是还是继续500<br>解决方法：把/var/lib/puppet/ssl/下面的老文件删除即可</p>
<p>5.nginx编译<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dding module in /usr/lib/ruby/gems/1.8/gems/passenger-5.0.21/ext/nginx</div><div class="line">./configure: error: no /usr/lib/ruby/gems/1.8/gems/passenger-5.0.21/ext/nginx/config was found</div></pre></td></tr></table></figure></p>
<p>原因 和解决方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">The officially supported way to obtain the location of the Nginx module is by running `passenger-config about nginx-addon-dir`.</div><div class="line">ext/nginx not found in 5.0.20</div><div class="line"></div><div class="line">./configure --user=nginx --group=nginx --prefix=/etc/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/root/pcre-8.37 --add-module=`passenger-config --root`/src/nginx_module</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[kibana采用特定字段作为x时间轴]]></title>
      <url>http://www.zhou5zhou6.com/2014/12/04/logstash/</url>
      <content type="html"><![CDATA[<p>###kibana使用其他字段作为x坐标时间轴<br>1.最近使用logstash统计上报的日志，由于网络限制只能一个小时收集一次日志，这个时候日志展现就会显示日志入ES的时间，而不是日志记录时间<br>解决方法：<br><a href="http://logstash.net/docs/1.4.2/filters/date" target="_blank" rel="external">http://logstash.net/docs/1.4.2/filters/date</a></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">filter &#123;</div><div class="line">  date &#123;</div><div class="line">    add_field =&gt; ... # hash (optional), default: &#123;&#125;</div><div class="line">    add_tag =&gt; ... # array (optional), default: []</div><div class="line">    locale =&gt; ... # string (optional)</div><div class="line">    match =&gt; ... # array (optional), default: []</div><div class="line">    remove_field =&gt; ... # array (optional), default: []</div><div class="line">    remove_tag =&gt; ... # array (optional), default: []</div><div class="line">    target =&gt; ... # string (optional), default: &quot;@timestamp&quot;</div><div class="line">    timezone =&gt; ... # string (optional)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"> target</div><div class="line"></div><div class="line">    Value type is string</div><div class="line">    Default value is &quot;@timestamp&quot;</div><div class="line"></div><div class="line">Store the matching timestamp into the given target field. If not provided, default to updating the @timestamp field of the event.</div></pre></td></tr></table></figure>
<p>由上可以看出使用target指定存储时间戳<br>范例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">   date &#123;</div><div class="line">        target =&gt; &quot;runtime&quot;</div><div class="line">        locale =&gt; en</div><div class="line">        match =&gt; [ &quot;timestamp&quot; , &quot;dd/MMM/YYYY:HH:mm:ss Z&quot;  ]</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">               &quot;message&quot; =&gt; &quot;02/Dec/2014:17:35:43 +0800,CDN-HLJ,192.168.1.100,BJ-CNC-M,192.168.1.200,1,23.903,24.517,28.181,200,0.000,0.024,0.024,0.050,1.004,1048576,1044379.000,20&quot;,</div><div class="line">              &quot;@version&quot; =&gt; &quot;1&quot;,</div><div class="line">            &quot;@timestamp&quot; =&gt; &quot;2014-12-04T01:21:42.057Z&quot;,</div><div class="line">                  &quot;type&quot; =&gt; &quot;curllog&quot;,</div><div class="line">                  &quot;host&quot; =&gt; &quot;xxx.xxx.xxx&quot;,</div><div class="line">                  &quot;path&quot; =&gt; &quot;/data/curldata/curllog&quot;,</div><div class="line">             &quot;timestamp&quot; =&gt; &quot;02/Dec/2014:17:35:43 +0800&quot;,</div><div class="line">              &quot;ipzone_s&quot; =&gt; &quot;CDN-HLJ&quot;,</div><div class="line">                  &quot;ip_s&quot; =&gt; &quot;192.168.1.100&quot;,</div><div class="line">              &quot;ipzone_d&quot; =&gt; &quot;BJ-CNC-M&quot;,</div><div class="line">                  &quot;ip_d&quot; =&gt; &quot;192.168.1.200&quot;,</div><div class="line">                  &quot;loss&quot; =&gt; 1.0,</div><div class="line">              &quot;ping_min&quot; =&gt; 23.903,</div><div class="line">              &quot;ping_avg&quot; =&gt; 24.517,</div><div class="line">              &quot;ping_max&quot; =&gt; 28.181,</div><div class="line">             &quot;http_code&quot; =&gt; 200.0,</div><div class="line">       &quot;time_namelookup&quot; =&gt; 0.0,</div><div class="line">          &quot;time_connect&quot; =&gt; 0.024,</div><div class="line">      &quot;time_pretransfer&quot; =&gt; 0.024,</div><div class="line">    &quot;time_starttransfer&quot; =&gt; 0.05,</div><div class="line">            &quot;time_total&quot; =&gt; 1.004,</div><div class="line">         &quot;size_download&quot; =&gt; 1048576.0,</div><div class="line">        &quot;speed_download&quot; =&gt; 1044379.0,</div><div class="line">                   &quot;tag&quot; =&gt; &quot;20&quot;,</div><div class="line">                  &quot;tags&quot; =&gt; [</div><div class="line">        [0] &quot;duhaibin&quot;</div><div class="line">    ],</div><div class="line">               &quot;runtime&quot; =&gt; &quot;2014-12-02T09:35:43.000Z&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.关于字符编码的问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Failed parsing date from field &#123;:field=&gt;&quot;timestamp&quot;, :value=&gt;&quot;02/Dec/2014:16:52:43 +0800&quot;, :exception=&gt;java.lang.IllegalArgumentException: Invalid format: &quot;02/Dec/2014:16:52:43 +0800&quot; is malformed at &quot;Dec/2014:16:52:43 +0800&quot;, :level=&gt;:warn&#125;</div></pre></td></tr></table></figure></p>
<p>在服务器上面入数据的时候报以上的错误 ，数据未展现<br>原因是我本地的declare -x LANG=”zh_CN.UTF-8”<br>这个时候就需要使用locale转一下,也就是在以上的date代码块中使用要使用</p>
<blockquote>
<pre><code>locale =&gt; en
</code></pre></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"> locale</div><div class="line"></div><div class="line">    Value type is string</div><div class="line">    There is no default value for this setting.</div><div class="line"></div><div class="line">Specify a locale to be used for date parsing. If this is not specified, the platform default will be used.</div><div class="line"></div><div class="line">The locale is mostly necessary to be set for parsing month names and weekday names.</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[按秒拉起服务进程]]></title>
      <url>http://www.zhou5zhou6.com/2014/11/21/monitor/</url>
      <content type="html"><![CDATA[<p>###如何拉起服务<br>以前服务的自动拉起都是通过crontab调用脚本实现的。<br>crontab拉起最低只能控制每分钟。<br>最近同事需要对某个进程控制在秒级别。。。<br><a id="more"></a></p>
<p>####方法一<br>后台执行此文件，这样就是每15秒执行某个命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">while [ 1 ]; do</div><div class="line">    echo &quot;Hell yeah!&quot;</div><div class="line">    sleep 15</div><div class="line">done</div></pre></td></tr></table></figure></p>
<p>####方法二<br>crontab里面执行多条</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">* * * * * root run-parts /etc/cron.15sec &gt; /dev/null 2&gt; /dev/null</div><div class="line">* * * * * root sleep 15; run-parts /etc/cron.15sec &gt; /dev/null 2&gt; /dev/null</div><div class="line">* * * * * root sleep 30; run-parts /etc/cron.15sec &gt; /dev/null 2&gt; /dev/null</div><div class="line">* * * * * root sleep 45; run-parts /etc/cron.15sec &gt; /dev/null 2&gt; /dev/null</div></pre></td></tr></table></figure>
<p>####方法三<br>使用monit<br>其中monit server端是带有web界面的，那个是收费的<br>客户端是免费的<br>monit可以配置拉起任意带pid的进程，并且可以设定拉起规则，例如检测端口，检测服务；还可以指定检测多少次就停止检测；</p>
<p><a href="http://mmonit.com/monit/documentation/monit.html" target="_blank" rel="external">官方文档</a></p>
<blockquote>
<p>补充：其实还可以辅助使用initctl管理monit，这样即使别人杀掉monit也会马上拉起monit，再通过monit及时监控要拉起的服务。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[puppet扩展]]></title>
      <url>http://www.zhou5zhou6.com/2014/11/11/puppetmore/</url>
      <content type="html"><![CDATA[<p>##puppet扩展</p>
<p>###一、第一次调整<br>刚开始就一台puppet服务器，为2k台机器提供服务，架构是puppet+nginx+mongrel<br>mongrel开了12个端口，nginx做调度为12个端口的mongrel分配任务</p>
<blockquote>
<p>备注：puppet3以后就不能使用mongrel开多端口，需要使用passenger</p>
</blockquote>
<p>随着机器的量越来越多，一台机器经常更新出问题，导致分发出问题；<br>后来做了横向扩展，找一台机器专门做调度，后端放4台机器（4台机器分别是mongrel起多端口）；调整后更新效率比以前高了很多；<br><a id="more"></a></p>
<p>###二、第二次调整<br>目前4台机器支持5K台puppet更新，感觉有些浪费；<br>并且目前的架构是puppet+mongrel;mongrel查看状态不方便；有的时候4台机器中2个停了，另外2台就会出问题，cpu占用的很高。<br>所以就打算采用puppet+passenger+nginx的架构</p>
<p>####1）、puppetmaster都是passenger+nginx这种架构<br><a href="http://kisspuppet.com/2014/10/20/puppet_learning_ext4/" target="_blank" rel="external">部署方式</a><br><a href="http://kisspuppet.com/2014/10/21/puppet_learning_ext6/" target="_blank" rel="external">整合方式</a></p>
<p><strong>ca认证</strong>   起puppet的8141端口，提供认证服务<br><strong>负载均衡</strong> nginx配置upstream，hash规则建议采用ip hash<br><strong>puppet server</strong>  nginx+passenger方式，通过定义passenger_max_pool_size,可以启用多个passenger，并且这个会根据服务量的多少，自己回增长，直到达到你设置的最大的值。</p>
<p>例如我使用的6核cpu,6G内存虚拟机<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">Every 2.0s: passenger-status                                  Tue Nov 11 16:16:24 2014</div><div class="line"></div><div class="line">Version : 4.0.53</div><div class="line">Date    : Tue Nov 11 16:16:24 +0800 2014</div><div class="line">Instance: 20637</div><div class="line">----------- General information -----------</div><div class="line">Max pool size : 12</div><div class="line">Processes     : 12</div><div class="line">Requests in top-level queue : 0</div><div class="line"></div><div class="line">----------- Application groups -----------</div><div class="line">/etc/puppet/rack#default:</div><div class="line">  App root: /etc/puppet/rack</div><div class="line">  Requests in queue: 0</div><div class="line">  * PID: 27059   Sessions: 0       Processed: 6365    Uptime: 2h 29m 17s</div><div class="line">    CPU: 14%     Memory  : 99M     Last used: 1s ago</div><div class="line">  * PID: 27154   Sessions: 0       Processed: 6711    Uptime: 2h 28m 40s</div><div class="line">    CPU: 15%     Memory  : 98M     Last used: 5s ago</div><div class="line">  * PID: 27175   Sessions: 0       Processed: 6048    Uptime: 2h 28m 30s</div><div class="line">    CPU: 14%     Memory  : 98M     Last used: 9s ago</div><div class="line">  * PID: 27189   Sessions: 0       Processed: 5789    Uptime: 2h 28m 30s</div><div class="line">    CPU: 13%     Memory  : 95M     Last used: 6s ago</div><div class="line">  * PID: 1508    Sessions: 0       Processed: 5493    Uptime: 1h 47m 0s</div><div class="line">    CPU: 17%     Memory  : 109M    Last used: 0s ago</div><div class="line">  * PID: 3757    Sessions: 0       Processed: 5464    Uptime: 1h 32m 46s</div><div class="line">    CPU: 20%     Memory  : 95M     Last used: 2s ago</div><div class="line">  * PID: 3780    Sessions: 0       Processed: 4974    Uptime: 1h 32m 42s</div><div class="line">    CPU: 18%     Memory  : 95M     Last used: 10s ago</div><div class="line">  * PID: 3795    Sessions: 1       Processed: 5314    Uptime: 1h 32m 42s</div><div class="line">    CPU: 19%     Memory  : 97M     Last used: 0s ago</div><div class="line">  * PID: 3800    Sessions: 0       Processed: 5312    Uptime: 1h 32m 41s</div><div class="line">    CPU: 19%     Memory  : 97M     Last used: 8s ago</div><div class="line">  * PID: 3822    Sessions: 0       Processed: 4937    Uptime: 1h 32m 36s</div><div class="line">    CPU: 17%     Memory  : 95M     Last used: 2s ago</div><div class="line">  * PID: 3830    Sessions: 0       Processed: 4891    Uptime: 1h 32m 36s</div><div class="line">    CPU: 18%     Memory  : 99M     Last used: 9s ago</div><div class="line">  * PID: 3838    Sessions: 0       Processed: 5203    Uptime: 1h 32m 36s</div><div class="line">    CPU: 18%     Memory  : 99M     Last used: 2s ago</div></pre></td></tr></table></figure></p>
<p>每个进程大概占用100M左右，不过cpu的消耗就高了些，zabbix监控显示cpu已经吃到了64%，而且很稳定；</p>
<p>####2）、我的情况<br>我这边由于以前采用的是puppet+mongrel，目前手头机器不足，外加，全部采用虚拟机不知道能不能搞定5K台机器，升级任务又有很多，没有采用一次迁移；<br>所以打算要兼容2中方案<br><strong>ca认证</strong><br><strong>负载均衡</strong><br><strong>puppet server</strong>  </p>
<p>改动如下：</p>
<blockquote>
<p>1.ca认证和负载均衡都在一台服务器A，所有认证全部在A上<br>2.负载均衡配置里面upstream的列表针对nginx+passenger这种架构，写多行，这样保证，他的访问量<br>3.由于ca认证和负载均衡都在一台server，所以nginx+passenger的配置也取消了ssl的认证配置</p>
</blockquote>
<p>配置文件范例：<br>nginx+passenger</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">user  nginx nginx;</div><div class="line">worker_processes  12;</div><div class="line">pid        /var/run/nginx.pid;</div><div class="line">events &#123;</div><div class="line">    worker_connections  1024;</div><div class="line">&#125;</div><div class="line">http &#123;</div><div class="line">    log_format letvcdn &apos;$server_addr $remote_addr [$time_local] &quot;$request&quot; &apos;</div><div class="line">                       &apos;$status $body_bytes_sent $request_time &quot;$http_referer&quot; &apos;</div><div class="line">                       &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot; $host $upstream_addr&apos;;</div><div class="line">    passenger_root /usr/lib/ruby/gems/1.8/gems/passenger-4.0.53;</div><div class="line">    passenger_ruby /usr/bin/ruby;</div><div class="line">    passenger_max_pool_size 12;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line">    sendfile        on;</div><div class="line">    keepalive_timeout  65;</div><div class="line">server &#123;</div><div class="line">    listen 8140;</div><div class="line">    #server_name                puppetmaster;</div><div class="line">    passenger_enabled          on;</div><div class="line">    passenger_set_cgi_param    HTTP_X_CLIENT_DN $ssl_client_s_dn;</div><div class="line">    passenger_set_cgi_param    HTTP_X_CLIENT_VERIFY $ssl_client_verify;</div><div class="line">    proxy_buffer_size 4000k;</div><div class="line">    proxy_buffering on;</div><div class="line">    proxy_buffers 32 1280k;</div><div class="line">    proxy_busy_buffers_size 17680k;</div><div class="line">    client_max_body_size 10m;</div><div class="line">    client_body_buffer_size 4096k;</div><div class="line">    access_log /var/log/nginx/puppet_access.log letvcdn;</div><div class="line">    error_log /var/log/nginx/puppet_error.log;</div><div class="line">    root /etc/puppet/rack/public;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>puppetca+puppet负载的A服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">user  daemon daemon;</div><div class="line">worker_processes  32;</div><div class="line"></div><div class="line">error_log              127.0.0.1 error;</div><div class="line">#error_log       /var/log/nginx-puppet.log notice;</div><div class="line">pid             /var/run/nginx.pid;</div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections  65536;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line">    # include /etc/mime.types;</div><div class="line">    log_format letvcdn &apos;$server_addr $remote_addr [$time_local] &quot;$request&quot; &apos;</div><div class="line">                       &apos;$status $body_bytes_sent $request_time &quot;$http_referer&quot; &apos;</div><div class="line">                       &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot; $host $upstream_addr&apos;;</div><div class="line"></div><div class="line">    access_log         /var/log/access.log letvcdn;</div><div class="line">    default_type  application/octet-stream;</div><div class="line">    access_log off;</div><div class="line">    # no sendfile on OSX uncomment</div><div class="line">    #this if your on linux or bsd</div><div class="line">    sendfile        on;</div><div class="line">    tcp_nopush      on;</div><div class="line">    keepalive_timeout  65;</div><div class="line">    tcp_nodelay        on;</div><div class="line">    upstream puppet-production &#123;</div><div class="line">        ip_hash;    </div><div class="line">        server B服务器:8140;</div><div class="line">        server B服务器:8140;</div><div class="line">        server B服务器:8140;</div><div class="line">        server C服务器:18140;        </div><div class="line">        server C服务器:28140;        </div><div class="line">        server C服务器:38140;        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">                listen 8140 ssl;</div><div class="line">                large_client_header_buffers     4      32k;</div><div class="line">                 client_header_buffer_size 64k;</div><div class="line"></div><div class="line">                ssl                     on;</div><div class="line">                ssl_session_timeout     5m;</div><div class="line">                ssl_certificate         /etc/puppet/ssl/certs/puppet.oss.letv.com.pem;</div><div class="line">                ssl_certificate_key     /etc/puppet/ssl/private_keys/puppet.oss.letv.com.pem;</div><div class="line">                ssl_client_certificate  /etc/puppet/ssl/ca/ca_crt.pem;</div><div class="line">                ssl_ciphers             SSLv2:-LOW:-EXPORT:RC4+RSA;</div><div class="line">#               ssl_ciphers             ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP;</div><div class="line">                ssl_verify_client       optional;</div><div class="line">                ssl_crl                 /etc/puppet/ssl/ca/ca_crl.pem;</div><div class="line">                root /etc/puppet;</div><div class="line">###以下的3个关于ca认证的location均指向本地的8141端口</div><div class="line">                location /production/certificate/ &#123;</div><div class="line">                        proxy_pass http://127.0.0.1:8141;</div><div class="line">                        types&#123; &#125;</div><div class="line">                        default_type application/x-raw;</div><div class="line">                &#125;</div><div class="line">                location /production/certificate_request/ &#123;</div><div class="line">                        proxy_pass http://127.0.0.1:8141;</div><div class="line">                        types&#123; &#125;</div><div class="line">                        default_type application/x-raw;</div><div class="line">                &#125;</div><div class="line">                location /production/certificate_revocation_list/ &#123;</div><div class="line">                        proxy_pass http://127.0.0.1:8141;</div><div class="line">                        types&#123; &#125;</div><div class="line">                        default_type application/x-raw;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                location / &#123;</div><div class="line">                        proxy_pass          http://puppet-production;</div><div class="line">                        proxy_redirect      off;</div><div class="line">                        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>8141端口是puppetca和puppet server起的puppet进程占用的端口用于ca证书的签发；</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ipmitool执行卡住]]></title>
      <url>http://www.zhou5zhou6.com/2014/11/05/ipmi/</url>
      <content type="html"><![CDATA[<p>Ipmitool执行缓慢；strace结果显示select堵塞，一直卡在那个位置</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">execve(&quot;/usr/bin/ipmitool&quot;, [&quot;ipmitool&quot;, &quot;lan&quot;, &quot;print&quot;], [/* 27 vars */]) = 0</div><div class="line">brk(0)                                  = 0x27df000</div><div class="line">mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faaed83d000</div><div class="line">access(&quot;/etc/ld.so.preload&quot;, R_OK)      = -1 ENOENT (No such file or directory)</div><div class="line">open(&quot;/etc/ld.so.cache&quot;, O_RDONLY)      = 3</div><div class="line">fstat(3, &#123;st_mode=S_IFREG|0644, st_size=61435, ...&#125;) = 0</div><div class="line">mmap(NULL, 61435, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7faaed82e000</div><div class="line">close(3)                                = 0</div><div class="line">open(&quot;/lib64/libm.so.6&quot;, O_RDONLY)      = 3</div><div class="line">read(3, &quot;\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0p&gt;`\373&lt;\0\0\0&quot;..., 832) = 832</div><div class="line">fstat(3, &#123;st_mode=S_IFREG|0755, st_size=599384, ...&#125;) = 0</div><div class="line">mmap(0x3cfb600000, 2633912, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3cfb600000</div><div class="line">mprotect(0x3cfb683000, 2093056, PROT_NONE) = 0</div><div class="line">mmap(0x3cfb882000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x82000) = 0x3cfb882000</div><div class="line">close(3)                                = 0</div><div class="line">open(&quot;/lib64/libreadline.so.5&quot;, O_RDONLY) = 3</div><div class="line">read(3, &quot;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0 &lt;\241\372&lt;\0\0\0&quot;..., 832) = 832</div><div class="line">fstat(3, &#123;st_mode=S_IFREG|0755, st_size=263560, ...&#125;) = 0</div><div class="line">mmap(0x3cfaa00000, 2361440, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3cfaa00000</div><div class="line">mprotect(0x3cfaa38000, 2097152, PROT_NONE) = 0</div><div class="line">mmap(0x3cfac38000, 32768, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x38000) = 0x3cfac38000</div><div class="line">mmap(0x3cfac40000, 2144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3cfac40000</div><div class="line">close(3)                                = 0</div><div class="line">open(&quot;/lib64/libncurses.so.5&quot;, O_RDONLY) = 3</div><div class="line">read(3, &quot;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0000j \373&lt;\0\0\0&quot;..., 832) = 832</div><div class="line">fstat(3, &#123;st_mode=S_IFREG|0755, st_size=142536, ...&#125;) = 0</div><div class="line">mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faaed82d000</div><div class="line">mmap(0x3cfb200000, 2235624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3cfb200000</div><div class="line">mprotect(0x3cfb222000, 2093056, PROT_NONE) = 0</div><div class="line">mmap(0x3cfb421000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x21000) = 0x3cfb421000</div><div class="line">close(3)                                = 0</div><div class="line">open(&quot;/lib64/libc.so.6&quot;, O_RDONLY)      = 3</div><div class="line">read(3, &quot;\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0000\356a\372&lt;\0\0\0&quot;..., 832) = 832</div><div class="line">fstat(3, &#123;st_mode=S_IFREG|0755, st_size=1926800, ...&#125;) = 0</div><div class="line">mmap(0x3cfa600000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3cfa600000</div><div class="line">mprotect(0x3cfa78b000, 2093056, PROT_NONE) = 0</div><div class="line">mmap(0x3cfa98a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x3cfa98a000</div><div class="line">mmap(0x3cfa98f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3cfa98f000</div><div class="line">close(3)                                = 0</div><div class="line">open(&quot;/lib64/libtinfo.so.5&quot;, O_RDONLY)  = 3</div><div class="line">read(3, &quot;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0@\310\240\374&lt;\0\0\0&quot;..., 832) = 832</div><div class="line">fstat(3, &#123;st_mode=S_IFREG|0755, st_size=138280, ...&#125;) = 0</div><div class="line">mmap(0x3cfca00000, 2232320, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3cfca00000</div><div class="line">mprotect(0x3cfca1d000, 2097152, PROT_NONE) = 0</div><div class="line">mmap(0x3cfcc1d000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1d000) = 0x3cfcc1d000</div><div class="line">close(3)                                = 0</div><div class="line">open(&quot;/lib64/libdl.so.2&quot;, O_RDONLY)     = 3</div><div class="line">read(3, &quot;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0\340\r \372&lt;\0\0\0&quot;..., 832) = 832</div><div class="line">fstat(3, &#123;st_mode=S_IFREG|0755, st_size=22536, ...&#125;) = 0</div><div class="line">mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faaed82c000</div><div class="line">mmap(0x3cfa200000, 2109696, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3cfa200000</div><div class="line">mprotect(0x3cfa202000, 2097152, PROT_NONE) = 0</div><div class="line">mmap(0x3cfa402000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x3cfa402000</div><div class="line">close(3)                                = 0</div><div class="line">mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faaed82b000</div><div class="line">mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faaed82a000</div><div class="line">mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faaed829000</div><div class="line">arch_prctl(ARCH_SET_FS, 0x7faaed82a700) = 0</div><div class="line">mprotect(0x3cfb882000, 4096, PROT_READ) = 0</div><div class="line">mprotect(0x3cfa98a000, 16384, PROT_READ) = 0</div><div class="line">mprotect(0x3cfa402000, 4096, PROT_READ) = 0</div><div class="line">mprotect(0x3cfa01f000, 4096, PROT_READ) = 0</div><div class="line">munmap(0x7faaed82e000, 61435)           = 0</div><div class="line">brk(0)                                  = 0x27df000</div><div class="line">brk(0x2800000)                          = 0x2800000</div><div class="line">open(&quot;/dev/ipmi0&quot;, O_RDWR)              = 3</div><div class="line">ioctl(3, IPMICTL_SET_GETS_EVENTS_CMD, 0x7ffff50107e8) = 0</div><div class="line">ioctl(3, IPMICTL_SET_MY_ADDRESS_CMD, 0x7ffff50107e4) = 0</div><div class="line">ioctl(3, IPMICTL_SEND_COMMAND, 0x7ffff5010730) = 0</div><div class="line">select(4, [3], NULL, NULL, NULL</div></pre></td></tr></table></figure>
<p>卡在的位置是open /dev/ipmi0 这里，<br>怀疑模块问题导致<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ipmi_devintf            7729  0</div><div class="line">ipmi_watchdog          17394  0</div><div class="line">ipmi_poweroff           8532  0</div></pre></td></tr></table></figure></p>
<p>rmod以上模块<br>重启ipmitool的进程<br>发现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Shutting down ipmi:                                        [确定]</div><div class="line">Starting ipmi: FATAL: Module ipmi_msghandler not found.</div><div class="line">^</div></pre></td></tr></table></figure></p>
<p>卡在这里<br>后台查看进程如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root     22260  0.0  0.0 106460  1716 pts/0    S+   14:42   0:00 /bin/sh /etc/init.d/ipmid restart</div><div class="line">root     22268  0.0  0.0   4164   648 pts/0    D+   14:42   0:00 /sbin/modprobe ipmi_poweroff</div></pre></td></tr></table></figure>
<p>查看进程号22260的状态</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Process 22260 attached - interrupt to quit</div><div class="line">wait4(-1, ^C &lt;unfinished ...&gt;</div></pre></td></tr></table></figure>
<p>显示在wait，<br>然后查看/sbin/modprobe ipmi_poweroff<br>启动ipmi_poweroff的时候卡住了<br>怀疑模块加载有问题<br>可是目前杀不死，只能重启服务器，服务器重启后，ipmitool可以正常使用</p>
<p>另外一个问题是ipmi占用cpu单核达到100%，可是使用以下方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">echo 100 &gt; /sys/module/ipmi_si/parameters/kipmid_max_busy_us</div></pre></td></tr></table></figure>
<p>永久性降低<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> To make the changes persistent you can configure the options for the ipmi_si kernel module.</div><div class="line">Create a file in /etc/modprobe.d/, i.e./etc/modprobe.d/ipmi.conf, and add the following content:</div><div class="line"># Prevent kipmi0 from consuming 100% CPU</div><div class="line"></div><div class="line">    echo &quot;options ipmi_si kipmid_max_busy_us=100&quot;&gt;/etc/modprobe.d/ipmi.conf</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nic_overruns]]></title>
      <url>http://www.zhou5zhou6.com/2014/10/31/nic_overruns/</url>
      <content type="html"><![CDATA[<p>##一、丢包问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">eth0      Link encap:Ethernet  HWaddr 40:F2:E9:6A:51:90</div><div class="line">          UP BROADCAST RUNNING SLAVE MULTICAST  MTU:1500  Metric:1</div><div class="line">          RX packets:1630869437 errors:0 dropped:0 overruns:6158 frame:0</div><div class="line">          TX packets:1962708078 errors:0 dropped:0 overruns:0 carrier:0</div><div class="line">          collisions:0 txqueuelen:1000</div><div class="line">          RX bytes:550772215872 (512.9 GiB)  TX bytes:2636446959152 (2.3 TiB)</div><div class="line">          Memory:a85a0000-a85c0000</div><div class="line"></div><div class="line">eth1      Link encap:Ethernet  HWaddr 40:F2:E9:6A:51:90</div><div class="line">          UP BROADCAST RUNNING SLAVE MULTICAST  MTU:1500  Metric:1</div><div class="line">          RX packets:1705143800 errors:66 dropped:0 overruns:2837 frame:66</div><div class="line">          TX packets:1962681963 errors:0 dropped:0 overruns:0 carrier:0</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>网卡报overruns:6158</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">Settings for eth0:</div><div class="line">    Supported ports: [ TP ]</div><div class="line">    Supported link modes:   10baseT/Half 10baseT/Full</div><div class="line">                            100baseT/Half 100baseT/Full</div><div class="line">                            1000baseT/Full</div><div class="line">    Supported pause frame use: Symmetric</div><div class="line">    Supports auto-negotiation: Yes</div><div class="line">    Advertised link modes:  10baseT/Half 10baseT/Full</div><div class="line">                            100baseT/Half 100baseT/Full</div><div class="line">                            1000baseT/Full</div><div class="line">    Advertised pause frame use: Symmetric</div><div class="line">    Advertised auto-negotiation: Yes</div><div class="line">    Speed: 1000Mb/s</div><div class="line">    Duplex: Full</div><div class="line">    Port: Twisted Pair</div><div class="line">    PHYAD: 1</div><div class="line">    Transceiver: internal</div><div class="line">    Auto-negotiation: on</div><div class="line">    MDI-X: Unknown</div><div class="line">    Supports Wake-on: pumbg</div><div class="line">    Wake-on: g</div><div class="line">    Current message level: 0x00000007 (7)</div><div class="line">                   drv probe link</div><div class="line">    Link detected: yes</div></pre></td></tr></table></figure>
<p>检查网卡配置没有问题<br>以下内容从网上摘抄的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">RX errors: 表示总的收包的错误数量，这包括 too-long-frames 错误，Ring Buffer 溢出错误，crc 校验错误，帧同步错误，fifo overruns 以及 missed pkg 等等。</div><div class="line">RX dropped: 表示数据包已经进入了 Ring Buffer，但是由于内存不够等系统原因，导致在拷贝到内存的过程中被丢弃。</div><div class="line">RX overruns: 表示了 fifo 的 overruns，这是由于 Ring Buffer(aka Driver Queue) 传输的 IO 大于 kernel 能够处理的 IO 导致的，而 Ring Buffer 则是指在发起 IRQ 请求之前的那块 buffer。很明显，overruns 的增大意味着数据包没到 Ring Buffer 就被网卡物理层给丢弃了，而 CPU 无法即使的处理中断是造成 Ring Buffer 满的原因之一，上面那台有问题的机器就是因为 interruprs 分布的不均匀(都压在 core0)，没有做 affinity 而造成的丢包。</div><div class="line">RX frame: 表示 misaligned 的 frames。</div></pre></td></tr></table></figure></p>
<p>好的我们把ring buffer调大</p>
<p>查看当前值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Ring parameters for eth0:</div><div class="line">Pre-set maximums:</div><div class="line">RX:     4096</div><div class="line">RX Mini:    0</div><div class="line">RX Jumbo:   0</div><div class="line">TX:     4096</div><div class="line">Current hardware settings:</div><div class="line">RX:     256</div><div class="line">RX Mini:    0</div><div class="line">RX Jumbo:   0</div><div class="line">TX:     256</div></pre></td></tr></table></figure></p>
<p>当前值为256</p>
<p>现在把他调大</p>
<blockquote>
<p>ethtool -G eth0 rx 4096</p>
</blockquote>
<p>经过一天的观察 网卡的overruns不再增加</p>
<p>##二、网卡队列问题<br>查看本机的网卡中断（网卡是inter的i350）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">18: IR-IO-APIC-fasteoi eth1</div><div class="line">19: IR-IO-APIC-fasteoi eth2</div></pre></td></tr></table></figure></p>
<p>在同类型网卡的其他机器看到的结果是</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">109: IR-PCI-MSI-edge eth0-TxRx-0</div><div class="line">110: IR-PCI-MSI-edge eth0-TxRx-1</div><div class="line">111: IR-PCI-MSI-edge eth0-TxRx-2</div><div class="line">112: IR-PCI-MSI-edge eth0-TxRx-3</div><div class="line">113: IR-PCI-MSI-edge eth0-TxRx-4</div><div class="line">114: IR-PCI-MSI-edge eth0-TxRx-5</div><div class="line">115: IR-PCI-MSI-edge eth0-TxRx-6</div><div class="line">116: IR-PCI-MSI-edge eth0-TxRx-7</div></pre></td></tr></table></figure>
<p>而且通过查看，中断几乎都集中在一个cup上</p>
<blockquote>
<p>mpstat -P ALL 5 2</p>
</blockquote>
<p>经过同事的排查是因为grub里面添加了pci=nomsi，在grub引导里面删除这个选项，然后重启电脑</p>
<p>关于IRQ中断请参考（<a href="http://blog.yufeng.info/archives/2422）" target="_blank" rel="external">http://blog.yufeng.info/archives/2422）</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PCI Express支持两类中断:INTx使用传统的IRQ中断,可以与现行的PCI总线的驱动程序和操作系统兼容;MSI则是通过inbound Memory Write触发和发送中断,更适合多CPU系统.可以使用&quot;pci=nomsi&quot;内核引导参数关闭MSI</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mac_error]]></title>
      <url>http://www.zhou5zhou6.com/2014/10/22/mac_error/</url>
      <content type="html"><![CDATA[<p>###一<br>mac os升级到10.10后执行brew报以下信息</p>
<blockquote>
<p>/usr/local/bin/brew: /usr/local/Library/brew.rb: /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby: bad interpreter: No such file or directory</p>
</blockquote>
<p>解决方法：<br>1.修改/usr/local/bin/brew 第一行 把1.8改成2.0<br>2.重新安装brew</p>
<a id="more"></a>
<p>###二<br>通过brew install wget<br>运行wget报一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dyld: Library not loaded: /usr/local/opt/openssl/lib/libssl.1.0.0.dylib</div></pre></td></tr></table></figure></p>
<p>wget无法使用<br>将openssl卸载在安装一次即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">brew remove openssl</div><div class="line">brew install openssl</div></pre></td></tr></table></figure></p>
<p>###三pyenv 安装pyton报以下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">-&gt; https://www.python.org/ftp/python/3.4.2/Python-3.4.2.tgz</div><div class="line">Installing Python-3.4.2...</div><div class="line">ERROR: The Python ssl extension was not compiled. Missing the OpenSSL lib?</div><div class="line"></div><div class="line">Please consult to the Wiki page to fix the problem.</div><div class="line">https://github.com/yyuu/pyenv/wiki/Common-build-problems</div><div class="line"></div><div class="line"></div><div class="line">BUILD FAILED</div></pre></td></tr></table></figure></p>
<p>从github中可以找到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">On Mac OS X 10.9 and 10.10 you may need to set the CFLAGS environment variable when installing a new version in order for configure to find the zlib headers (XCode command line tools must be installed first):</div><div class="line"></div><div class="line">CFLAGS=&quot;-I$(xcrun --show-sdk-path)/usr/include&quot; pyenv install -v 2.7.7</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blktrace分析IO]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/22/blktrace/</url>
      <content type="html"><![CDATA[<p>###blacktrace<br><a href="http://www.cse.unsw.edu.au/~aaronc/iosched/doc/blktrace.html" target="_blank" rel="external">英文DOC</a></p>
<a id="more"></a>
<blockquote>
<p>blktrace is a block layer IO tracing mechanism which provides detailed information about request queue operations up to user space. There are three major components that are provided:<br>Kernel patch<br>    A patch to the Linux kernel which includes the kernel event logging interfaces, and patches to areas within the block layer to emit event traces. If you run a 2.6.17-rc1 or newer kernel, you don’t need to patch blktrace support as it is already included.</p>
<p>blktrace<br>    A utility which transfers event traces from the kernel into either long-term on-disk storage, or provides direct formatted output (via blkparse).</p>
<p>blkparse<br>    A utility which formats events stored in files, or when run in live mode directly outputs data collected by blktrace. </p>
</blockquote>
<p> blktrace是一个针对Linux内核中块设备I/O层的跟踪工具，用来收集磁盘IO信息中当IO进行到块设备层（block层，所以叫blk trace）时的详细信息（如IO请求提交，入队，合并，完成等等一些列的信息），是由Linux内核块设备层的维护者开发的，目前已经集成到内核2.6.17及其之后的内核版本中。通过使用这个工具，使用者可以获取I/O请求队列的各种详细的情况，包括进行读写的进程名称、进程号、执行时间、读写的物理块号、块大小等等，是一个Linux下分析I/O相关内容的很好的工具</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"> Short  Long    Description</div><div class="line">-A hex-mask     -set-mask=hex-mask  Set filter mask to hex-mask  #设置过滤信息成十六进制</div><div class="line">-a mask     -act-mask=mask  Add mask to current filter (see below for masks)    #添加mask到当前的过滤器</div><div class="line">-b size     -buffer-size=size   Specifies buffer size for event extraction (scaled by $2^&#123;10&#125;$)     # 指定每个提取的buffer的大小</div><div class="line">-d dev  -dev=dev    Adds dev as a device to trace   #指定一个设备</div><div class="line">-k  -kill   Kill on-going trace     #杀掉正在运行的trace</div><div class="line">-n num-sub  -num-sub=num-sub    Specifies number of buffers to use  #指定可以使用的缓冲</div><div class="line">-o file     -output=file    Prepend file to output file name(s)  #指定 输出文件的名字</div><div class="line">-r rel-path     -relay=rel-path     Specifies debugfs mount point   #指定debugfs挂载点</div><div class="line">-V  -version    Outputs version</div><div class="line">-w seconds  -stopwatch=seconds  Sets run time to the number of seconds specified       #指定运行时间</div><div class="line">-I devs file    -input-devs=devs file   Adds devices found in devs file to list of devices to trace.     #指定需要trace的列表</div><div class="line">-l Run in network listen mode (blktrace server)      #网络模式，server端</div><div class="line">-h Run in network client mode, connecting to the given host   #网络模式，client端</div><div class="line">-p Network port to use (default 8462)          #网络模式打开的端口</div><div class="line">-s Make the network client NOT use sendfile() to transfer data   #禁止使用sendfile发送数据</div></pre></td></tr></table></figure>
<p>输出面板中大些字母代表的含义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Act     Description</div><div class="line">A   IO was remapped to a different device</div><div class="line">B   IO bounced</div><div class="line">C   IO completion</div><div class="line">D   IO issued to driver</div><div class="line">F   IO front merged with request on queue</div><div class="line">G   Get request</div><div class="line">I   IO inserted onto request queue</div><div class="line">M   IO back merged with request on queue</div><div class="line">P   Plug request</div><div class="line">Q   IO handled by request queue code</div><div class="line">S   Sleep request</div><div class="line">T   Unplug due to timeout</div><div class="line">U   Unplug request</div><div class="line">X   Split</div></pre></td></tr></table></figure></p>
<p>###使用案例<br>使用前请先挂载debugfs</p>
<blockquote>
<p>mount –t debugfs debugfs /sys/kernel/debug</p>
</blockquote>
<p>####1. 将对/dev/sdb的结果输出到herbert<br>blktrace -d /dev/sdb  -o herbert<br>会输出多个文件，每个代表一个cpu核</p>
<p>####2.通过blkparse解析文件<br>blkparse -i herbert.blktrace.0</p>
<p>####3. 将以上的步骤写成一行，实时展现trace过程<br>blktrace -d /dev/sdb -o - | blkparse -i -</p>
<p>####4.实时分析结果还可以使用btrace<br>btrace /dev/sdb</p>
<p>###结果分析</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">8,16   2       13     0.062375121  2126  Q   R 58013195264 + 512 [nginx]</div><div class="line">8,16   2       14     0.062376656  2126  G   R 58013195264 + 512 [nginx]</div><div class="line">8,16   2       15     0.062378804  2126  P   N [nginx]</div><div class="line">8,16   2       16     0.062379476  2126  I   R 58013195264 + 512 [nginx]</div><div class="line">8,16   2       17     0.062380781  2126  U   N [nginx] 1</div><div class="line">8,16   2       18     0.062382136  2126  D   R 58013195264 + 512 [nginx]</div><div class="line">8,16   0        3     0.086844290     0  C   R 58013195264 + 512 [0]</div></pre></td></tr></table></figure>
<p>IO is queued(Q),a request struct is allocated (G), the queue is plugged (P), the IO is scheduled (I), the queue is unplugged (U), the IO is dispatched to the device (D), and the IO is completed (C).</p>
<p>###如何分析大量的数据</p>
<p>btt<br><a href="http://www.cse.unsw.edu.au/~aaronc/iosched/doc/btt.html" target="_blank" rel="external">说明文档</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[抓包工具]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/19/zhuabao/</url>
      <content type="html"><![CDATA[<p>###抓包工具列表</p>
<p>##<strong>1，tcpdump</strong><br><a id="more"></a></p>
<p>##<strong>2.httpry (linux)</strong></p>
<p><a href="https://github.com/jbittel/httpry" target="_blank" rel="external">下载地址</a><br>源码安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/jbittel/httpry.git</div><div class="line">$ cd httpry</div><div class="line">$ make</div><div class="line">$ sudo make install</div></pre></td></tr></table></figure></p>
<p>或者通过yum安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum insall httpry</div></pre></td></tr></table></figure></p>
<p>常用参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line">httpry [ -dFhpqs ] [ -b file ] [ -f format ] [ -i device ] [ -l threshold ]</div><div class="line">       [ -m methods ] [ -n count ] [ -o file ] [ -P file ] [ -r file ]</div><div class="line">       [ -S bytes ] [ -t seconds ] [ -u user ] [ &apos;expression&apos; ]</div><div class="line">       </div><div class="line">-b file</div><div class="line">Write all processed HTTP packets to a binary pcap dump file. Useful for</div><div class="line">further analysis of logged data.</div><div class="line">把结果保存成二进制文件</div><div class="line">-d</div><div class="line">Run the program as a daemon process. All program status output will be sent</div><div class="line">to syslog. A pid file is created for the process in /var/run/httpry.pid by</div><div class="line">default. Requires an output file specified with -o.</div><div class="line"></div><div class="line">运行httpry为后台daemon程序，所有的简称信息会发到syslog，如果想输出一个文件，需要指定-o</div><div class="line"></div><div class="line">-f format</div><div class="line">Provide a comma-delimited string specifying the parsed HTTP data to output.</div><div class="line">See the doc/format-string file for further information regarding available</div><div class="line">options and syntax.</div><div class="line"></div><div class="line">指定输出格式，在 doc/format-string 有说明文档</div><div class="line"></div><div class="line">-F</div><div class="line">Disable all output buffering. This may be helpful when piping httpry output</div><div class="line">into another program.</div><div class="line">不要把输出缓存，有利于把输入转到别的程序</div><div class="line"></div><div class="line">-h</div><div class="line">Display a brief summary of these options.</div><div class="line"></div><div class="line">-i device</div><div class="line">Specify an ethernet interface for the program to listen on. If not specified,</div><div class="line">the program will poll the system for a list of interfaces and select the</div><div class="line">first one found.</div><div class="line">指定探测的网卡端口</div><div class="line"></div><div class="line">-l threshold</div><div class="line">Specify a requests per second rate threshold value when running in rate</div><div class="line">statistics mode (-s). Only hosts with a rps value greater than or equal to</div><div class="line">this number will be displayed. Defaults to 1.</div><div class="line"></div><div class="line"></div><div class="line">-m methods</div><div class="line">Provide a comma-delimited string that specifies the request methods to parse.</div><div class="line">The program defaults to parsing all of the standard RFC2616 method strings if</div><div class="line">this option is not set. See the doc/method-string file for more information.</div><div class="line">HTTP请求方式(GET,POST,PUT,HEAD,CONNECT等)详见doc/method-string</div><div class="line"></div><div class="line">-n count</div><div class="line">Parse this number of HTTP packets and then exit. Defaults to 0, which means</div><div class="line">loop forever.</div><div class="line">打印多少条记录就停止退出</div><div class="line"></div><div class="line">-o file</div><div class="line">Specify an output file for writing parsed packet data.</div><div class="line">输出到某文件</div><div class="line"></div><div class="line">-p</div><div class="line">Do not put the NIC in promiscuous mode on startup. Note that the NIC could</div><div class="line">already be in that mode for another reason.</div><div class="line"></div><div class="line"></div><div class="line">-P file</div><div class="line">Specify a path and filename for creating the PID file in daemon mode.</div><div class="line"></div><div class="line">指定探测的某个pid进程</div><div class="line"></div><div class="line">-q</div><div class="line">Suppress non-critical output (startup banner, statistics, etc.).</div><div class="line"></div><div class="line">-r file</div><div class="line">Provide an input capture file to read from instead of performing</div><div class="line">a live capture. This option does not require root privileges.</div><div class="line"></div><div class="line">-s</div><div class="line">Run httpry in an HTTP request per second display mode. This periodically</div><div class="line">displays the rate per active host and total rate at a specified interval.</div><div class="line"></div><div class="line">显示每秒请求数，</div><div class="line"></div><div class="line">-S</div><div class="line">Specify a number of bytes to skip in the ethernet header. This allows for</div><div class="line">custom header offsets to be accounted for.</div><div class="line"></div><div class="line">-t seconds</div><div class="line">Specify the host statistics display interval in seconds when running in</div><div class="line">rate statistics mode (-s). Defaults to 5 seconds.</div><div class="line"></div><div class="line">-u user</div><div class="line">Specify an alternate user to take ownership of the process and any output</div><div class="line">files. You will need root privileges to do this; it will switch to the new</div><div class="line">user after initialization.</div><div class="line"></div><div class="line"></div><div class="line">&apos;expression&apos;</div><div class="line">Specify a bpf-style capture filter, overriding the default. Here are a few</div><div class="line">basic examples, starting with the default filter:</div><div class="line"></div><div class="line"> &apos;tcp port 80 or 8080&apos;</div><div class="line"> &apos;tcp dst port 80&apos;</div><div class="line"> &apos;tcp dst port 80 and src host 192.168.1.1&apos;   </div><div class="line"> 利用表达式过滤指定的信息</div></pre></td></tr></table></figure></p>
<p>##<strong>3.ip雷达（windows）</strong></p>
<p>##<strong>4.ngrep</strong><br><a href="http://en.wikipedia.org/wiki/Ngrep" target="_blank" rel="external">wiki</a><br><a href="http://sourceforge.net/projects/ngrep/" target="_blank" rel="external">code</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[parameters]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/19/parameters/</url>
      <content type="html"><![CDATA[<p>###系统调优遇到的工具返回的参数含义</p>
<a id="more"></a>
<p>#<strong>一、datat</strong></p>
<p>####<strong>Procs</strong></p>
<pre><code>r:运行的和等待(CPU时间片)运行的进程数，这个值也可以判断是否需要增加CPU(长期大于1) 
b:处于不可中断状态的进程数，常见的情况是由IO引起的
</code></pre><p>####<strong>Memory</strong></p>
<pre><code>swpd: 切换到交换内存上的内存(默认以KB为单位)。如果 swpd 的值不为0，或者还比较大，比如超过100M了，但是 si, so 的值长期为 0，这种情况我们可以不用担心，不会影响系统性能。

free: 空闲的物理内存

buff: 作为buffer cache的内存，对块设备的读写进行缓冲

cache: 作为page cache的内存, 文件系统的cache。如果 cache 的值大的时候，说明cache住的文件数多，如果频繁访问到的文件都能被cache住，那么磁盘的读IO bi 会非常小。
</code></pre><p>####<strong>Swap</strong></p>
<pre><code>si: 交换内存使用，由磁盘调入内存

so: 交换内存使用，由内存调入磁盘
</code></pre><p>内存够用的时候，这2个值都是0，如果这2个值长期大于0时，系统性能会受到影响。磁盘IO和CPU资源都会被消耗。<br>我发现有些朋友看到空闲内存(free)很少或接近于0时，就认为内存不够用了，实际上不能光看这一点的，还要结合si,so，如果free很少，但是si,so也很少(大多时候是0)，那么不用担心，系统性能这时不会受到影响的。</p>
<p>####<strong>磁盘IO</strong></p>
<pre><code>bi: 从块设备读入的数据总量(读磁盘) (KB/s)

bo: 写入到块设备的数据总理(写磁盘) (KB/s)
</code></pre><p>注:随机磁盘读写的时候，这2个 值越大（如超出1M），能看到CPU在IO等待的值也会越大</p>
<p>####<strong>System</strong></p>
<pre><code>in: 每秒产生的中断次数

cs: 每秒产生的上下文切换次数
</code></pre><p>上面这2个值越大，会看到由内核消耗的CPU时间会越多</p>
<p>####<strong>Cpu</strong></p>
<pre><code>usr: 用户进程消耗的CPU时间百分比
</code></pre><p>us 的值比较高时，说明用户进程消耗的CPU时间多，但是如果长期超过50% 的使用，那么我们就该考虑优化程序算法或者进行加速了(比如 PHP/Perl)</p>
<pre><code>sys: 内核进程消耗的CPU时间百分比 
</code></pre><p>sys 的值高时，说明系统内核消耗的CPU资源多，这并不是良性的表现，我们应该检查原因。</p>
<pre><code>wai: IO等待消耗的CPU时间百分比
</code></pre><p>wa 的值高时，说明IO等待比较严重，这可能是由于磁盘大量作随机访问造成，也有可能是磁盘的带宽出现瓶颈(块操作)。</p>
<pre><code>idl: CPU处在空闲状态时间百分比
</code></pre><p>####<strong>vmstat</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----</div><div class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</div><div class="line"> 4  0  15008 551596 315612 1845084    0    0     0    40    2    2 33  4 62  1  0</div><div class="line"></div><div class="line"></div><div class="line">    swpd，已使用的 SWAP 空间大小，KB 为单位；</div><div class="line">    free，可用的物理内存大小，KB 为单位；</div><div class="line">    buff，物理内存用来缓存读写操作的buffer大小，KB 为单位；</div><div class="line">    cache，物理内存用来缓存进程地址空间的 cache 大小，KB 为单位；</div><div class="line">    r，可运行队列的线程数，这些线程都是可运行状态，只不过 CPU 暂时不可用；</div><div class="line">    b，被 blocked 的进程数，正在等待 IO 请求；</div><div class="line">    in，被处理过的中断数</div><div class="line">    cs，系统上正在做上下文切换的数目</div><div class="line">    us，用户占用 CPU 的百分比</div><div class="line">    sy，内核和中断占用 CPU 的百分比</div><div class="line">    wa，所有可运行的线程被 blocked 以后都在等待 IO，这时候 CPU 空闲的百分比</div><div class="line">    id，CPU 完全空闲的百分比</div><div class="line">    si,表示由磁盘调入内存，也就是内存进入内存交换区的数量。</div><div class="line">    so,表示由内存调入磁盘，也就是内存交换区进入内存的数量。</div><div class="line">    bi，磁盘块从文件系统或 SWAP 读取到 RAM（blocks in）的大小，block 为单位；</div><div class="line">    bo，磁盘块从 RAM 写到文件系统或 SWAP（blocks out）的大小，block 为单位；</div></pre></td></tr></table></figure>
<p>####<strong>mpstat</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">11时52分24秒  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest   %idle</div><div class="line">11时52分24秒  all    3.78    0.00    4.99   14.59    0.20    2.77    0.00    0.00   73.67</div><div class="line"></div><div class="line"></div><div class="line">user 在internal时间段里，用户态的CPU时间（%），不包含 nice值为负 进程 (usr/total)*100 </div><div class="line">nice 在internal时间段里，nice值为负进程的CPU时间（%）   (nice/total)*100 </div><div class="line">system 在internal时间段里，核心时间（%）   (system/total)*100</div><div class="line">iowait 在internal时间段里，硬盘IO等待时间（%） (iowait/total)*100</div><div class="line">irq 在internal时间段里，硬中断时间（%）      (irq/total)*100</div><div class="line">soft 在internal时间段里，软中断时间（%）    (softirq/total)*100</div><div class="line">idle 在internal时间段里，CPU除去等待磁盘IO操作外的因为任何原因而空闲的时间闲置时间（%）(idle/total)*100</div><div class="line">intr/s 在internal时间段里，每秒CPU接收的中断的次数intr/total)*100</div><div class="line">CPU总的工作时间=total_cur=user+system+nice+idle+iowait+irq+softirq</div><div class="line">total_pre=pre_user+ pre_system+ pre_nice+ pre_idle+ pre_iowait+ pre_irq+ pre_softirq</div><div class="line">user=user_cur – user_pre</div><div class="line">total=total_cur-total_pre</div><div class="line">其中_cur 表示当前值，_pre表示interval时间前的值。</div></pre></td></tr></table></figure>
<p>####<strong>top</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">top - 14:37:27 up 16 days, 22:03,  1 user,  load average: 0.35, 0.66, 0.76</div><div class="line">Tasks: 334 total,   1 running, 333 sleeping,   0 stopped,   0 zombie</div><div class="line">Cpu(s):  2.7%us,  3.4%sy,  0.0%ni, 85.8%id,  5.4%wa,  0.0%hi,  2.6%si,  0.0%st</div><div class="line">Mem:  12184808k total, 11364784k used,   820024k free,     2776k buffers</div><div class="line">Swap:  6143992k total,   804144k used,  5339848k free,  4728788k cached</div><div class="line"></div><div class="line">  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND</div><div class="line">28292 root      20   0  951m  620  544 S  9.9  0.0 930:26.23 /usr/local/sbin/crtmpserver --pid=/var/run/crtmpserver.pid /usr/local/etc/crtmpserver.cdn.lua</div><div class="line"></div><div class="line">- **第一行**: 显示机器基本的登录情况，后面的load average数据分别是5分钟 10分钟 15分钟的load平均值。 </div><div class="line">- **第二行**: Tasks，显示任务进程的情况 </div><div class="line">- **第三行**: cpu状态 us-用户空间占用cpu的百分比；</div><div class="line">                      sy-内核空间占用cpu的百分比；</div><div class="line">                      ni-改变过优先级的进程占用cpu的百分比；</div><div class="line">                      id-空闲cpu百分比；</div><div class="line">                      wa-io等待占用cpu的百分比；</div><div class="line">                      hi-硬中断（Hardware IRQ）占用cpu的百分比；</div><div class="line">                      si-软中断 （Software Interrupts）占用cpu的百分比；</div><div class="line">                      st-这个虚拟机被hypervisor偷去的CPU时间（译注：如果当前处于一个hypervisor下的vm，实际上hypervisor也是要消耗一部分CPU处理时间的）。</div><div class="line">- **第四行**: 内存使用，total-物理内存总量</div><div class="line">                        used-使用中的内存总量</div><div class="line">                        free-空闲的内存总量</div><div class="line">                        buffers-缓存的内存量</div><div class="line">- **第五行**: swap交换分区，</div><div class="line">                        total-交换区总量</div><div class="line">                        used-使用中的交换区总量</div><div class="line">                        free-空闲的交换区总量</div><div class="line">                        buffers-缓存的交换区总量</div><div class="line">- **第六行**: 各个进程的状态</div><div class="line">                        PID-进程id</div><div class="line">                        USER-进程所有者</div><div class="line">                        PR-进程优先级</div><div class="line">                        NI-nice值。负值表示高优先级，正值表示低优先级</div><div class="line">                        VIRT-进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</div><div class="line">                        RES-进程使用的未被换出的的内存大小，单位Kb 。RES=code+data</div><div class="line">                        SHR-共享内存的大小，单位kb</div><div class="line">                        S-进程状态；D：不可中断的睡眠状态 R：运行 S：睡眠  T：跟踪/停止  Z：僵尸</div><div class="line">                        %CPU-上次更新到现在的cpu时间占用百分比</div><div class="line">                        %MEM-进程使用的内存百分比</div><div class="line">                        TIME+-进程使用的cpu时间统计</div><div class="line">                        COMMAND-进程名称</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下的IO查看工具（四）]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/19/dstat/</url>
      <content type="html"><![CDATA[<p>###dstat<br><a href="https://github.com/dagwieers/dstat" target="_blank" rel="external">github地址</a></p>
<a id="more"></a>
<blockquote>
<p>Dstat is a versatile replacement for vmstat, iostat, mpstat, netstat and<br>ifstat. Dstat overcomes some of their limitations and adds some extra<br>features, more counters and flexibility. Dstat is handy for monitoring<br>systems during performance tuning tests, benchmarks or troubleshooting.</p>
</blockquote>
<p>dstat 是一个全能工具，vmstat, iostat, mpstat, netstat and<br>ifstat这些工具大的大集合</p>
<p>####安装方法</p>
<p>yum install  dstat</p>
<p>####使用方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dstat [-afv] [options..] [delay [count]]</div></pre></td></tr></table></figure>
<p>常用参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">-c, --cpu              enable cpu stats</div><div class="line">   -C 0,3,total           include cpu0, cpu3 and total</div><div class="line">-d, --disk             enable disk stats</div><div class="line">   -D total,hda           include hda and total</div><div class="line">-g, --page             enable page stats</div><div class="line">-i, --int              enable interrupt stats</div><div class="line">   -I 5,eth2              include int5 and interrupt used by eth2</div><div class="line">-l, --load             enable load stats</div><div class="line">-m, --mem              enable memory stats</div><div class="line">-n, --net              enable network stats</div><div class="line">   -N eth1,total          include eth1 and total</div><div class="line">-p, --proc             enable process stats</div><div class="line">-r, --io               enable io stats (I/O requests completed)</div><div class="line">-s, --swap             enable swap stats</div><div class="line">   -S swap1,total         include swap1 and total</div><div class="line">-t, --time             enable time/date output</div><div class="line">-T, --epoch            enable time counter (seconds since epoch)</div><div class="line">-y, --sys              enable system stats</div><div class="line"></div><div class="line">--aio                  enable aio stats</div><div class="line">--fs, --filesystem     enable fs stats</div><div class="line">--ipc                  enable ipc stats</div><div class="line">--lock                 enable lock stats</div><div class="line">--raw                  enable raw stats</div><div class="line">--socket               enable socket stats</div><div class="line">--tcp                  enable tcp stats</div><div class="line">--udp                  enable udp stats</div><div class="line">--unix                 enable unix stats</div><div class="line">--vm                   enable vm stats</div><div class="line"></div><div class="line">--plugin-name          enable plugins by plugin name (see manual)</div><div class="line">--list                 list all available plugins</div><div class="line"></div><div class="line">-a, --all              equals -cdngy (default)</div><div class="line">-f, --full             automatically expand -C, -D, -I, -N and -S lists</div><div class="line">-v, --vmstat           equals -pmgdsc -D total</div><div class="line"></div><div class="line">--bw, --blackonwhite   change colors for white background terminal</div><div class="line">--float                force float values on screen</div><div class="line">--integer              force integer values on screen</div><div class="line">--nocolor              disable colors (implies --noupdate)</div><div class="line">--noheaders            disable repetitive headers</div><div class="line">--noupdate             disable intermediate updates</div><div class="line">--output file          write CSV output to file</div></pre></td></tr></table></figure></p>
<p>用法：<br>统计占用进程最高的用户和进程;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">--top-bio</div><div class="line">       show most expensive block I/O process</div><div class="line"></div><div class="line">--top-cpu</div><div class="line">       show most expensive CPU process</div><div class="line"></div><div class="line">--top-cputime</div><div class="line">       show process using the most CPU time (in ms)</div><div class="line"></div><div class="line">--top-cputime-avg</div><div class="line">       show process with the highest average timeslice (in ms)</div><div class="line"></div><div class="line">--top-io</div><div class="line">       show most expensive I/O process</div><div class="line"></div><div class="line">--top-latency</div><div class="line">       show process with highest total latency (in ms)</div><div class="line"></div><div class="line">--top-latency-avg</div><div class="line">       show process with the highest average latency (in ms)</div><div class="line"></div><div class="line">--top-mem</div><div class="line">       show process using the most memory</div><div class="line"></div><div class="line">--top-oom</div><div class="line">       show process that will be killed by OOM the first</div></pre></td></tr></table></figure>
<p>把结果打印成cvs导出<br>  –output </p>
<p>其他官方例子：</p>
<blockquote>
<p>Using dstat to relate disk-throughput with network-usage (eth0), total CPU-usage and system counters:</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dstat -dnyc -N eth0 -C total -f 5</div></pre></td></tr></table></figure>
<blockquote>
<p> Checking dstat’s behaviour and the system impact of dstat:</p>
</blockquote>
<pre><code>dstat -taf --debug
</code></pre><blockquote>
<p> Using the time plugin together with cpu, net, disk, system, load, proc and top_cpu plugins:</p>
</blockquote>
<pre><code>dstat -tcndylp --top-cpu
this is identical to

dstat --time --cpu --net --disk --sys --load --proc --top-cpu
</code></pre><blockquote>
<p>Using dstat to relate cpu stats with interrupts per device:</p>
</blockquote>
<pre><code>dstat -tcyif
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[starce]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/12/starce/</url>
      <content type="html"><![CDATA[<p>####strace</p>
<blockquote>
<p>strace is a system call tracer, i.e. a debugging tool which prints out<br>a trace of all the system calls made by a another process/program.</p>
</blockquote>
<a id="more"></a>
<p>strace常用来跟踪进程执行时的系统调用和所接收的信号，strace可以跟踪到一个进程产生的系统调用,包括参数，返回值，执行消耗的时间。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">usage: strace [-dDffhiqrtttTvVxx] [-a column] [-e expr] ... [-o file]</div><div class="line">              [-p pid] ... [-s strsize] [-u username] [-E var=val] ...</div><div class="line">              [command [arg ...]]</div><div class="line">   or: strace -c [-D] [-e expr] ... [-O overhead] [-S sortby] [-E var=val] ...</div><div class="line">              [command [arg ...]]</div><div class="line">-c -- count time, calls, and errors for each syscall and report summary</div><div class="line">    统计每一次系统调用所执行的时间，次数以及出错次数</div><div class="line">-f -- follow forks, </div><div class="line">    跟踪fork调用产生的子进程</div><div class="line">-ff -- with output into separate files</div><div class="line">    所有进程的跟踪结果输出到某一个文件中，需要制定-o参数</div><div class="line">-F -- attempt to follow vforks,</div><div class="line">    尝试跟踪vfork调用</div><div class="line">-h -- print help message</div><div class="line">    打印帮助信息</div><div class="line">-i -- print instruction pointer at time of syscall</div><div class="line">    输出系统调用的指针</div><div class="line">-q -- suppress messages about attaching, detaching, etc.</div><div class="line">    禁止输出附加消息等 </div><div class="line">-r -- print relative timestamp, </div><div class="line">    打印相关时间</div><div class="line">-t -- absolute timestamp, </div><div class="line">    每一行打印时间</div><div class="line">-tt -- with usecs</div><div class="line">    每一行打印时间，微秒级</div><div class="line">-T -- print time spent in each syscall,</div><div class="line">    显示每一次调用所消耗的时间</div><div class="line">-V -- print version</div><div class="line">-v -- verbose mode: print unabbreviated argv, stat, termio[s], etc. args</div><div class="line">    输出所有的系统调用.一些调用关于环境变量,状态,输入输出等调用由于使用频繁,默认不输出. </div><div class="line">-x -- print non-ascii strings in hex, </div><div class="line">    以十六进制形式输出非标准字符串</div><div class="line">-xx -- print all strings in hex</div><div class="line">    所以字符串以十六进制形式输出</div><div class="line">-a column -- alignment COLUMN for printing syscall results (default 40)</div><div class="line">    设置返回值的输出位置</div><div class="line">-e expr -- a qualifying expression: option=[!]all or option=[!]val1[,val2]...</div><div class="line">   options: trace, abbrev, verbose, raw, signal, read, or write</div><div class="line">   只跟踪指定的系统 调用.例如:-e trace=open,close,rean,write表示只跟踪这四个系统调用.默认的为set=all.</div><div class="line">-o file -- send trace output to FILE instead of stderr</div><div class="line">    将strace的输出写入文件filename</div><div class="line">-p pid -- trace process with process id PID, may be repeated</div><div class="line">    制定跟踪进程pid</div><div class="line">-D -- run tracer process as a detached grandchild, not as parent</div><div class="line">    </div><div class="line">-s strsize -- limit length of print strings to STRSIZE chars (default 32)</div><div class="line">    指定输出的字符串的最大长度.默认为32.文件名一直全部输出.</div><div class="line">-S sortby -- sort syscall counts by: time, calls, name, nothing (default time)</div><div class="line">    制定按照什么排序，默认是按照时间排序</div><div class="line">-u username -- run command as username handling setuid and/or setgid</div><div class="line">    以username 的UID和GID执行被跟踪的命令</div></pre></td></tr></table></figure>
<p>关于-e<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">-e expr </div><div class="line">指定一个表达式,用来控制如何跟踪.格式如下: </div><div class="line">[qualifier=][!]value1[,value2]... </div><div class="line">qualifier只能是 trace,abbrev,verbose,raw,signal,read,write其中之一.value是用来限定的符号或数字.默认的 qualifier是 trace.感叹号是否定符号.例如: </div><div class="line">-eopen等价于 -e trace=open,表示只跟踪open调用.而-etrace!=open表示跟踪除了open以外的其他调用.有两个特殊的符号 all 和 none. </div><div class="line">注意有些shell使用!来执行历史记录里的命令,所以要使用\\. </div><div class="line">-e trace=set </div><div class="line">只跟踪指定的系统 调用.例如:-e trace=open,close,rean,write表示只跟踪这四个系统调用.默认的为set=all. </div><div class="line">-e trace=file </div><div class="line">只跟踪有关文件操作的系统调用. </div><div class="line">-e trace=process </div><div class="line">只跟踪有关进程控制的系统调用. </div><div class="line">-e trace=network </div><div class="line">跟踪与网络有关的所有系统调用. </div><div class="line">-e strace=signal </div><div class="line">跟踪所有与系统信号有关的 系统调用 </div><div class="line">-e trace=ipc </div><div class="line">跟踪所有与进程通讯有关的系统调用 </div><div class="line">-e abbrev=set </div><div class="line">设定 strace输出的系统调用的结果集.-v 等与 abbrev=none.默认为abbrev=all. </div><div class="line">-e raw=set </div><div class="line">将指 定的系统调用的参数以十六进制显示. </div><div class="line">-e signal=set </div><div class="line">指定跟踪的系统信号.默认为all.如 signal=!SIGIO(或者signal=!io),表示不跟踪SIGIO信号. </div><div class="line">-e read=set </div><div class="line">输出从指定文件中读出 的数据.例如: </div><div class="line">-e read=3,5 </div><div class="line">-e write=set</div></pre></td></tr></table></figure></p>
<p>例子：</p>
<blockquote>
<p>strace -o output.txt -T -tt -e trace=all -p 28979</p>
</blockquote>
<p>跟中进程id为28979进程所有的系统调用，并统计系统调用花费时间，时间按照微秒级别记录，最后把结果保存在output.txt文件中</p>
<p>##1.程序在读那个配置文件</p>
<blockquote>
<p>strace -e open php 2&gt;&amp;1 | grep php.ini<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">open(&quot;/usr/bin/php.ini&quot;, O_RDONLY)      = -1 ENOENT (No such file or directory)</div><div class="line">open(&quot;/etc/php.ini&quot;, O_RDONLY)          = 3</div></pre></td></tr></table></figure></p>
</blockquote>
<p>##2.为什么程序没有打开制定文件</p>
<blockquote>
<p>strace -e open,access 2&gt;&amp;1 | grep your-filename</p>
</blockquote>
<p>##3.某个进程当前在做什么？</p>
<blockquote>
<p>strace -p 179274</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Process 179274 attached - interrupt to quit</div><div class="line">rt_sigsuspend([])                       = ? ERESTARTNOHAND (To be restarted)</div><div class="line">--- SIGALRM (Alarm clock) @ 0 (0) ---</div><div class="line">rt_sigreturn(0x6)                       = -1 EINTR (Interrupted system call)</div><div class="line">setitimer(ITIMER_REAL, &#123;it_interval=&#123;0, 0&#125;, it_value=&#123;5, 0&#125;&#125;, NULL) = 0</div><div class="line">open(&quot;/proc/179285/stat&quot;, O_RDONLY)     = 367</div><div class="line">fstat(367, &#123;st_mode=S_IFREG|0444, st_size=0, ...&#125;) = 0</div><div class="line">mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fb847f4f000</div><div class="line">read(367, &quot;179285 (nginx) S 179274 179274 1&quot;..., 1024) = 253</div><div class="line">read(367, &quot;&quot;, 1024)                     = 0</div><div class="line">close(367)                              = 0</div></pre></td></tr></table></figure>
<p>##4.进程花费的时间</p>
<blockquote>
<p>strace -c -p 11084<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">Process 179274 attached - interrupt to quit</div><div class="line">^CProcess 179274 detached</div><div class="line">% time     seconds  usecs/call     calls    errors syscall</div><div class="line">------ ----------- ----------- --------- --------- ----------------</div><div class="line"> 46.90    0.000068           0       182           read</div><div class="line"> 42.76    0.000062           1        91           close</div><div class="line"> 10.34    0.000015           0        91           mmap</div><div class="line">  0.00    0.000000           0        91           open</div><div class="line">  0.00    0.000000           0        91           fstat</div><div class="line">  0.00    0.000000           0        91           munmap</div><div class="line">  0.00    0.000000           0         1         1 rt_sigreturn</div><div class="line">  0.00    0.000000           0         1           setitimer</div><div class="line">  0.00    0.000000           0         1         1 rt_sigsuspend</div><div class="line">------ ----------- ----------- --------- --------- ----------------</div><div class="line">100.00    0.000145                   640         2 total</div><div class="line"></div><div class="line"></div><div class="line">```  </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">##5.为什么我无法连接到server</div><div class="line"></div><div class="line"></div><div class="line">&gt;strace -e poll,select,connect,recvfrom,sendto nc www.zhou5zhou6.com 80</div></pre></td></tr></table></figure></p>
</blockquote>
<p> strace -e poll,select,connect,recvfrom,sendto nc www.zhou5zhou6.com 80<br>sendto(3, “\24\0\0\0\26\0\1\3\206\274\22T\0\0\0\0\0\0\0\0”, 20, 0, {sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 20<br>connect(3, {sa_family=AF_FILE, path=”/var/run/nscd/socket”}, 110) = -1 ENOENT (No such file or directory)<br>connect(3, {sa_family=AF_FILE, path=”/var/run/nscd/socket”}, 110) = -1 ENOENT (No such file or directory)<br>connect(3, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(“127.0.0.1”)}, 16) = 0<br>poll([{fd=3, events=POLLOUT}], 1, 0)    = 1 ([{fd=3, revents=POLLOUT}])<br>sendto(3, “u\257\1\0\0\1\0\0\0\0\0\0\3www\nzhou5zhou6\3com\0”…, 36, MSG_NOSIGNAL, NULL, 0) = 36<br>poll([{fd=3, events=POLLIN|POLLOUT}], 1, 5000) = 1 ([{fd=3, revents=POLLOUT}])<br>sendto(3, “(H\1\0\0\1\0\0\0\0\0\0\3www\nzhou5zhou6\3com\0”…, 36, MSG_NOSIGNAL, NULL, 0) = 36<br>poll([{fd=3, events=POLLIN}], 1, 4999)  = 1 ([{fd=3, revents=POLLIN}])<br>recvfrom(3, “(H\201\200\0\1\0\1\0\1\0\0\3www\nzhou5zhou6\3com\0”…, 2048, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(“127.0.0.1”)}, [16]) = 124<br>poll([{fd=3, events=POLLIN}], 1, 4959)  = 1 ([{fd=3, revents=POLLIN}])<br>recvfrom(3, “u\257\201\200\0\1\0\2\0\2\0\10\3www\nzhou5zhou6\3com\0”…, 1924, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(“127.0.0.1”)}, [16]) = 248<br>connect(3, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(“103.245.222.133”)}, 16) = -1 EINPROGRESS (Operation now in progress)<br>select(4, NULL, [3], NULL, NULL)        = 1 (out [3])</p>
<p>```  </p>
<p>从返回可以看到，nc完成web请求的过程</p>
<p><a href="http://www.hokstad.com/5-simple-ways-to-troubleshoot-using-strace" target="_blank" rel="external">来自</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ansible]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/11/ansible/</url>
      <content type="html"><![CDATA[<p>###ansible执行命令的时候很慢</p>
<p>今天同事遇到一个问题，ansible执行命令，速度很慢；<br><a id="more"></a><br>后来从同事反馈得到的结果是</p>
<blockquote>
<p>record_host_keys=False<br>将这个选择打开</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[paramiko_connection]</div><div class="line"></div><div class="line"># uncomment this line to cause the paramiko connection plugin to not record new host</div><div class="line"># keys encountered.  Increases performance on new host additions.  Setting works independently of the</div><div class="line"># host key checking setting above.</div><div class="line">#record_host_keys=False</div></pre></td></tr></table></figure>
<p>在网上可以搜到一下ansible的changelog</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Added a configuration file option [paramiko_connection] record_host_keys which allows the code that paramiko uses to update known_hosts to be disabled. This is done because paramiko can be very slow at doing this if you have a large number of hosts and some folks may not want this behavior. This can be toggled independently of host key checking and does not affect the ssh transport plugin. Use of the ssh transport plugin is preferred if you have ControlPersist capability, and Ansible by default in 1.2.1 and later will autodetect.</div></pre></td></tr></table></figure>
<p>另见官方文档</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Paramiko Specific Settings</div><div class="line">Paramiko is the default SSH connection implementation on Enterprise Linux 6 or earlier, and is not used by default on other platforms. Settings live under the [paramiko] header.</div><div class="line">record_host_keys The default setting of yes will record newly discovered and approved (if host key checking is enabled) hosts in the user’s hostfile. This setting may be inefficient for large numbers of hosts, and in those situa- tions, using the ssh transport is definitely recommended instead. Setting it to False will improve performance and is recommended when host key checking is disabled:</div><div class="line">record_host_keys=True</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下的IO查看工具（三）]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/05/linuxio3/</url>
      <content type="html"><![CDATA[<p>##iopp</p>
<p>###下载<br>源码：<a href="https://github.com/markwkm/iopp" target="_blank" rel="external">https://github.com/markwkm/iopp</a></p>
<blockquote>
<p>git clone <a href="https://github.com/markwkm/iopp.git" target="_blank" rel="external">https://github.com/markwkm/iopp.git</a></p>
</blockquote>
<p>安装</p>
<blockquote>
<p>yum install cmake</p>
</blockquote>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">To build &apos;iopp&apos;:</div><div class="line"></div><div class="line">    cmake CMakeLists.txt</div><div class="line">    make</div><div class="line"></div><div class="line">-----</div><div class="line"></div><div class="line">To install &apos;iopp&apos;:</div><div class="line"></div><div class="line">    make install DESTDIR=/usr</div><div class="line"></div><div class="line">&apos;iopp&apos; is installed into &apos;/usr/bin&apos;.</div><div class="line"></div><div class="line">-----</div><div class="line"></div><div class="line">To uninstall &apos;iopp&apos;, run the following command from the source directory:</div><div class="line"></div><div class="line">    xargs rm &lt; install_manifest.txt</div><div class="line"></div><div class="line">The file &apos;install_manifest.txt&apos; will be created after running &apos;make install&apos;.</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">pid rchar wchar    syscr    syscw reads writes cwrites command</div><div class="line">  1        0        0        0        0        0        0        0 /sbin/init</div><div class="line">  2        0        0        0        0        0        0        0 kthreadd</div><div class="line">  3        0        0        0        0        0        0        0 migration/0</div><div class="line">  4        0        0        0        0        0        0        0 ksoftirqd/0</div><div class="line">  5        0        0        0        0        0        0        0 migration/0</div><div class="line">  6        0        0        0        0        0        0        0 watchdog/0</div><div class="line">  7        0        0        0        0        0        0        0 migration/1</div><div class="line">  8        0        0        0        0        0        0        0 migration/1</div><div class="line">  9        0        0        0        0        0        0        0 ksoftirqd/1</div><div class="line"> 10        0        0        0        0        0        0        0 watchdog/1</div><div class="line"> 11        0        0        0        0        0        0        0 migration/2</div><div class="line"> 12        0        0        0        0        0        0        0 migration/2</div><div class="line"> </div><div class="line"> </div><div class="line"></div><div class="line">  pid 进程ID</div><div class="line">  rchar 将要从磁盘读取的字节数</div><div class="line">  wchar 已经写入或应该要写入磁盘的字节数</div><div class="line">  syscr 读I/O数</div><div class="line">  syscw 写I/O数</div><div class="line">  rbytes 真正从磁盘读取的字节数</div><div class="line">  wbytes 真正写入到磁盘的字节数</div><div class="line">  cwbytes 因为清空页面缓存而导致没有发生操作的字节数</div><div class="line">  command 执行的命令</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下的IO查看工具（二）]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/05/linuxio2/</url>
      <content type="html"><![CDATA[<p>#iodump</p>
<p>利用block_dump使块I / O调试时设置为一个非零的值。如果你想找出哪些过程引起的磁盘旋转（见/proc/sys/vm/laptop_mode），你可以通过设置标志收集信息。设置该标志后，Linux将会以文件的形式报告所有磁盘活动时的读写操作以及所有脏块。这使得它可以解释为什么一个磁盘需要旋转起来，甚至可以增加电池寿命。把block_dump输出写至内核输出，可以使用“dmesg”相关信息。当你使用block_dump和内核日志记录级别，还包括内核调试信息，你可能要关闭klogd，否则block_dump输出将被记录，导致不正常的磁盘活动有。<br>iodump是一个perl脚本，就是一个分析dmesg中block_dump输出的脚本</p>
<a id="more"></a>
<p>###下载地址<br><a href="https://code.google.com/p/maatkit/source/browse/trunk/util/iodump?r=5389" target="_blank" rel="external">官网下载</a></p>
<p>###使用方法</p>
<p>Here’s how you use it. First, get it:</p>
<blockquote>
<p>wget <a href="http://aspersa.googlecode.com/svn/trunk/iodump" target="_blank" rel="external">http://aspersa.googlecode.com/svn/trunk/iodump</a></p>
</blockquote>
<p>Then turn on kernel messages about I/O:</p>
<blockquote>
<p>echo 1 &gt; /proc/sys/vm/block_dump</p>
</blockquote>
<p>This makes the kernel start writing messages about every I/O operation that takes place. Now all you have to do is get those messages and feed them into my script:</p>
<blockquote>
<p>while true; do sleep 1; dmesg -c; done | perl iodump</p>
</blockquote>
<p>如果不用此工具可以使用以下shell命令统计</p>
<blockquote>
<p>dmesg | egrep “READ|WRITE|dirtied” | egrep -o ‘([a-zA-Z]*)’ | sort | uniq -c | sort -rn | head</p>
</blockquote>
<p>例如：</p>
<blockquote>
<p>TASK                   PID      TOTAL       READ      WRITE      DIRTY DEVICES<br>flush-253:0           2344       2674          0       2674          0 dm-0<br>nginx                51122        468        468          0          0 sdb<br>flush-253:1           2345        448          0        448          0 dm-1<br>nginx                51884        401        401          0          0 sdb<br>nginx                51123        339        339          0          0 sdb<br>nginx                51125        286        286          0          0 sdb, dm-1<br>nginx                51560        272        272          0          0 sdb<br>nginx                51549        264        264          0          0 sdb<br>nginx                51802        248        248          0          0 sdb<br>nginx                51538        243        243          0          0 sdb<br>nginx                51846        239        239          0          0 sdb, dm-1</p>
</blockquote>
<p>参考资料：<br><a href="http://www.xaprb.com/blog/2009/08/23/how-to-find-per-process-io-statistics-on-linux/" target="_blank" rel="external">http://www.xaprb.com/blog/2009/08/23/how-to-find-per-process-io-statistics-on-linux/</a><br>另外补充 flush-x:y进程资料<br><a href="http://www.lenky.info/archives/2012/02/1138" target="_blank" rel="external">http://www.lenky.info/archives/2012/02/1138</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下的IO查看工具（一）]]></title>
      <url>http://www.zhou5zhou6.com/2014/09/05/linuxio/</url>
      <content type="html"><![CDATA[<p>#iotop</p>
<blockquote>
<pre><code>iotop  watches  I/O  usage  information  output  by the Linux kernel (requires 2.6.20 or later) and displays a table of current I/O usage by processes or
 threads on the system. At least the CONFIG_TASK_DELAY_ACCT and CONFIG_TASK_IO_ACCOUNTING options need to be enabled in your Linux kernel build configura-
 tion, these options depend on CONFIG_TASKSTATS.
</code></pre></blockquote>
<a id="more"></a>
<p>###安装方法<br><a href="http://guichaz.free.fr/iotop/" target="_blank" rel="external">下载地址</a><br>或者使用yum安装</p>
<blockquote>
<p>centos/rhel:yum install iotop<br>ubuntu:apt-get install iotop</p>
</blockquote>
<p>###常用命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">       -o, --only</div><div class="line">              Only show processes or threads actually doing I/O, instead of showing all processes or threads. This can be dynamically toggled by pressing o.</div><div class="line">实时显示当前有io操作的进程</div><div class="line"></div><div class="line">       -b, --batch</div><div class="line">              Turn on non-interactive mode.  Useful for logging I/O usage over time.</div><div class="line">运行非交互模式,主要用于记录到文件</div><div class="line"> </div><div class="line">       -n NUM, --iter=NUM</div><div class="line">              Set the number of iterations before quitting (never quit by default).  This is most useful in non-interactive mode.</div><div class="line">非交互模式下，设置显示的次数</div><div class="line"></div><div class="line">       -d SEC, --delay=SEC</div><div class="line">              Set the delay between iterations in seconds (1 second by default).  Accepts non-integer values such as 1.1 seconds.</div><div class="line">设置显示的间隔时间</div><div class="line"></div><div class="line">       -p PID, --pid=PID</div><div class="line">              A list of processes/threads to monitor (all by default).</div><div class="line">显示指定pid的进程的IO情况</div><div class="line"></div><div class="line">       -u USER, --user=USER</div><div class="line">              A list of users to monitor (all by default)</div><div class="line">显示指定用户的io使用情况</div><div class="line">       -P, --processes</div><div class="line">              Only show processes. Normally iotop shows all threads.</div><div class="line">只显示进程</div><div class="line">       -a, --accumulated</div><div class="line">              Show accumulated I/O instead of bandwidth. In this mode, iotop shows the amount of I/O processes have done since iotop started.</div><div class="line">显示从iotop启动后每个线程完成了的IO总数</div><div class="line">       -k, --kilobytes</div><div class="line">              Use kilobytes instead of a human friendly unit. This mode is useful when scripting the batch mode of iotop. Instead of choosing the most appropri-</div><div class="line">              ate unit iotop will display all sizes in kilobytes.</div><div class="line">以K字节显示</div><div class="line">       -t, --time</div><div class="line">              Add a timestamp on each line (implies --batch). Each line will be prefixed by the current time.</div><div class="line">在每一行前加上时间</div><div class="line">       -q, --quiet</div><div class="line">              suppress some lines of header (implies --batch). This option can be specified up to three times to remove header lines.</div><div class="line">              </div><div class="line">              -q     column names are only printed on the first iteration,</div><div class="line">              -qq    column names are never printed,</div><div class="line">              -qqq   the I/O summary is never printed.</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[awk语句汇总]]></title>
      <url>http://www.zhou5zhou6.com/2014/08/27/awk/</url>
      <content type="html"><![CDATA[<p>##awk语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">NAME</div><div class="line">       awk - pattern-directed scanning and processing language</div><div class="line"></div><div class="line">SYNOPSIS</div><div class="line">       awk [ -F fs ] [ -v var=value ] [ &apos;prog&apos; | -f progfile ] [ file ...  ]</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">awk  -F&apos;:&apos; &apos;&#123;if($1~/root/)print $0&#125;&apos; /etc/passwd    打印包含root的行</div><div class="line">awk -F&apos;:&apos; &apos;/root/&#123;print&#125;&apos; /etc/passwd         打印匹配root的行</div><div class="line">awk -F&apos;:&apos; &apos;$1 !~/root/&#123;print&#125;&apos; /etc/passwd    打印不匹配root的行</div><div class="line">awk -F&apos;:&apos; &apos;$3&lt;$4&#123;print&#125;&apos; /etc/passwd          打印第三列小于第四列的行</div><div class="line">awk -F&apos;:&apos; &apos;$3+$4==20&#123;print&#125;&apos; /etc/passwd      打印第三列和第四列等于20的行</div><div class="line">awk -F&apos;:&apos; &apos;&#123;print $3,$4,&quot;Total is:&quot;$3+$4&quot;&quot;&#125;&apos; /etc/passwd     打印第三列和第四列以及他们的和</div><div class="line">awk  &apos;/[Rr]oot/&apos; /etc/passwd                  打印匹配root的行</div><div class="line">awk  &apos;/root|nginx/&apos; /etc/passwd              打印匹配 root和nginx的行</div><div class="line">awk &apos;/^[0-9]/&apos; /etc/passwd                  打印匹配0-9开头的行</div><div class="line">awk &apos;NR&gt;0 &amp;&amp; NR&lt;10&#123;print NR,$0&#125;&apos; /etc/passwd    打印第0行至第10行</div><div class="line">awk &apos;NF&gt;5&#123;print NF,$0&#125;&apos; /etc/passwd       打印大于5列的行</div><div class="line">awk &apos;&#123;if(NF&gt;5 &amp;&amp; NR==8)print $0&#125;&apos; /etc/passwd   打印大于5列行数等于8的数据</div><div class="line">awk &apos;gsub(/root/,&quot;admin&quot;)&#123;print $0&#125;&apos; /etc/passw   root替换成admin</div><div class="line">awk -F: &apos;length($1)==4&#123;print $0,length($1)&#125;&apos; /etc/passwd   打印第一列的长度是4的行</div><div class="line">awk &apos;$3==day &#123;print $0&#125;&apos; day=`date +%d` /tmp/log   将命令结果传给awk</div><div class="line">awk &apos;&#123;for(i=1;i&lt;=NF;i++)print $i&#125;&apos; /etc/passwd  打印每一列</div></pre></td></tr></table></figure>
<p>2.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cat test.txt</div><div class="line">5 2 1 3 4</div><div class="line">8 7 6 5 4</div><div class="line">9 7 8 6 5</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">awk &apos;&#123;for(i=1;i&lt;=NF;i++)a[i]=$i;asort(a);for(i=1;i&lt;=length(a);i++)printf a[i]&quot; &quot;;print &quot;&quot;;delete a&#125;&apos; test.txt</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ss]]></title>
      <url>http://www.zhou5zhou6.com/2014/08/26/ss/</url>
      <content type="html"><![CDATA[<p>##SS用法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"># ss -h</div><div class="line">Usage: ss [ OPTIONS ]</div><div class="line">       ss [ OPTIONS ] [ FILTER ]</div><div class="line">   -h, --help           this message</div><div class="line">   -V, --version        output version information</div><div class="line">   -n, --numeric        don&apos;t resolve service names</div><div class="line">   -r, --resolve       resolve host names</div><div class="line">   -a, --all            display all sockets</div><div class="line">   -l, --listening      display listening sockets</div><div class="line">   -o, --options       show timer information</div><div class="line">   -e, --extended      show detailed socket information</div><div class="line">   -m, --memory        show socket memory usage</div><div class="line">   -p, --processes      show process using socket</div><div class="line">   -i, --info           show internal TCP information</div><div class="line">   -s, --summary        show socket usage summary</div><div class="line"> </div><div class="line">   -4, --ipv4          display only IP version 4 sockets</div><div class="line">   -6, --ipv6          display only IP version 6 sockets</div><div class="line">   -0, --packet display PACKET sockets</div><div class="line">   -t, --tcp            display only TCP sockets</div><div class="line">   -u, --udp            display only UDP sockets</div><div class="line">   -d, --dccp           display only DCCP sockets</div><div class="line">   -w, --raw            display only RAW sockets</div><div class="line">   -x, --unix           display only Unix domain sockets</div><div class="line">   -f, --family=FAMILY display sockets of type FAMILY</div><div class="line"> </div><div class="line">   -A, --query=QUERY, --socket=QUERY</div><div class="line">       QUERY := &#123;all|inet|tcp|udp|raw|unix|packet|netlink&#125;[,QUERY]</div><div class="line"> </div><div class="line">   -D, --diag=FILE      Dump raw information about TCP sockets to FILE</div><div class="line">   -F, --filter=FILE   read filter information from FILE</div><div class="line">       FILTER := [ state TCP-STATE ] [ EXPRESSION ]</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>###常用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ss -l 显示本地打开的所有端口号</div><div class="line">ss -pl 显示每个进程具体打开的socket</div><div class="line">ss -t -a 显示所有tcp socket</div><div class="line">ss -u -a 显示所有udp socket</div><div class="line">ss -o state established &apos;( dport = :smtp or sport = :smtp )&apos; 显示所有已建立的SMTP连接</div><div class="line">ss -o state established &apos;( dport = :http or sport = :http )&apos; 显示所有已建立的HTTP连接</div><div class="line">ss -x src /tmp/.X11-unix/* 找出所有连接X服务器的进程</div><div class="line">ss -s 列出当前socket详细信息:</div></pre></td></tr></table></figure></p>
<p>###ss常用选项<br>state<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">established</div><div class="line">syn-sent</div><div class="line">syn-recv</div><div class="line">fin-wait-1</div><div class="line">fin-wait-2</div><div class="line">time-wait</div><div class="line">closed</div><div class="line">close-wait</div><div class="line">last-ack</div><div class="line">listen</div><div class="line">closing</div><div class="line">all : All of the above states</div><div class="line">connected : All the states except for listen and closed</div><div class="line">synchronized : All the connected states except for syn-sent</div><div class="line">bucket : Show states, which are maintained as minisockets, i.e. time-wait and syn-recv.</div><div class="line">big : Opposite to bucket state.</div></pre></td></tr></table></figure></p>
<p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ss -o state fin-wait-1</div></pre></td></tr></table></figure></p>
<p>ip地址筛选</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ss scc ADDRESS_PATTERN </div><div class="line">src : 表示来源</div><div class="line">ADDRESS_PATTERN : 表示地址规则</div><div class="line"></div><div class="line">如下：</div><div class="line">ss src 120.33.31.1 # 列出来之20.33.31.1的连接</div><div class="line"> </div><div class="line">＃　列出来至192.168.1.100,80端口的连接</div><div class="line">ss src 192.168.1.100:http</div><div class="line">ss src 192.168.1.100:80</div></pre></td></tr></table></figure>
<p>端口筛选</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ss dport OP PORT</div><div class="line">OP : 运算符</div><div class="line">PORT ： 端口</div><div class="line">dport : 过滤的目标端口</div><div class="line">sport ：过滤的源端口</div><div class="line"></div><div class="line">OP：</div><div class="line"></div><div class="line">&lt;= or le : 小于等于 &gt;= or ge : 大于等于</div><div class="line">== or eq : 等于</div><div class="line">!= or ne : 不等于端口</div><div class="line">&lt; or lt : 小于这个端口 &gt; or gt : 大于端口</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ss sport = :http 也可以是 ss sport = :80</div><div class="line">ss dport = :http</div><div class="line">ss dport \&gt; :1024</div><div class="line">ss sport \&gt; :1024</div><div class="line">ss sport \&lt; :32000</div><div class="line">ss sport eq :22</div><div class="line">ss dport != :22</div><div class="line">ss state connected sport = :http</div><div class="line">ss \( sport = :http or sport = :https \)</div><div class="line">ss -o state fin-wait-1 \( sport = :http or sport = :https \) dst 192.168.1/24</div></pre></td></tr></table></figure>
<p><a href="http://www.cyberciti.biz/tips/linux-investigate-sockets-network-connections.html" target="_blank" rel="external">原文</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ansible_inventory]]></title>
      <url>http://www.zhou5zhou6.com/2014/07/29/ansible_inventory/</url>
      <content type="html"><![CDATA[<h3 id="ansible-Inventory"><a href="#ansible-Inventory" class="headerlink" title="ansible Inventory"></a>ansible Inventory</h3><p>ansible 的主机定义列表<br>可以把主机进行分组管理，方便分组执行playbook<br> 默认主机列表位置：/etc/ansible/hosts，也可以通过-i参数直接指定hosts文件<br><a id="more"></a></p>
<p> ####例子</p>
<p> #####1.定义主机<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">192.168.1.100        #指定ip</div><div class="line">xxx.xxx.com          #指定域名</div><div class="line">cdn[1:10].com        #cdn1.com 至 cdn10.com共计10台机器   </div><div class="line">cdn[a:f].com         #通过指定字母范围</div><div class="line">192.168.1.100 ansible_ssh_port=22 ansible_connections=local ansible_ssh_user=root ansible_ssh_private_key_file=/root/.ssh/gitupdate    #可以指定某台机器的特殊配置，例如登陆用户，端口，私钥等等</div></pre></td></tr></table></figure></p>
<p>#####2.定义变量<br>As alluded to above, it is easy to assign variables to hosts that will be used later in playbooks:<br>当然也可以在这里指定某些变量供以后playbook调用</p>
<p>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[atlanta]</div><div class="line">host1 http_port=80 maxRequestsPerChild=808</div><div class="line">host2 http_port=303 maxRequestsPerChild=909</div></pre></td></tr></table></figure></p>
<p>######3.主机组的应用</p>
<p>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[xiaomi]</div><div class="line">xxx.xxx.xxx.xxx</div><div class="line">xxx.xxx.xxx.xxx</div><div class="line">[letv]</div><div class="line">xxx.xxx.xxx.xxx</div><div class="line">xxx.xxx.xxx.xxx</div><div class="line">[tv:children]</div><div class="line">xiaomi</div><div class="line">letv</div></pre></td></tr></table></figure></p>
<p>同样组内也可以指定变量<br>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[xiaomi]</div><div class="line">xxx.xxx.xxx.xxx</div><div class="line">xxx.xxx.xxx.xxx</div><div class="line">[letv]</div><div class="line">xxx.xxx.xxx.xxx</div><div class="line">xxx.xxx.xxx.xxx</div><div class="line">[tv:children]</div><div class="line">xiaomi</div><div class="line">letv</div><div class="line">[tv:vars]</div><div class="line">some_server=foo.southeast.example.com</div><div class="line">halon_system_timeout=30</div><div class="line">self_destruct_countdown=60</div><div class="line">escape_pods=2</div></pre></td></tr></table></figure></p>
<p>主机列表分割<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">The preferred practice in Ansible is actually not to store variables in the main inventory file.</div><div class="line">官网文档不提倡把变量放到inventory列表中</div><div class="line">这些变量可以存储在单一文件中</div><div class="line">例如</div><div class="line">如果主机名字命名为football，主机组命名为raleigh和webservers，变量存放的文件目录应该是</div><div class="line">/etc/ansible/group_vars/raleigh</div><div class="line">/etc/ansible/group_vars/webservers</div><div class="line">/etc/ansible/host_vars/foosball</div></pre></td></tr></table></figure></p>
<p>不过其中的格式必须遵守ymal格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">ntp_server: acme.example.org</div><div class="line">database_server: storage.example.org</div></pre></td></tr></table></figure></p>
<p>注意：</p>
<blockquote>
<p>Tip: In Ansible 1.2 or later the group_vars/ and host_vars/ directories can exist in either the playbook directory OR the inventory directory. If both paths exist, variables in the playbook directory will be loaded second.<br>Tip: Keeping your inventory file and variables in a git repo (or other version control) is an excellent way to track changes to your inventory and host variables.</p>
<p>1.group_vars 和host_vars可以粗放在 playbook目录和 inventory 目录，如果2个目录都存在，变量将会取playbook目录中的变量。（playbook加载顺序低于inventory目录）<br>2.inventory文件建议用git等版本管理系统</p>
</blockquote>
<p>#####4.ansible 内置的控制inventory的变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">List of Behavioral Inventory Parameters</div><div class="line">As alluded to above, setting the following variables controls how ansible interacts with remote hosts. Some we have already mentioned:</div><div class="line">ansible_ssh_host</div><div class="line">  The name of the host to connect to, if different from the alias you wish to give to it.   通过ssh连接的主机ip</div><div class="line">ansible_ssh_port</div><div class="line">  The ssh port number, if not 22   通过ssh连接的主机的端口号</div><div class="line">ansible_ssh_user</div><div class="line">  The default ssh user name to use.   通过ssh连接的用户名字</div><div class="line">ansible_ssh_pass</div><div class="line">  The ssh password to use (this is insecure, we strongly recommend using --ask-pass or SSH keys)   通过ssh连接的登录用户密码（出于安全考虑。官方建议用ssh keys）</div><div class="line">ansible_sudo_pass</div><div class="line">  The sudo password to use (this is insecure, we strongly recommend using --ask-sudo-pass)          sudo用户密码</div><div class="line">ansible_connection</div><div class="line">  Connection type of the host. Candidates are local, ssh or paramiko.  The default is paramiko before        指定ssh连接类型 local，ssh，paramiko</div><div class="line">ansible_ssh_private_key_file</div><div class="line">  Private key file used by ssh.  Useful if using multiple keys and you don’t want to use SSH agent.        ssh连接使用的公钥文件</div><div class="line">ansible_shell_type</div><div class="line">    The shell type of the target system. By default commands are formatted using ’sh’-style syntax by d         指定shell解释器，模式是使用sh          </div><div class="line">ansible_python_interpreter</div><div class="line">  The target host python path. This is useful for systems with more</div><div class="line">  than one Python or not located at &quot;/usr/bin/python&quot; such as \*BSD, or where /usr/bin/python             </div><div class="line">  is not a 2.X series Python.  We do not use the &quot;/usr/bin/env&quot; mechanism as that requires the remote</div><div class="line">  path to be set right and also assumes the &quot;python&quot; executable is named python, where the executable</div><div class="line">  be named something like &quot;python26&quot;.       指定python解释器的路径</div><div class="line">ansible\_\*\_interpreter</div><div class="line">  Works for anything such as ruby or perl and works just like ansible_python_interpreter.</div><div class="line">  This replaces shebang of modules which will run on that host.   用于指定其他语言解释器</div></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">some_host         ansible_ssh_port=2222     ansible_ssh_user=manager</div><div class="line">aws_host          ansible_ssh_private_key_file=/home/example/.ssh/aws.pem</div><div class="line">freebsd_host      ansible_python_interpreter=/usr/local/bin/python</div><div class="line">ruby_module_host  ansible_ruby_interpreter=/usr/bin/ruby.1.9.3</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[install-OS-by-grub]]></title>
      <url>http://www.zhou5zhou6.com/2014/07/24/install-os-by-grub/</url>
      <content type="html"><![CDATA[<p>#grub安装centos</p>
<p>###1.通过本地镜像安装<br>例如<br>将镜像挂载，把光盘镜像中的isolinux目录下的vmlinuz 和initrd.img放到/boot下</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">title grub install</div><div class="line">        root (hd0,0)</div><div class="line">        kernel /vmlinuz method=cdrom lang=en_US keymap=us ksdevice=eth0</div><div class="line">        initrd /initrd.img</div></pre></td></tr></table></figure>
<p>###2.通过远程镜像目录安装<br>例如<br>将镜像挂载，把光盘镜像中的isolinux目录下的vmlinuz 和initrd.img放到/boot下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">title grub install</div><div class="line">        root (hd0,0)</div><div class="line">        kernel /vmlinuz  ip=10.58.104.96 netmask=255.255.252.0 gateway=10.58.104.1 dns=8.8.8.8 method=http://xx.xx.xx.xx/centos/ lang=en_US keymap=us ksdevice=eth0</div><div class="line">        initrd /initrd.img</div></pre></td></tr></table></figure>
<p>###3.如果机器没有远程管理卡，这个时候可以采用vnc<br>例如<br>将镜像挂载，把光盘镜像中的isolinux目录下的vmlinuz 和initrd.img放到/boot下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">title grub install</div><div class="line">        root (hd0,0)</div><div class="line">        kernel /vmlinuz vnc vncpassword=123456 headless ip=10.58.104.96 netmask=255.255.252.0 gateway=10.58.104.1 dns=8.8.8.8 method=http://xx.xx.xx.xx/centos/ lang=en_US keymap=us ksdevice=eth0</div><div class="line">        initrd /initrd.img</div></pre></td></tr></table></figure></p>
<p>在需要查看安装过程的机器上面可以使用vnc viewer登陆查看<br>下载地址：<a href="http://www.realvnc.com/download/" target="_blank" rel="external">http://www.realvnc.com/download/</a><br>mac下可以使用jump Desktop</p>
<p>###4.如果你有写好的ks，那么可以实现自动化安装了</p>
<p>例如<br>将镜像挂载，把光盘镜像中的isolinux目录下的vmlinuz 和initrd.img放到/boot下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">title grub install</div><div class="line">        root (hd0,0)</div><div class="line">        kernel /vmlinuz vnc vncpassword=123456 headless ip=10.58.104.96 netmask=255.255.252.0 gateway=10.58.104.1 dns=8.8.8.8 method=http://xx.xx.xx.xx/centos/ ks=http://xx.xx.xx.xx/ksgrub.cfg lang=en_US keymap=us ksdevice=eth0</div><div class="line">        initrd /initrd.img</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Kibana+Logstash+Elasticsearch+Redis安装部署]]></title>
      <url>http://www.zhou5zhou6.com/2014/07/18/kibana+logstash+elasticsearch+redis/</url>
      <content type="html"><![CDATA[<p>系统环境<br>cengos6.3 x86_64<br>logstash-1.4.1.tar.gz<br>kibana-3.1.0.zip<br>redis 2.8.13<br>elasticsearch-1.2.2.tar.gz</p>
<a id="more"></a>
<p>下载地址<br><a href="http://www.elasticsearch.org/downloads/" target="_blank" rel="external">http://www.elasticsearch.org/downloads/</a><br><a href="http://download.redis.io/releases/" target="_blank" rel="external">http://download.redis.io/releases/</a></p>
<p>####1.安装jdk</p>
<blockquote>
<p>yum -y install java-1.7.0-openjdk-src.x86_64</p>
</blockquote>
<p>####2.安装redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd /data/search</div><div class="line"> wget http://download.redis.io/releases/redis-stable.tar.gz</div><div class="line">tar zxvf redis-stable.tar.gz</div><div class="line">cd redis-stable</div><div class="line">make</div><div class="line">make test</div><div class="line">make install</div></pre></td></tr></table></figure></p>
<p>安装完毕后可执行文件的目录是/usr/local/bin/redis-server<br>创建启动关闭脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">#/bin/sh</div><div class="line"># chkconfig: - 58 74</div><div class="line"># # description: redis_6379 is the redis daemon.</div><div class="line">#Configurations injected by install_server below....</div><div class="line">EXEC=/usr/local/bin/redis-server</div><div class="line">CLIEXEC=/usr/local/bin/redis-cli</div><div class="line">PIDFILE=/var/run/redis_6379.pid</div><div class="line">CONF=&quot;/etc/redis/6379.conf&quot;</div><div class="line">REDISPORT=&quot;6379&quot;</div><div class="line">###############</div><div class="line"></div><div class="line">case &quot;$1&quot; in</div><div class="line">    start)</div><div class="line">        if [ -f $PIDFILE ]</div><div class="line">        then</div><div class="line">                echo &quot;$PIDFILE exists, process is already running or crashed&quot;</div><div class="line">        else</div><div class="line">                echo &quot;Starting Redis server...&quot;</div><div class="line">                $EXEC $CONF</div><div class="line">        fi</div><div class="line">        ;;</div><div class="line">    stop)</div><div class="line">        stop)</div><div class="line">        if [ ! -f $PIDFILE ]</div><div class="line">        then</div><div class="line">                echo &quot;$PIDFILE does not exist, process is not running&quot;</div><div class="line">        else</div><div class="line">                PID=$(cat $PIDFILE)</div><div class="line">                echo &quot;Stopping ...&quot;</div><div class="line">                $CLIEXEC -p $REDISPORT shutdown</div><div class="line">                while [ -x /proc/$&#123;PID&#125; ]</div><div class="line">                do</div><div class="line">                    echo &quot;Waiting for Redis to shutdown ...&quot;</div><div class="line">                    sleep 1</div><div class="line">                done</div><div class="line">                echo &quot;Redis stopped&quot;</div><div class="line">        fi</div><div class="line">        ;;</div><div class="line">    *)</div><div class="line">        echo &quot;Please use start or stop as first argument&quot;</div><div class="line">        ;;</div><div class="line">esac</div></pre></td></tr></table></figure></p>
<p>具体安装方法可以参照redis 的README</p>
<p>启动redis后，验证是否正常</p>
<blockquote>
<p>[root@file1 ~]# redis-cli ping<br>PONG<br>[root@file1 ~]#</p>
<p>netstat -antp | grep redis<br>tcp        0      0 0.0.0.0:6379                0.0.0.0:*                   LISTEN      12612/redis-server</p>
</blockquote>
<p>####3.安装elasticsearch</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.2.2.tar.gz</div><div class="line">tar -zxvf elasticsearch-1.2.2.tar.gz</div><div class="line">cd elasticsearch-1.2.2</div></pre></td></tr></table></figure>
<p>启动ES</p>
<blockquote>
<p>bin/elasticsearch -d</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># OPTIONS:</div><div class="line">#   -d: daemonize, start in the background</div><div class="line">#   -p &lt;filename&gt;: log the pid to a file (useful to kill it later)</div></pre></td></tr></table></figure>
<p>检查是否正常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">curl -X GET http://localhost:9200</div><div class="line">&#123;</div><div class="line">  &quot;status&quot; : 200,</div><div class="line">  &quot;name&quot; : &quot;Evangeline Whedon&quot;,</div><div class="line">  &quot;version&quot; : &#123;</div><div class="line">    &quot;number&quot; : &quot;1.2.2&quot;,</div><div class="line">    &quot;build_hash&quot; : &quot;9902f08efc3ad14ce27882b991c4c56b920c9872&quot;,</div><div class="line">    &quot;build_timestamp&quot; : &quot;2014-07-09T12:02:32Z&quot;,</div><div class="line">    &quot;build_snapshot&quot; : false,</div><div class="line">    &quot;lucene_version&quot; : &quot;4.8&quot;</div><div class="line">  &#125;,</div><div class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>####4.安装logstash<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://download.elasticsearch.org/logstash/logstash/logstash-1.4.2.tar.gz</div><div class="line"> tar -tzvf logstash-1.4.2.tar.gz</div><div class="line"> cd logstash-1.4.2</div></pre></td></tr></table></figure></p>
<p>这个和我以前用的版本还不一样，以前是一个jar文件，现在改了<br>我看了一下帮助<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">bin/logstash</div><div class="line">No command given</div><div class="line">Usage: logstash &lt;command&gt; [command args]</div><div class="line">Run a command with the --help flag to see the arguments.</div><div class="line">For example: logstash agent --help</div><div class="line"></div><div class="line">Available commands:</div><div class="line">  agent - runs the logstash agent</div><div class="line">  version - emits version info about this logstash</div><div class="line">  web - runs the logstash web ui (called Kibana)</div><div class="line">  rspec - runs tests</div></pre></td></tr></table></figure></p>
<p>分别创建配置文件<br>index.conf  运行与server端<br>ship.conf运行于客户端</p>
<p>index.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"># This is the logstash server index configuration.</div><div class="line"># This file will be put in the same folder with logtash.jar file in the</div><div class="line"># /etc/logtash/</div><div class="line"># This takes information straight from redis and loads it into elasticsearch.</div><div class="line">input &#123;</div><div class="line">  redis &#123;</div><div class="line">    host =&gt; &quot;127.0.0.1&quot;</div><div class="line">    type =&gt; &quot;syslog&quot;</div><div class="line">    threads =&gt; 4</div><div class="line">    # these settings should match the output of the agent</div><div class="line">    data_type =&gt; &quot;list&quot;</div><div class="line">    key =&gt; &quot;logstash&quot;</div><div class="line">    # We use json_event here since the sender is a logstash agent</div><div class="line">    format =&gt; &quot;json_event&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">  elasticsearch &#123;</div><div class="line">    host =&gt; &quot;127.0.0.1&quot;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>ship.conf<br>如果不是同一台机器 把ip换成中心serverip<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">input &#123;</div><div class="line">  stdin &#123;</div><div class="line">    type =&gt; &quot;test&quot;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">  stdout &#123; codec =&gt; rubydebug &#125;</div><div class="line">  redis &#123; host =&gt; &quot;127.0.0.1&quot; data_type =&gt; &quot;list&quot; key =&gt; &quot;logstash&quot; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>bin/logstash agent -f index.conf   </p>
<p>bin/logstash agent -f shipper.conf  </p>
<p>####5.配置kibana</p>
<p>logstash的最新版已经内置kibana，你也可以单独部署kibana。kibana3是纯粹JavaScript+html的客户端，所以可以部署到任意http服务器上。</p>
<p>wget <a href="https://download.elasticsearch.org/kibana/kibana/kibana-3.1.0.zip" target="_blank" rel="external">https://download.elasticsearch.org/kibana/kibana/kibana-3.1.0.zip</a></p>
<p>解压到web目录</p>
<p><a href="http://127.0.0.1/kibana/index.html" target="_blank" rel="external">http://127.0.0.1/kibana/index.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ansible_error]]></title>
      <url>http://www.zhou5zhou6.com/2014/07/16/ansible_error/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"> [DEPRECATION WARNING]: Legacy variable substitution, such as using $&#123;foo&#125; or</div><div class="line">$foo instead of &#123;&#123; foo &#125;&#125; is currently valid but will be phased out and has</div><div class="line">been out of favor since version 1.2. This is the last of legacy features on our</div><div class="line">deprecation list. You may continue to use this if you have specific needs for</div><div class="line">now. This feature will be removed in version 1.6. Deprecation warnings can be</div><div class="line">disabled by setting deprecation_warnings=False in ansible.cfg.</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>####关于变量的引用，网上有文档说可以使用用 , ${variablename} , 或者$variablename .来表示<br>但是我目前在ansible配置playbook的时候会出错，以上的内容说明在${variablename} ,   或者$variablename 1.6里面已经弃用了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ansible_install]]></title>
      <url>http://www.zhou5zhou6.com/2014/07/15/ansible_install/</url>
      <content type="html"><![CDATA[<p>通过yum安装ansible后，运行ansible报以下错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;/usr/bin/ansible&quot;, line 25, in &lt;module&gt;</div><div class="line">    from ansible.runner import Runner</div><div class="line">  File &quot;/usr/lib/python2.6/site-packages/ansible/runner/__init__.py&quot;, line 32, in &lt;module&gt;</div><div class="line">    import jinja2</div><div class="line">ImportError: No module named jinja2</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>通过yum安装jinjia2，找不到此安装包<br>后通过pip的方式安装成功<br>会自动安装上相关依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">pip install ansible</div><div class="line"></div><div class="line">Downloading/unpacking ansible</div><div class="line">  Downloading ansible-1.6.6.tar.gz (650Kb): 650Kb downloaded</div><div class="line">  Running setup.py egg_info for package ansible</div><div class="line">    warning: no files found matching &apos;packaging/distutils/setup.py&apos;</div><div class="line">Downloading/unpacking paramiko (from ansible)</div><div class="line">  Downloading paramiko-1.14.0.tar.gz (1.1Mb): 1.1Mb downloaded</div><div class="line">  Running setup.py egg_info for package paramiko</div><div class="line">Requirement already satisfied (use --upgrade to upgrade): jinja2 in /usr/lib/python2.6/site-packages (from ansible)</div><div class="line">Downloading/unpacking PyYAML (from ansible)</div><div class="line">  Downloading PyYAML-3.11.tar.gz (248Kb): 248Kb downloaded</div><div class="line">  Running setup.py egg_info for package PyYAML</div><div class="line">Requirement already satisfied (use --upgrade to upgrade): setuptools in /usr/lib/python2.6/site-packages/setuptools-0.6c11-py2.6.egg (from ansible)</div><div class="line">Downloading/unpacking pycrypto&gt;=2.6 (from ansible)</div><div class="line">  Downloading pycrypto-2.6.1.tar.gz (446Kb): 446Kb downloaded</div><div class="line">  Running setup.py egg_info for package pycrypto</div><div class="line">Downloading/unpacking ecdsa (from paramiko-&gt;ansible)</div><div class="line">  Downloading ecdsa-0.11.tar.gz (45Kb): 45Kb downloaded</div><div class="line">  Running setup.py egg_info for package ecdsa</div><div class="line">Requirement already satisfied (use --upgrade to upgrade): markupsafe in /usr/lib64/python2.6/site-packages (from jinja2-&gt;ansible)</div><div class="line">Installing collected packages: ansible, ecdsa, paramiko, pycrypto, PyYAML</div><div class="line">  Running setup.py install for ansible</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CPU frequency and voltage scaling code in the Linux]]></title>
      <url>http://www.zhou5zhou6.com/2014/07/01/cpuscaling/</url>
      <content type="html"><![CDATA[<p>##CPU frequency and voltage scaling code in the Linux(TM) kernel</p>
<p>   最近测试7家服务器厂商，测试cpu的过程中发现有的开了cpu节能模式，有的未开。</p>
<ul>
<li>查看方式<blockquote>
<p>model name    : Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz<br>cpu MHz       : 2099.887</p>
</blockquote>
</li>
</ul>
<a id="more"></a>
<p>  如果关闭了节能模式，cpu MHz 会和model name几乎一致</p>
<p>  说到cpu节能模式，不能不提cpu的c-state p-state t-state</p>
<blockquote>
<p> P-States are OS controllable, (based as well on peformance profile). While C-States only change when CPU is idle, P-States changes during execution.<br>T-States are “a sort of” P-State, as it changes during execution, they can be OS controllable but often also HW-controllable. They are mostly used during thermal events on the CPU (overheat etc.). P-States change voltage and frequency parameters, but T-States “stops” the CPU for brief moments. The uses and when to go to a certain state is based on (user or powerdevice controlled) power profiles, latency and device interaction etc.</p>
</blockquote>
<p> 说白了就是c-state就是cpu state，基本上cpu停止运行；p state 则是降频，降电压，cpu还会继续运行；t-state则是根据系统温度，跑一下，停一下降低温度。</p>
<h4 id="关于c-state"><a href="#关于c-state" class="headerlink" title="关于c-state"></a>关于c-state</h4><p><a href="http://www.hardwaresecrets.com/article/Everything-You-Need-to-Know-About-the-CPU-C-States-Power-Saving-Modes/611/1" target="_blank" rel="external">Everything You Need to Know About the CPU C-States Power Saving Modes</a></p>
<p>####调整cpu频率<br>首先确定cpu频率调节功能是否启用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ls -l /sys/devices/system/cpu/cpu0/</div><div class="line">总用量 0</div><div class="line">drwxr-xr-x 6 root root    0 7月   1 14:01 cache</div><div class="line">drwxr-xr-x 3 root root    0 7月   1 14:02 cpufreq</div><div class="line">-r-------- 1 root root 4096 7月   1 14:02 crash_notes</div><div class="line">drwxr-xr-x 2 root root    0 7月   1 14:02 microcode</div><div class="line">drwxr-xr-x 2 root root    0 7月   1 14:02 thermal_throttle</div><div class="line">drwxr-xr-x 2 root root    0 7月   1 14:02 topology</div></pre></td></tr></table></figure></p>
<p>如果有cpufreq文件夹说明频率调节功能已经启用。<br>如果没有启用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ls /lib/modules/`uname -r`/kernel/arch/*/kernel/cpu/cpufreq</div><div class="line"></div><div class="line">```    </div><div class="line"></div><div class="line">我这里可以查到的</div></pre></td></tr></table></figure></p>
<pre><code>acpi-cpufreq.ko  p4-clockmod.ko  powernow-k8.ko
mperf.ko         pcc-cpufreq.ko  speedstep-lib.ko
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">|Module     |Description|</div><div class="line">| :------------ | :---------- </div><div class="line">|intel_pstate | This driver implements a scaling driver with an internal governor for Intel Core (SandyBridge and newer) processors.</div><div class="line">|acpi-cpufreq | CPUFreq driver which utilizes the ACPI Processor Performance States. This driver also supports Intel Enhanced SpeedStep (previously supported by the deprecated speedstep-centrino module).</div><div class="line">|speedstep-lib |    CPUFreq drive for Intel speedstep enabled processors (mostly atoms and older pentiums (&lt; 3))</div><div class="line">|powernow-k8 |  CPUFreq driver for K8/K10 Athlon64/Opteron/Phenom processors. Deprecated since linux 3.7 - Use acpi_cpufreq.</div><div class="line">|pcc-cpufreq |  This driver supports Processor Clocking Control interface by Hewlett-Packard and Microsoft Corporation which is useful on some Proliant servers.</div><div class="line">|p4-clockmod |  CPUFreq driver for Intel Pentium 4 / Xeon / Celeron processors. When enabled it will lower CPU temperature by skipping clocks.You probably want to use a Speedstep driver instead.| </div><div class="line"></div><div class="line"></div><div class="line">如果还是没有文件夹的话，建议检查一下bios是否打开了；或者查看模块是否加载</div><div class="line"></div><div class="line">查看cpu 支持的速度调节范围</div></pre></td></tr></table></figure>
<p>cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies<br>```</p>
<p>或者使用工具 cpufrequtils （yum install cpufrequtils）里面的cpufreq-info</p>
<p>修改cpu频率可以选择使用适当的调节器</p>
<p>Governors (see table below) are power schemes for the CPU. Only one may be active at a time. For details, see the kernel documentation in the kernel source.</p>
<table>
<thead>
<tr>
<th style="text-align:left">Governor</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ondemand</td>
<td style="text-align:left">Dynamically switch between CPU(s) available if at 95% cpu load</td>
</tr>
<tr>
<td style="text-align:left">performance</td>
<td style="text-align:left">Run the cpu at max frequency</td>
</tr>
<tr>
<td style="text-align:left">conservative</td>
<td style="text-align:left">Dynamically switch between CPU(s) available if at 75% load</td>
</tr>
<tr>
<td style="text-align:left">powersave</td>
<td style="text-align:left">Run the cpu at the minimum frequency</td>
</tr>
<tr>
<td style="text-align:left">userspace</td>
<td style="text-align:left">Run the cpu at user specified frequencies </td>
</tr>
</tbody>
</table>
<p>查看当前的调节器</p>
<blockquote>
<p>cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</p>
</blockquote>
<p>更改使用的调节器，需要加载相应的内核模块，再更改scaling_governor文件，例如：</p>
<blockquote>
<p> modprobe cpufreq_conservative<br> echo conservative &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</p>
</blockquote>
<p>另外可以通过软件调整cpu频率</p>
<blockquote>
<p>  cpudynd<br>    cpufreqd<br>    cpufrequtils<br>    powernowd<br>    powersaved<br>    speedfreqd </p>
</blockquote>
<p>参考资料：</p>
<p><a href="http://linux-wiki.cn/wiki/zh-cn/CPU%E9%A2%91%E7%8E%87%E8%B0%83%E8%8A%82%28SpeedStep,_PowerNow%29" target="_blank" rel="external">http://linux-wiki.cn/wiki/zh-cn/CPU%E9%A2%91%E7%8E%87%E8%B0%83%E8%8A%82%28SpeedStep,_PowerNow%29</a><br><a href="https://wiki.archlinux.org/index.php/CPU_frequency_scaling" target="_blank" rel="external">https://wiki.archlinux.org/index.php/CPU_frequency_scaling</a><br><a href="https://www.kernel.org/doc/Documentation/cpu-freq/governors.txt" target="_blank" rel="external">https://www.kernel.org/doc/Documentation/cpu-freq/governors.txt</a><br><a href="https://software.intel.com/sites/default/files/comment/1716807/how-to-change-frequency-on-linux-pub.txt" target="_blank" rel="external">https://software.intel.com/sites/default/files/comment/1716807/how-to-change-frequency-on-linux-pub.txt</a><br><a href="http://blog.chinaunix.net/uid-25871104-id-3072582.html" target="_blank" rel="external">http://blog.chinaunix.net/uid-25871104-id-3072582.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Lm_sensors]]></title>
      <url>http://www.zhou5zhou6.com/2014/06/11/mac_5/</url>
      <content type="html"><![CDATA[<p>##查看linux服务器温度</p>
<p>###1.ipmitool<br>for example</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipmitool sdr type Temperature</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipmitool sensor list</div></pre></td></tr></table></figure></p>
<p>当然还可以查询许多东西 例如<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">ipmitool sdr type</div><div class="line">Sensor Types:</div><div class="line">    Temperature                 Voltage</div><div class="line">    Current                     Fan</div><div class="line">    Physical Security           Platform Security</div><div class="line">    Processor                   Power Supply</div><div class="line">    Power Unit                  Cooling Device</div><div class="line">    Other                       Memory</div><div class="line">    Drive Slot / Bay            POST Memory Resize</div><div class="line">    System Firmwares            Event Logging Disabled</div><div class="line">    Watchdog                    System Event</div><div class="line">    Critical Interrupt          Button</div><div class="line">    Module / Board              Microcontroller</div><div class="line">    Add-in Card                 Chassis</div><div class="line">    Chip Set                    Other FRU</div><div class="line">    Cable / Interconnect        Terminator</div><div class="line">    System Boot Initiated       Boot Error</div><div class="line">    OS Boot                     OS Critical Stop</div><div class="line">    Slot / Connector            System ACPI Power State</div><div class="line">    Watchdog                    Platform Alert</div><div class="line">    Entity Presence             Monitor ASIC</div><div class="line">    LAN                         Management Subsystem Health</div><div class="line">    Battery                     Session Audit</div><div class="line">    Version Change              FRU State</div></pre></td></tr></table></figure>
<p>如果我想查看风扇转速</p>
<p>那么就是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipmitool sdr type Fan</div></pre></td></tr></table></figure></p>
<p>###2.lm_sensors</p>
<p>官网：<a href="http://www.lm-sensors.org/" target="_blank" rel="external">http://www.lm-sensors.org/</a></p>
<p>安装方式：yum -y install lm_sensors</p>
<p>或者 到官网下载tar包编译安装</p>
<p>安装完毕，需要执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sensors-detect</div></pre></td></tr></table></figure></p>
<p>然后会有提示，一路回车就行，安装的是kernel模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"># sensors-detect revision 1.1</div><div class="line"># System: Quanta S210-X22RQ V2</div><div class="line"></div><div class="line">This program will help you determine which kernel modules you need</div><div class="line">to load to use lm_sensors most effectively. It is generally safe</div><div class="line">and recommended to accept the default answers to all questions,</div><div class="line">unless you know what you&apos;re doing.</div><div class="line"></div><div class="line">Some south bridges, CPUs or memory controllers contain embedded sensors.</div><div class="line">Do you want to scan for them? This is totally safe. (YES/no):</div><div class="line">Silicon Integrated Systems SIS5595...                       No</div><div class="line">VIA VT82C686 Integrated Sensors...                          No</div><div class="line">VIA VT8231 Integrated Sensors...                            No</div><div class="line">AMD K8 thermal sensors...                                   No</div><div class="line">AMD Family 11h thermal sensors...                           No</div><div class="line">Intel digital thermal sensor...                             Success!</div><div class="line">    (driver `coretemp&apos;)</div><div class="line">Intel AMB FB-DIMM thermal sensor...                         No</div><div class="line">VIA C7 thermal and voltage sensors...                       No</div><div class="line"></div><div class="line">Some Super I/O chips contain embedded sensors. We have to write to</div><div class="line">standard I/O ports to probe them. This is usually safe.</div><div class="line">Do you want to scan for Super I/O sensors? (YES/no):</div><div class="line">Probing for Super-I/O at 0x2e/0x2f</div><div class="line">Trying family `National Semiconductor&apos;...                   No</div><div class="line">Trying family `SMSC&apos;...                                     No</div><div class="line">Trying family `VIA/Winbond/Nuvoton/Fintek&apos;...               No</div><div class="line">Trying family `ITE&apos;...                                      No</div><div class="line">Probing for Super-I/O at 0x4e/0x4f</div><div class="line">Trying family `National Semiconductor&apos;...                   No</div><div class="line">Trying family `SMSC&apos;...                                     No</div><div class="line">Trying family `VIA/Winbond/Nuvoton/Fintek&apos;...               No</div><div class="line">Trying family `ITE&apos;...                                      No</div><div class="line"></div><div class="line">Some systems (mainly servers) implement IPMI, a set of common interfaces</div><div class="line">through which system health data may be retrieved, amongst other things.</div><div class="line">We first try to get the information from SMBIOS. If we don&apos;t find it</div><div class="line">there, we have to read from arbitrary I/O ports to probe for such</div><div class="line">interfaces. This is normally safe. Do you want to scan for IPMI</div><div class="line">interfaces? (YES/no):</div><div class="line">Found `IPMI BMC KCS&apos; at 0xca2...                            Success!</div><div class="line">    (confidence 8, driver `ipmisensors&apos;)</div><div class="line"></div><div class="line">Some hardware monitoring chips are accessible through the ISA I/O ports.</div><div class="line">We have to write to arbitrary I/O ports to probe them. This is usually</div><div class="line">safe though. Yes, you do have ISA I/O ports even if you do not have any</div><div class="line">ISA slots! Do you want to scan the ISA I/O ports? (YES/no):</div><div class="line"></div><div class="line">Lastly, we can probe the I2C/SMBus adapters for connected hardware</div><div class="line">monitoring devices. This is the most risky part, and while it works</div><div class="line">reasonably well on most systems, it has been reported to cause trouble</div><div class="line">on some systems.</div><div class="line">Do you want to probe the I2C/SMBus adapters now? (YES/no):</div><div class="line">Found unknown SMBus adapter 8086:1d70 at 0000:08:00.3.</div><div class="line">Found unknown SMBus adapter 8086:1d22 at 0000:00:1f.3.</div><div class="line">Sorry, no supported PCI bus adapters found.</div><div class="line">Module i2c-dev loaded successfully.</div><div class="line"></div><div class="line">Next adapter: SMBus I801 adapter at 9000 (i2c-0)</div><div class="line">Do you want to scan it? (YES/no/selectively):</div><div class="line"></div><div class="line">Next adapter: SMBus I801 adapter at 7100 (i2c-1)</div><div class="line">Do you want to scan it? (YES/no/selectively):</div><div class="line"></div><div class="line">Now follows a summary of the probes I have just done.</div><div class="line">Just press ENTER to continue:</div><div class="line"></div><div class="line">Driver `coretemp&apos;:</div><div class="line">  * Chip `Intel digital thermal sensor&apos; (confidence: 9)</div><div class="line"></div><div class="line">Driver `ipmisensors&apos;:</div><div class="line">  * ISA bus, address 0xca2</div><div class="line">    Chip `IPMI BMC KCS&apos; (confidence: 8)</div><div class="line"></div><div class="line">Warning: the required module ipmisensors is not currently installed</div><div class="line">on your system. If it is built into the kernel then it&apos;s OK.</div><div class="line">Otherwise, check http://www.lm-sensors.org/wiki/Devices for</div><div class="line">driver availability.</div><div class="line"></div><div class="line">Do you want to overwrite /etc/sysconfig/lm_sensors? (YES/no):</div><div class="line">Starting lm_sensors: loading module ipmi-si coretemp       [  OK  ]</div><div class="line">Unloading i2c-dev... OK</div></pre></td></tr></table></figure></p>
<p>然后执行sensors,温度就出来了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">coretemp-isa-0000</div><div class="line">Adapter: ISA adapter</div><div class="line">Physical id 0: +34.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 0:        +34.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 1:        +33.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 2:        +32.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 3:        +32.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 4:        +33.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 5:        +34.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line"></div><div class="line">coretemp-isa-0006</div><div class="line">Adapter: ISA adapter</div><div class="line">Physical id 1: +37.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 0:        +36.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 1:        +33.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 2:        +34.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 3:        +37.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 4:        +35.0°C  (high = +74.0°C, crit = +84.0°C)</div><div class="line">Core 5:        +34.0°C  (high = +74.0°C, crit = +84.0°C)</div></pre></td></tr></table></figure>
<blockquote>
<p>有的时候执行完毕报<br>No sensors found!<br>Make sure you loaded all the kernel drivers you need.<br>Try sensors-detect to find out which these are.</p>
<p>此时看是否加载了coretemp这个模块，如果没有加载请modprobe coretemp</p>
</blockquote>
<p>如果你想知道主板等温度或者风扇转速 需要安装ipmisensors 这个模块<br>不过<a href="http://www.lm-sensors.org/wiki/Devices" target="_blank" rel="external">(2004-12-12)  Port to Linux 2.6 originally by Yani Ioannou, essentially abandoned now. Better use  ipmitool instead. It doesn’t integrate with lm-sensors but that’s the best we can propose at the moment. </a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cpu burn-in]]></title>
      <url>http://www.zhou5zhou6.com/2014/06/11/mac_4/</url>
      <content type="html"><![CDATA[<p>###CPU Burn-in 压力测试cpu<br>官网：<a href="http://cpuburnin.com/" target="_blank" rel="external">http://cpuburnin.com/</a><br>下载地址: <a href="http://www.cpuburnin.com/downloads/cpuburn-in.tar.gz" target="_blank" rel="external">http://www.cpuburnin.com/downloads/cpuburn-in.tar.gz</a><br>安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar zxvf cpuburn-in.tar.gz;chmod 755 cpuburn-in;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>执行：<br>./cpuburn-in 执行时长</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CPU Burn-in v1.00 - Linux</div><div class="line">-------------------------</div><div class="line">Michal Mienik (c) 2000. http://cpuburnin.com</div><div class="line"></div><div class="line">usage: number of minutes to run test</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">./cpuburn-in 1</div><div class="line">CPU Burn-in v1.00 - Linux</div><div class="line">-------------------------</div><div class="line">Michal Mienik (c) 2000. http://cpuburnin.com</div><div class="line"></div><div class="line">0 iterations complete.</div><div class="line">5000 iterations complete.</div><div class="line">10000 iterations complete.</div><div class="line">15000 iterations complete.</div><div class="line">20000 iterations complete.</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">440000 iterations complete.</div><div class="line">445000 iterations complete.</div><div class="line">450000 iterations complete.</div><div class="line"></div><div class="line">Test Complete. No errors were found after running 453316 tests.</div></pre></td></tr></table></figure>
<p>cpu burn-in 压力测试仅支持单核，如果机器有多核，那么可以打开多个进程进行压力测试。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">top - 14:35:09 up 70 days,  2:13,  2 users,  load average: 0.49, 0.16, 0.10</div><div class="line">Tasks: 628 total,   2 running, 626 sleeping,   0 stopped,   0 zombie</div><div class="line">Cpu0  :  0.0%us,  0.3%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu1  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu2  :  0.3%us,  0.3%sy,  0.0%ni, 99.3%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu3  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu4  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu5  :  0.0%us,  0.7%sy,  0.0%ni, 99.3%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu6  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu7  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu8  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu9  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu10 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu11 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu12 : 99.7%us,  0.3%sy,  0.0%ni,  0.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu13 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu14 :  0.3%us,  0.0%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu15 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu16 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu17 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu18 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu19 :  0.0%us,  0.3%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu20 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu21 :  0.0%us,  0.3%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu22 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Cpu23 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</div><div class="line">Mem:  32827584k total, 32063716k used,   763868k free,    19164k buffers</div><div class="line">Swap:  6143992k total,  1390052k used,  4753940k free, 28238688k cached</div></pre></td></tr></table></figure></p>
<p>###安装过程排障</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> ./cpuburn-in</div><div class="line">-bash: ./cpuburn-in: /lib/ld-linux.so.2: bad ELF interpreter: 没有那个文件或目录</div></pre></td></tr></table></figure>
<p>####解决方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install glibc.i686</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[shell-init]]></title>
      <url>http://www.zhou5zhou6.com/2014/06/05/mac_3/</url>
      <content type="html"><![CDATA[<pre><code>shell-init: error retrieving current directory: getcwd: cannot access parent directories: 没有那个文件或目录
启动 puppetmaster：
Port: 18140shell-init: error retrieving current directory: getcwd: cannot access parent directories: 没有那个文件或目录
/usr/lib/ruby/site_ruby/1.8/puppet/util/plugins.rb:49:in `expand_path&apos;: No such file or directory - getcwd (Errno::ENOENT)
    from /usr/lib/ruby/site_ruby/1.8/puppet/util/plugins.rb:49:in `look_in&apos;
    from /usr/lib/ruby/site_ruby/1.8/puppet/util/plugins.rb:49:in `collect&apos;
    from /usr/lib/ruby/site_ruby/1.8/puppet/util/plugins.rb:49:in `look_in&apos;
    from /usr/lib/ruby/site_ruby/1.8/puppet/util/plugins.rb:54
    from /usr/lib/ruby/site_ruby/1.8/puppet/application.rb:2:in `require&apos;
    from /usr/lib/ruby/site_ruby/1.8/puppet/application.rb:2
    from /usr/lib/ruby/site_ruby/1.8/puppet/application/master.rb:1:in `require&apos;
    from /usr/lib/ruby/site_ruby/1.8/puppet/application/master.rb:1
    from /usr/sbin/puppetmasterd:3:in `require&apos;
    from /usr/sbin/puppetmasterd:3
                                                           [失败]
Port: 28140shell-init: error retrieving current dire
</code></pre><a id="more"></a>
<p>####解决方法</p>
<p>找不到某个目录，当时把某个目录删除了，结果导致执行重启的时候没有得到原先的目录，所以此时只要在执行重启的目录CD到一个正常存在目录即可；    </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[英语角]]></title>
      <url>http://www.zhou5zhou6.com/2014/06/03/mac_2/</url>
      <content type="html"><![CDATA[<p>####frame<br>    美音 /frem/ 英音 /freɪm/     </p>
<blockquote>
<p>data frame 数据帧<br>Frame rate 帧率；帧速率；帧频；画面更新率<br>time frame 时间框架；时间帧；时间范围；期限</p>
</blockquote>
<p>####segment<br>    美音 /‘sɛɡmənt/ 英音 /‘segm(ə)nt/</p>
<blockquote>
<p>code segment 代码段</p>
</blockquote>
<a id="more"></a>
<p>####omitt<br>    美音 /ə’mɪt/ 英音 /ə(ʊ)’mɪt/</p>
<blockquote>
<p>vt. 省略；遗漏；删除；疏忽</p>
</blockquote>
<p>####instance<br>    美音 /‘ɪnstəns/ 英音 /‘ɪnst(ə)ns/</p>
<blockquote>
<p>n. 例子, 实例<br>instance name<br>instance variable</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[virtual box]]></title>
      <url>http://www.zhou5zhou6.com/2014/05/30/mac-1/</url>
      <content type="html"><![CDATA[<p>MAC OS 下面打开虚拟机有以下提示框出现</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Failed to load VMMR0.r0 (VERR_SUPLIB_WORLD_WRITABLE)</div></pre></td></tr></table></figure>
<p>解决方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo chmod 755 /Applications</div><div class="line">sudo chmod 755 /Applications/Virtualbox.app</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[test]]></title>
      <url>http://www.zhou5zhou6.com/2014/05/26/test/</url>
      <content type="html"></content>
    </entry>
    
  
  
</search>
